#!/bin/bash -

#
# This script reads and writes entries from a Chado database.
# Examples:
# writedb_entry -help
# writedb_entry -s Pf3D7_01 Pf3D7_05 Pf3D7_07
#
# The Java JRE to use is taken from the ARTEMIS_JAVA_JRE
# environment variable. If this is not set then the JRE is defaulted to 
# a Java 8 version.
#

QUIET=no
PRG=$0
PROXY_SETTINGS=

add_proxy_properties() {

	if [[ "$http_proxy" = "" ]]
	then
		http_proxy=$HTTP_PROXY
	fi
	
	if [[ "$http_proxy" = "" ]]
	then
	 	http_proxy=$HTTP_proxy
	fi
	
	if [[ "$http_proxy" != "" ]]
	then
		PROXY_SETTINGS="${PROXY_SETTINGS} -DproxySet=true "`echo $http_proxy | sed 's/http:\/\/\(.*\):\(.*\)/ -Dhttp.proxyHost=\1 -Dhttp.proxyPort=\2/'`
	fi
}

#
# Resolve links - $0 may be a link
#
while [ -h "$PRG" ] ; do
	ls=`ls -ld "$PRG"`
	link=`expr "$ls" : '.*-> \(.*\)$'`
	if expr "$link" : '.*/.*' > /dev/null; then
		PRG="$link"
	else
		PRG="`dirname $PRG`/$link"
	fi
done

#
# Allow URLs to work from behind firewalls.
#
add_proxy_properties

FLAGS="-mx2048m -ms20m -Djdbc.drivers=org.postgresql.Driver -Dibatis"
DEFAULT_CONNECTION="-Dchado=db.genedb.org:5432/snapshot?genedb_ro -Dread_only"
APPLICATION_HOME=`dirname "$PRG"`/..
JAR_NAME=artemis.jar
JAR_FILE=$APPLICATION_HOME/target/unix-jars/$JAR_NAME

#
# Use a custom Java version if necessary
#
if [[ "$ARTEMIS_JAVA_JRE" = "" ]]
then
	JAVA=`which java`
else
	JAVA_HOME=$ARTEMIS_JAVA_JRE
	JAVA=$ARTEMIS_JAVA_JRE/bin/java
fi

JAVA_VERSION=`${JAVA} -version 2>&1`
echo ${JAVA_VERSION}

#
# Parse arguments.
#
while test $# != 0
    do
    case $1 in
    -Dchado*)
       DEFAULT_CONNECTION="$1" ;;
    -D*)
       FLAGS="$FLAGS $1" ;;
    *) break ;;
    esac
    shift
done

# searches for the -c option (needs to know the index)
idx=0
for arg in "$@"
do
	if [ '-c' == "${arg}" ]; then
		let "nextID = $idx + 1";
		DEFAULT_CONNECTION="-Dchado=${!nextID}"
	fi
	if [ '-l' == "${arg}" ]; then
		let "nextID = $idx + 2";
        eval MAPPING_PATH="${!nextID}"
		CLASSPATH="${MAPPING_PATH}:$CLASSPATH"
		export CLASSPATH
	fi
	let idx++
done

if [[ "$QUIET" = "no" ]]
then
    echo "Starting writedb_entry with arguments: $PROXY_SETTINGS $DEFAULT_CONNECTION $FLAGS $@"
    echo "Classpath: $CLASSPATH"
fi

$JAVA $PROXY_SETTINGS $DEFAULT_CONNECTION $FLAGS -cp "$JAR_FILE" uk.ac.sanger.artemis.io.ReadAndWriteEntry "$@"
result=$?

exit $result
