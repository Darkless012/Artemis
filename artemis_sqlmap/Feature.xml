<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE sqlMap 
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
 

<sqlMap namespace="Feature"> 
 
     <typeAlias alias="ChadoFeature"
        type="uk.ac.sanger.artemis.chado.ChadoFeature"/>
        
     <typeAlias alias="ChadoTransaction"
        type="uk.ac.sanger.artemis.chado.ChadoTransaction"/>
     
    <parameterMap id="schema-cvlist" 
                  class="ChadoFeature">
       <parameter property="schema" javaType="java.lang.String"/>
       <parameter property="featureCvterms" javaType="java.util.List"/>
    </parameterMap> 

    <resultMap id="select-feature" 
               class="ChadoFeature">
        <result property="timelastmodified" column="timelastmodified"/>
   	    <result property="id" column="id"/>
  	    <result property="feature_relationship.object_id" column="object_id"/>
  	    <result property="feature_relationship.cvterm.cvtermId" column="relation_type_id"/>
  	    <result property="feature_relationship.rank" column="rank"/>
        <result property="featureloc.strand" column="strand" nullValue="0"/>
        <result property="featureloc.fmin" column="fmin" nullValue="-1"/>
        <result property="featureloc.fmax" column="fmax" nullValue="0"/>
        <result property="featureloc.phase" column="phase" nullValue="10"/>
        <result property="uniquename" column="uniquename"/>
        <result property="cvterm.cvtermId" column="type_id"/>
        <result property="featureprop.cvterm.cvtermId" column="prop_type_id" nullValue="0"/>
        <result property="featureprop.value" column="value"/>
        <result property="featureprop.rank" column="prop_rank" nullValue="0"/>
     </resultMap>

    <!-- mapping for feature table and lazy loading of feature_dbxref, feature_relationship,
         featureprop, organism tables -->
    <resultMap id="select-feature-lazy" 
               class="ChadoFeature">       
        <result property="timelastmodified" column="timelastmodified"/>
   	    <result property="id" column="id"/>
        <result property="uniquename" column="uniquename"/>
        <result property="name" column="name"/>
        <result property="length" column="length" nullValue="-999" />
        <result property="cvterm" column="type_id" select="selectCvterm" />
        <result property="featurelocsForFeatureId" column="{id=id}" 
                                                   select="getFeatureLoc" />
        <result property="featurepropList" column="{feature_id=id}" 
                                           select="selectFeatureProp" />
        <result property="featureDbxrefs" column="{id=id}"
                                          select="getDbxref" />
        <result property="featureRelationshipsForObjectId" column="{object_id=id}" 
                                           select="getFeatureRelationship" />  
        <result property="featureRelationshipsForSubjectId" column="{subject_id=id}" 
                                           select="getFeatureRelationship" /> 
        <result property="featureSynonymsForFeatureId" column="{uniquename=uniquename}" 
                                           select="getLazyAlias" />                          
        <result property="organism" column="organism_id" select="getOrganism" />
     </resultMap>
     
     <resultMap id="select-feature-sequence-result" 
                class="ChadoFeature">
        <result property="name" column="name"/>
        <result property="residues" column="residues"/>
     </resultMap>
    
     <resultMap id="select-feature-with-residues-result" 
                class="ChadoFeature">
        <result property="organism.abbreviation" column="abbreviation"/>
        <result property="name" column="name"/>
        <result property="uniquename" column="uniquename"/>
        <result property="id" column="feature_id"/>
        <result property="cvterm.cvtermId" column="type_id"/>
     </resultMap>

     <resultMap id="select-featureprop" 
                class="uk.ac.sanger.artemis.chado.ChadoFeatureProp">
        <result property="value" column="value" />
        <result property="rank" column="rank" />
        <result property="cvterm" column="type_id" select="selectCvterm" />
     </resultMap>
     
     <resultMap id="select-relationship" 
                class="uk.ac.sanger.artemis.chado.ChadoFeatureRelationship">
        <result property="subject_id" column="subject_id" />
        <result property="object_id" column="object_id" />
        <result property="value" column="value" />
        <result property="rank" column="rank" />
        <result property="cvterm" column="type_id" select="selectCvterm" />
     </resultMap>
     
     <resultMap id="select-location"
                class="uk.ac.sanger.artemis.chado.ChadoFeatureLoc">
        <result property="srcfeature_id" column="srcfeature_id" nullValue="-999" />
        <result property="fmin"   column="fmin"   nullValue="-999" />
        <result property="fmax"   column="fmax"   nullValue="-999" />
        <result property="strand" column="strand" nullValue="0" />
        <result property="phase"  column="phase"  nullValue="0" />
        <result property="residue_info"  column="residue_info"/>
        <result property="locgroup"  column="locgroup"/>
        <result property="rank"      column="rank"/>
     </resultMap>
        
     <!-- select featureprops e.g. for lazy loading -->
     <select id="selectFeatureProp" resultMap="select-featureprop">
       SELECT type_id, value, rank 
       FROM featureprop
       WHERE feature_id=#feature_id#
     </select>
     
     <!--  select feature_relationship -->
     <select id="getFeatureRelationship" resultMap="select-relationship">
       SELECT subject_id, object_id, type_id, value, rank 
       FROM feature_relationship
       WHERE
         <dynamic>
             <isNotNull property="object_id">                        
               object_id=#object_id#
             </isNotNull>
             <isNotNull property="subject_id">                        
               subject_id=#subject_id#
             </isNotNull>
         </dynamic>
     </select>
     
     <!--  select featureloc -->
     <select id="getFeatureLoc" resultMap="select-location">
       SELECT srcfeature_id, fmin, fmax, strand, phase, residue_info, locgroup, rank
       FROM  featureloc
       WHERE featureloc.feature_id=#id#
     </select>
     
     <select id="getFeatureName" parameterClass="ChadoFeature" 
                                 resultClass="java.lang.String"> 
   	   SELECT name
       FROM feature WHERE feature_id=$id$
     </select> 

     <!-- get feature id -->
     <select id="getFeatureID" parameterClass="ChadoTransaction"
                               resultClass="ChadoFeature">
        SELECT feature_id AS id, uniquename FROM feature WHERE
        <dynamic>
          <isNotNull property="uniquename">
            <iterate property="uniquename" conjunction="OR">
               feature.uniquename='$uniquename[]$'
            </iterate>
          </isNotNull>
          
          <isNotNull property="parents">
            <iterate property="parents" conjunction="OR">
               feature.uniquename='$parents[]$'
            </iterate>
          </isNotNull>
          
          <isNotNull property="derives_from">
            <iterate property="derives_from" conjunction="OR">
               feature.uniquename='$derives_from[]$'
            </iterate>
          </isNotNull>
        </dynamic>
     </select>

     <select id="getFeature" parameterClass="ChadoFeature" 
                             resultMap="select-feature">
        SELECT
          timelastmodified, 
          f.feature_id AS id, 
          fr.object_id,
          fr.type_id AS relation_type_id,
          fr.rank, 
          fl.strand, 
          fmin, 
          fmax, 
          uniquename,
          f.type_id,  
          fp.type_id AS prop_type_id,
          fp.rank AS prop_rank,
          fp.value,
          fl.phase
        FROM feature f
        LEFT JOIN feature_relationship fr ON fr.subject_id = f.feature_id
        LEFT JOIN featureprop fp          ON fp.feature_id = f.feature_id
        LEFT JOIN featureloc fl           ON f.feature_id  = fl.feature_id
        WHERE
            <dynamic>
             <isGreaterThan property="featureloc.srcfeature_id" compareValue="0"> 
               srcfeature_id=$featureloc.srcfeature_id$ 
             </isGreaterThan>
             <isNotNull property="uniquename">                        
               uniquename LIKE #uniquename# 
             </isNotNull>
           </dynamic>    
        ORDER BY f.type_id,  uniquename
     </select>
 
    <select id="getSequence" parameterClass="ChadoFeature" 
                             resultClass="ChadoFeature">
       SELECT *
       FROM feature 
       WHERE feature_id=$id$
    </select>

    <select id="getSchema" resultClass="java.lang.String">
       SELECT schema_name FROM information_schema.schemata WHERE schema_name=schema_owner
         ORDER BY schema_name
    </select>

    <select id="getResidueType" parameterClass="java.lang.String" 
            resultClass="java.lang.Long">
       SELECT DISTINCT type_id 
       FROM $value$.feature 
       WHERE residues notnull
    </select>


    <select id="getResidueFeatures" parameterMap="schema-cvlist"
            resultMap="select-feature-with-residues-result">
       SELECT
         abbreviation,
         name,
         uniquename,
         feature_id,
         type_id
       FROM organism, $schema$.feature WHERE
         organism.organism_id=$schema$.feature.organism_id AND
         residues notnull
         <iterate prepend="AND" property="featureCvterms" conjunction="OR" open="(" close=")">
           type_id=#featureCvterms[]#
         </iterate>
       ORDER BY abbreviation
    </select>

    <select id="getLazyFeature" resultMap ="select-feature-lazy" 
                            parameterClass="ChadoFeature">
	 SELECT
	    timelastmodified,
	 	f.feature_id AS id,
	 	uniquename,
	 	organism_id,
		name,
	 	f.type_id,
		seqlen AS length
	 FROM feature f
	 WHERE
	   <dynamic>
          <isGreaterThan property="id" compareValue="0"> 
            f.feature_id=$id$ AND
          </isGreaterThan>
          <isNotNull property="uniquename">                        
            uniquename LIKE #uniquename# AND
          </isNotNull>
          <isGreaterThan property="cvterm.cvtermId" compareValue="0"> 
            feature.type_id=$cvterm.cvtermId$ AND
          </isGreaterThan>
       </dynamic>
         f.feature_id > 0
    </select>

    <select id="getOrganismID" resultClass="java.lang.Integer" 
            parameterClass="ChadoFeature">
      SELECT organism_id FROM feature f WHERE
             f.feature_id=$featureloc.srcfeature_id$
    </select>

    <select id="getTimeLastModified" resultClass="java.sql.Timestamp"
            parameterClass="ChadoFeature">
      SELECT timelastmodified FROM feature f WHERE
             f.uniquename=#uniquename#
    </select>
    
    <select id="currval" resultClass="java.lang.Integer" 
            parameterClass="java.lang.String">
      SELECT currval('$value$')
    </select>



    <!--  WRITE BACK METHODS -->
    <update id="updateAttributes" 
            parameterClass="ChadoTransaction">
      UPDATE $chadoTable$
      SET
      <iterate property="properties" conjunction=",">
         $properties[]$
      </iterate>

      <isNotEqual property="chadoTable" compareValue="feature">
        FROM feature
      </isNotEqual>

      WHERE
           feature.feature_id=$chadoTable$.feature_id AND (
      <iterate property="uniquename" conjunction="OR">
           feature.uniquename='$uniquename[]$'
      </iterate>
      )
      <dynamic>
        <isNotNull property="constraint">
           <iterate prepend="AND" property="constraint" conjunction="AND">
             $constraint[]$
           </iterate>
        </isNotNull>
      </dynamic>
    </update>

    <insert id="insertAttributes" 
            parameterClass="ChadoTransaction">
      INSERT INTO $chadoTable$
      ( 
        feature_id 
        <iterate prepend="," property="propertiesName" conjunction="," >
          $propertiesName[]$
        </iterate>
      ) VALUES
      (
        $feature_id$
        <iterate prepend="," property="propertiesValue" conjunction="," >
          $propertiesValue[]$
        </iterate>
      )
    </insert>

    <delete id="deleteAttributes" 
            parameterClass="ChadoTransaction">
      DELETE FROM $chadoTable$
      WHERE
        <iterate property="constraint" conjunction="AND">
          $constraint[]$
        </iterate>
        AND
        feature_id=$feature_id$
    </delete>

    <insert id="insertFeature" 
            parameterClass="ChadoFeature">
      INSERT INTO feature 
        ( feature_id, organism_id, name, uniquename, type_id )
      VALUES
        ( nextval('feature_feature_id_seq'),
          $organism.id$,
          #name#,
          #uniquename#,
          $cvterm.cvtermId$ )
    </insert>

    <insert id="insertFeatureLoc" 
            parameterClass="ChadoFeature">
      INSERT INTO featureloc
        ( featureloc_id, feature_id, srcfeature_id, fmin, fmax, strand, phase )
      VALUES
        ( nextval('featureloc_featureloc_id_seq'),
          $id$,
          $featureloc.srcfeature_id$,
          $featureloc.fmin$,
          $featureloc.fmax$,
          $featureloc.strand$,
          $featureloc.phase$ )
    </insert>

   <delete id="deleteFeature" 
           parameterClass="ChadoFeature">
      DELETE FROM feature
      WHERE uniquename=#uniquename#
   </delete>
   
   <insert id="insertFeatureRelationship" 
           parameterClass="ChadoFeature">
      INSERT INTO feature_relationship
        ( subject_id, object_id, type_id )
      VALUES
        ( $feature_relationship.subject_id$,
          $feature_relationship.object_id$,
          (SELECT cvterm_id FROM cvterm WHERE name=#feature_relationship.cvterm.name#) )
   </insert>

   <update id="updateFeatureRelationshipsForSubjectId" 
           parameterClass="ChadoTransaction">
      UPDATE feature_relationship
      SET
      <iterate property="properties" conjunction=",">
         $properties[]$
      </iterate>
      WHERE feature_relationship.subject_id=
           ( SELECT feature_id FROM feature WHERE uniquename=#chadoFeature.uniquename# )
      AND   feature_relationship.object_id=
           ( SELECT feature_id FROM feature WHERE uniquename=#parent_uniquename# )
   </update>
</sqlMap> 
