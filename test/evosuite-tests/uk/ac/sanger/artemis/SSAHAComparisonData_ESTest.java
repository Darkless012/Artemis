/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 05:54:40 GMT 2017
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.MalformedInputException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.SSAHAComparisonData;
import uk.ac.sanger.artemis.SimpleComparisonData;
import uk.ac.sanger.artemis.util.LinePushBackReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SSAHAComparisonData_ESTest extends SSAHAComparisonData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        SSAHAComparisonData.makeMatchFromStringStatic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData();
      try { 
        sSAHAComparisonData0.makeMatchFromString("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading SSAHA data: not enough fields in this line: 
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData();
      // Undeclared exception!
      try { 
        sSAHAComparisonData0.makeMatchFromString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        SSAHAComparisonData.formatCorrect((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-121);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charsetDecoder0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(inputStreamReader0);
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
        fail("Expecting exception: MalformedInputException");
      
      } catch(Throwable e) {
         //
         // Input length = 1
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData((LinePushBackReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.SimpleComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      try { 
        SSAHAComparisonData.makeMatchFromStringStatic("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading SSAHA data: not enough fields in this line: 
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(lineNumberReader0);
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(charArrayReader0);
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // while reading SSAHA data: not enough fields in this line: I\u0000\u0000\u0000\u0000\u0000
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = SSAHAComparisonData.formatCorrect("UKZJf#pR>9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData();
      SimpleComparisonData simpleComparisonData0 = sSAHAComparisonData0.getNewSimpleComparisonData();
      assertNotSame(simpleComparisonData0, sSAHAComparisonData0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 35);
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charsetDecoder0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(inputStreamReader0);
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
}
