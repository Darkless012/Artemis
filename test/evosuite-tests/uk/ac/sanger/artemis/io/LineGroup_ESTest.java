/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:31:50 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.CharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.FastaStreamSequence;
import uk.ac.sanger.artemis.io.LineGroup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineGroup_ESTest extends LineGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = LineGroup.getLineType("&Tv/_qWK.");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = LineGroup.getRestOfLine("N/,M&6KJG1{");
      assertEquals("6KJG1{", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = LineGroup.getLineType("gk>bZT^%/A%");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = LineGroup.getLineType("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int int0 = LineGroup.getLineType("4^e2Wn t'&nm&Px2^2");
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FastaStreamSequence fastaStreamSequence0 = new FastaStreamSequence("6KJG1{");
      assertEquals(4, fastaStreamSequence0.getFormatType());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      LineGroup.writeEndOfEMBLEntry(charArrayWriter0);
      assertEquals(3, charArrayWriter0.size());
      assertEquals("//\n", charArrayWriter0.toString());
  }
}
