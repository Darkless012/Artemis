/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:57:13 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.UI;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UI_ESTest extends UI_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.warn("WARN", "");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.SCRIPT;
      UI.mode = uI_UIMode0;
      UI.info("$VALUES", "$VALUES");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.SCRIPT;
      UI.mode = uI_UIMode0;
      UI.error("&m*hF~L#d,G", "&m*hF~L#d,G");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("a! 9r(pqx/%7w");
      String string0 = UI.userInput("a! 9r(pqx/%7w", false);
      String string1 = UI.userInput("", false);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("\b ");
      String string0 = UI.userInput("", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.error("v", "a! 9r(pqx/%7w");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.CONSOLE;
      UI.mode = uI_UIMode0;
      UI.message("\b ", "y", "Vb)ur~T");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.message("o", "q3)4GVRwt", "");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.CONSOLE;
      UI.mode = uI_UIMode0;
      String string0 = "";
      SystemInUtil.addInputLine("y");
      UI.booleanUserInput((String) null, "Vb)ur~T");
      // Undeclared exception!
      try { 
        UI.booleanUserInput(string0, string0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.SCRIPT;
      UI.mode = uI_UIMode0;
      UI.message("p4If8$^p(1r6d", "p4If8$^p(1r6d", "1>]4jaZ$");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.CONSOLE;
      UI.mode = uI_UIMode0;
      SystemInUtil.addInputLine("y");
      boolean boolean0 = UI.booleanUserInput((String) null, "Vb)ur~T");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.CONSOLE;
      UI.mode = uI_UIMode0;
      // Undeclared exception!
      try { 
        UI.booleanUserInput((String) null, "Vb)ur~T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.UI", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UI.UIMode uI_UIMode0 = UI.UIMode.SCRIPT;
      UI.mode = uI_UIMode0;
      boolean boolean0 = UI.booleanUserInput((String) null, "Vb)ur~T");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.booleanUserInput((String) null, "Vb)ur~T");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.userInput("a! 9r(pqx/%7w", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.UI", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UI.initalise();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UI uI0 = new UI();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        UI.info("DWm@xqVLX+S7nsq!%", "@}0~zw{N'A,/ p");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
