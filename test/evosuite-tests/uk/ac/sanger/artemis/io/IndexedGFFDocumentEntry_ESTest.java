/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 15:03:23 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.Clipboard;
import javax.swing.JPasswordField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Selection;
import uk.ac.sanger.artemis.io.IndexedGFFDocumentEntry;
import uk.ac.sanger.artemis.util.ByteBuffer;
import uk.ac.sanger.artemis.util.DatabaseDocument;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexedGFFDocumentEntry_ESTest extends IndexedGFFDocumentEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("org.biojava.bio.dist.AbstractOrderNDistribution$UniformNullModel");
      Selection selection0 = new Selection(clipboard0);
      uk.ac.sanger.artemis.FeatureVector featureVector0 = selection0.getSelectedFeatures();
      // Undeclared exception!
      try { 
        IndexedGFFDocumentEntry.contains((uk.ac.sanger.artemis.Feature) null, featureVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.IndexedGFFDocumentEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("z{N!eG", 32);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("z{N!eG", jPasswordField0, "pxuT-cTJV%yQ1_", ">QOqRv!\"=*CQ", byteBuffer0, "z{N!eG");
      IndexedGFFDocumentEntry indexedGFFDocumentEntry0 = new IndexedGFFDocumentEntry(databaseDocument0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      boolean boolean0 = IndexedGFFDocumentEntry.isIndexed(mockFile0);
      assertFalse(boolean0);
  }
}
