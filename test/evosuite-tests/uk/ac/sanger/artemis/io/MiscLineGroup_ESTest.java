/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:34:09 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.EmblMisc;
import uk.ac.sanger.artemis.io.GFFMisc;
import uk.ac.sanger.artemis.util.LinePushBackReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MiscLineGroup_ESTest extends MiscLineGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmblMisc emblMisc0 = new EmblMisc("");
      String string0 = emblMisc0.getLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmblMisc emblMisc0 = new EmblMisc("^Iw3CAGG.]9u&");
      String string0 = emblMisc0.getLine();
      assertEquals("^Iw3CAGG.]9u&", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmblMisc emblMisc0 = new EmblMisc("");
      StringWriter stringWriter0 = new StringWriter();
      emblMisc0.writeToStream(stringWriter0);
      assertEquals("\n", stringWriter0.toString());
      assertEquals("", emblMisc0.getLine());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EmblMisc emblMisc0 = new EmblMisc("^Iw3CAGG.]9u&");
      emblMisc0.setLine("^Iw3CAGG.]9u&");
      assertEquals("^Iw3CAGG.]9u&", emblMisc0.getLine());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(charArrayReader0);
      GFFMisc gFFMisc0 = new GFFMisc(linePushBackReader0);
      assertEquals("\u0000\u0000\u0000\u0000", gFFMisc0.getLine());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EmblMisc emblMisc0 = new EmblMisc("^Iw3CAGG.]9u&");
      String string0 = emblMisc0.toString();
      assertEquals("^Iw3CAGG.]9u&\n", string0);
  }
}
