/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 14:47:36 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.StringReader;
import javax.swing.JPasswordField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.FeatureHeader;
import uk.ac.sanger.artemis.util.ByteBuffer;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.LinePushBackReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FeatureHeader_ESTest extends FeatureHeader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K|@=[Ra.]Oz*v0j");
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(stringReader0);
      FeatureHeader featureHeader0 = new FeatureHeader(linePushBackReader0);
      assertEquals("", featureHeader0.getLine());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FeatureHeader featureHeader0 = null;
      try {
        featureHeader0 = new FeatureHeader((LinePushBackReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.FeatureHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("");
      ByteBuffer byteBuffer0 = new ByteBuffer();
      byteBuffer0.append("");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "XM|Fv%z%[", "XM|Fv%z%[", byteBuffer0, (String) null);
      LinePushBackReader linePushBackReader0 = databaseDocument0.getLinePushBackReader();
      FeatureHeader featureHeader0 = new FeatureHeader(linePushBackReader0);
      assertEquals("", featureHeader0.getLine());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(charArrayReader0);
      FeatureHeader featureHeader0 = new FeatureHeader(linePushBackReader0);
      assertEquals("", featureHeader0.getLine());
  }
}
