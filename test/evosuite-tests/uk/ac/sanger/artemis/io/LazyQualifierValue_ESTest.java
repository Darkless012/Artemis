/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:29:22 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.FeatureLocLazyQualifierValue;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LazyQualifierValue_ESTest extends LazyQualifierValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      org.gmod.schema.sequence.Feature feature0 = new org.gmod.schema.sequence.Feature();
      FeatureLocLazyQualifierValue featureLocLazyQualifierValue0 = new FeatureLocLazyQualifierValue(feature0, (-296));
      featureLocLazyQualifierValue0.setForceLoad(false);
      assertFalse(featureLocLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      org.gmod.schema.sequence.Feature feature0 = new org.gmod.schema.sequence.Feature();
      FeatureLocLazyQualifierValue featureLocLazyQualifierValue0 = new FeatureLocLazyQualifierValue(feature0, (-296));
      String string0 = featureLocLazyQualifierValue0.getString();
      assertEquals("LAZY LOADING...;", string0);
  }
}
