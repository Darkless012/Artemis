/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:15:49 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.FuzzyRange;
import uk.ac.sanger.artemis.io.LowerInteger;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.UpperInteger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FuzzyRange_ESTest extends FuzzyRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = Integer.getInteger("eeTfp3'~eb7", 356);
      Integer integer1 = new Integer(734);
      Range range0 = FuzzyRange.makeRange((Object) integer0, (Object) integer1);
      assertEquals(379, range0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      FuzzyRange fuzzyRange0 = (FuzzyRange)FuzzyRange.makeRange((Object) range0, (Object) range0);
      FuzzyRange fuzzyRange1 = (FuzzyRange)fuzzyRange0.getEndObject();
      assertSame(fuzzyRange1, range0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = range0.copy();
      assertEquals(0, range1.getEnd());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpperInteger upperInteger0 = new UpperInteger((-2923));
      Range range0 = FuzzyRange.makeRange((Object) upperInteger0);
      Range range1 = range0.copy();
      assertNotSame(range0, range1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = range0.change((-1), (-1));
      assertEquals(1, range1.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      UpperInteger upperInteger0 = new UpperInteger(1);
      Range range0 = FuzzyRange.makeRange((Object) upperInteger0);
      try { 
        FuzzyRange.makeRange((Object) range0, (Object) integer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // start: 1 > end: 0
         //
         verifyException("uk.ac.sanger.artemis.io.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1563);
      LowerInteger lowerInteger0 = new LowerInteger(integer0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0, (Object) integer0);
      try { 
        range0.change(1384, (-1));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // start: 1384 > end: -1
         //
         verifyException("uk.ac.sanger.artemis.io.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        FuzzyRange.makeRange((Object) null, (Object) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error: object is not recognised: null
         //
         verifyException("uk.ac.sanger.artemis.io.FuzzyRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1563);
      LowerInteger lowerInteger0 = new LowerInteger(integer0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0, (Object) integer0);
      Range range1 = range0.change(896, 896);
      assertEquals(1, range1.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpperInteger upperInteger0 = new UpperInteger(269);
      Range range0 = FuzzyRange.makeRange((Object) upperInteger0);
      Range range1 = range0.change((-1232), 1802);
      assertEquals(3035, range1.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = range0.change(0, 0);
      assertEquals(1, range1.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Range range0 = FuzzyRange.makeRange((Object) integer0, (Object) integer0);
      Range range1 = FuzzyRange.makeRange((Object) range0);
      Range range2 = FuzzyRange.makeRange((Object) range0, (Object) range1);
      String string0 = range2.toString();
      assertEquals("(0.0)..(0.0)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      String string0 = range0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = FuzzyRange.makeRange((Object) range0, (Object) range0);
      boolean boolean0 = range0.equals(range1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      boolean boolean0 = range0.equals(range0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range range0 = new Range(26);
      Range range1 = FuzzyRange.makeRange((Object) range0, (Object) range0);
      boolean boolean0 = range1.equals(range0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        FuzzyRange.makeRange((Object) "826");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error: object is not recognised: 826
         //
         verifyException("uk.ac.sanger.artemis.io.FuzzyRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpperInteger upperInteger0 = new UpperInteger((-1));
      Range range0 = FuzzyRange.makeRange((Object) upperInteger0);
      Range range1 = FuzzyRange.makeRange((Object) range0, (Object) upperInteger0);
      assertEquals((-1), range1.getStart());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      UpperInteger upperInteger0 = new UpperInteger(24);
      // Undeclared exception!
      try { 
        FuzzyRange.makeRange(object0, (Object) upperInteger0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error: object is not recognised: java.lang.Object@3e596271
         //
         verifyException("uk.ac.sanger.artemis.io.FuzzyRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = FuzzyRange.makeRange((Object) range0, (Object) range0);
      boolean boolean0 = range1.equals(range0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Range range0 = FuzzyRange.makeRange((Object) integer0);
      assertEquals(0, range0.getEnd());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1));
      Range range0 = FuzzyRange.makeRange((Object) integer0, (Object) integer1);
      assertEquals(2, range0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = Integer.valueOf(1563);
      // Undeclared exception!
      try { 
        FuzzyRange.makeRange((Object) integer0, (Object) "<1563");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error: object is not recognised: <1563
         //
         verifyException("uk.ac.sanger.artemis.io.FuzzyRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0);
      Range range1 = range0.copy();
      boolean boolean0 = range0.equals(range1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      FuzzyRange fuzzyRange0 = (FuzzyRange)FuzzyRange.makeRange((Object) lowerInteger0);
      LowerInteger lowerInteger1 = (LowerInteger)fuzzyRange0.getStartObject();
      assertSame(lowerInteger1, lowerInteger0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = Integer.valueOf(1563);
      LowerInteger lowerInteger0 = new LowerInteger(integer0);
      Range range0 = FuzzyRange.makeRange((Object) lowerInteger0, (Object) integer0);
      Range range1 = range0.copy();
      assertEquals(1, range1.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LowerInteger lowerInteger0 = new LowerInteger(0);
      FuzzyRange fuzzyRange0 = (FuzzyRange)FuzzyRange.makeRange((Object) lowerInteger0);
      FuzzyRange fuzzyRange1 = (FuzzyRange)fuzzyRange0.getEndObject();
      assertNull(fuzzyRange1);
  }
}
