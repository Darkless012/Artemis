/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:01:51 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.EntryGroup;
import uk.ac.sanger.artemis.FeatureChangeEvent;
import uk.ac.sanger.artemis.SimpleEntryGroup;
import uk.ac.sanger.artemis.io.ChadoCanonicalGene;
import uk.ac.sanger.artemis.io.DatabaseInferredFeature;
import uk.ac.sanger.artemis.io.EmblStreamFeature;
import uk.ac.sanger.artemis.io.GenbankStreamSequence;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.RangeVector;
import uk.ac.sanger.artemis.sequence.Bases;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatabaseInferredFeature_ESTest extends DatabaseInferredFeature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(1511);
      RangeVector rangeVector0 = new RangeVector(range0);
      Location location0 = new Location(rangeVector0, false);
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, (QualifierVector) null, chadoCanonicalGene0);
      // Undeclared exception!
      try { 
        databaseInferredFeature0.updateInferredLocations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DatabaseInferredFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(1511);
      RangeVector rangeVector0 = new RangeVector(range0);
      Location location0 = new Location(rangeVector0, false);
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, (QualifierVector) null, chadoCanonicalGene0);
      // Undeclared exception!
      try { 
        databaseInferredFeature0.featureChanged((FeatureChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DatabaseInferredFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GenbankStreamSequence genbankStreamSequence0 = new GenbankStreamSequence("parse error after reading \"");
      Bases bases0 = new Bases(genbankStreamSequence0);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup(bases0);
      Key key0 = Key.CDS;
      Range range0 = new Range(1511);
      RangeVector rangeVector0 = new RangeVector(range0);
      Location location0 = new Location(rangeVector0, false);
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, (QualifierVector) null, chadoCanonicalGene0);
      uk.ac.sanger.artemis.Entry entry0 = simpleEntryGroup0.createEntry();
      // Undeclared exception!
      try { 
        DatabaseInferredFeature.createFeature("parse error after reading \"", databaseInferredFeature0, chadoCanonicalGene0, entry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.PublicDBDocumentEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseInferredFeature.addListenersToEntryGroup((EntryGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DatabaseInferredFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Key key0 = Key.CDS;
      QualifierVector qualifierVector0 = new QualifierVector();
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = null;
      try {
        databaseInferredFeature0 = new DatabaseInferredFeature(key0, (Location) null, qualifierVector0, chadoCanonicalGene0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.GFFStreamFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Key key0 = new Key("D==Y");
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      QualifierVector qualifierVector0 = new QualifierVector();
      Range range0 = new Range(4395, 4395);
      Location location0 = new Location(range0);
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, qualifierVector0, chadoCanonicalGene0);
      databaseInferredFeature0.setLocation(location0);
      assertFalse(databaseInferredFeature0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GenbankStreamSequence genbankStreamSequence0 = new GenbankStreamSequence("parse error after reading \"");
      Bases bases0 = new Bases(genbankStreamSequence0);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup(bases0);
      DatabaseInferredFeature.addListenersToEntryGroup(simpleEntryGroup0);
      assertEquals(27, simpleEntryGroup0.getSequenceLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Key key0 = new Key("D==Y");
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      QualifierVector qualifierVector0 = new QualifierVector();
      Range range0 = new Range(4395, 4395);
      Location location0 = new Location(range0);
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, qualifierVector0, chadoCanonicalGene0);
      databaseInferredFeature0.addFeatureListeners();
      assertFalse(databaseInferredFeature0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(27);
      RangeVector rangeVector0 = new RangeVector(range0);
      Location location0 = new Location(rangeVector0, false);
      QualifierVector qualifierVector0 = new QualifierVector();
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, qualifierVector0, chadoCanonicalGene0);
      // Undeclared exception!
      try { 
        databaseInferredFeature0.addFeatureListeners();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DatabaseInferredFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmblStreamFeature emblStreamFeature0 = new EmblStreamFeature();
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      // Undeclared exception!
      try { 
        DatabaseInferredFeature.createFeature("Couldn't apply annotator ", emblStreamFeature0, chadoCanonicalGene0, (uk.ac.sanger.artemis.Entry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DatabaseInferredFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(1511);
      RangeVector rangeVector0 = new RangeVector(range0);
      Location location0 = new Location(rangeVector0, false);
      ChadoCanonicalGene chadoCanonicalGene0 = new ChadoCanonicalGene();
      DatabaseInferredFeature databaseInferredFeature0 = new DatabaseInferredFeature(key0, location0, (QualifierVector) null, chadoCanonicalGene0);
      databaseInferredFeature0.setLocation(location0);
  }
}
