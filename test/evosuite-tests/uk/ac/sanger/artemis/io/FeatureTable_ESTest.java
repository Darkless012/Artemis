/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:14:07 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.Feature;
import uk.ac.sanger.artemis.io.FeatureEnumeration;
import uk.ac.sanger.artemis.io.FeatureVector;
import uk.ac.sanger.artemis.io.GenbankStreamFeature;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.ReadOnlyEmblStreamFeature;
import uk.ac.sanger.artemis.io.StreamFeatureTable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FeatureTable_ESTest extends FeatureTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature();
      streamFeatureTable0.add(genbankStreamFeature0);
      Range range0 = new Range(0, 35);
      FeatureVector featureVector0 = streamFeatureTable0.getFeaturesInRange(range0);
      assertEquals(100, featureVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature();
      streamFeatureTable0.add(genbankStreamFeature0);
      // Undeclared exception!
      try { 
        streamFeatureTable0.remove((Feature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.FeatureComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      // Undeclared exception!
      try { 
        streamFeatureTable0.add((Feature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.FeatureTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      FeatureEnumeration featureEnumeration0 = streamFeatureTable0.features();
      assertNotNull(featureEnumeration0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      int int0 = streamFeatureTable0.indexOf((Feature) null);
      assertEquals((-999), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature();
      int int0 = streamFeatureTable0.indexOf(genbankStreamFeature0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      Key key0 = new Key("", false);
      Range range0 = new Range(1002);
      Location location0 = new Location(range0);
      ReadOnlyEmblStreamFeature readOnlyEmblStreamFeature0 = new ReadOnlyEmblStreamFeature(key0, location0, (QualifierVector) null);
      streamFeatureTable0.add(readOnlyEmblStreamFeature0);
      Feature feature0 = streamFeatureTable0.remove(readOnlyEmblStreamFeature0);
      assertSame(feature0, readOnlyEmblStreamFeature0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      Feature feature0 = streamFeatureTable0.remove((Feature) null);
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      FeatureVector featureVector0 = streamFeatureTable0.getAllFeatures();
      assertEquals("[]", featureVector0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      boolean boolean0 = streamFeatureTable0.contains((Feature) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      int int0 = streamFeatureTable0.getFeatureCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      Range range0 = new Range(0, 35);
      FeatureVector featureVector0 = streamFeatureTable0.getFeaturesInRange(range0);
      assertEquals("[]", featureVector0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      Feature feature0 = streamFeatureTable0.getFeatureAtIndex(35);
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StreamFeatureTable streamFeatureTable0 = new StreamFeatureTable();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature();
      streamFeatureTable0.add(genbankStreamFeature0);
      Feature feature0 = streamFeatureTable0.getFeatureAtIndex(35);
      assertNull(feature0);
  }
}
