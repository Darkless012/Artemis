/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:40:57 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.KeyVector;
import uk.ac.sanger.artemis.io.QualifierInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QualifierInfo_ESTest extends QualifierInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo("", (-1224), keyVector0, keyVector0, false);
      qualifierInfo0.isValidFor(key0);
      assertFalse(qualifierInfo0.isOnceOnly());
      assertEquals((-1224), qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo((String) null, 0, keyVector0, keyVector0, true);
      boolean boolean0 = qualifierInfo0.isOnceOnly();
      assertTrue(boolean0);
      assertEquals(0, qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("3mXjPt&\"", 3, (KeyVector) null, (KeyVector) null, true);
      qualifierInfo0.getValidKeys();
      assertTrue(qualifierInfo0.isOnceOnly());
      assertEquals(3, qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo("", (-1224), keyVector0, keyVector0, false);
      qualifierInfo0.getValidKeys();
      assertEquals((-1224), qualifierInfo0.getType());
      assertFalse(qualifierInfo0.isOnceOnly());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo("", 0, keyVector0, keyVector0, false);
      int int0 = qualifierInfo0.getType();
      assertFalse(qualifierInfo0.isOnceOnly());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("3mXjPt&\"", 3, (KeyVector) null, (KeyVector) null, true);
      int int0 = qualifierInfo0.getType();
      assertTrue(qualifierInfo0.isOnceOnly());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("", 1, keyVector0, (KeyVector) null, true);
      qualifierInfo0.getRequiredKeys();
      assertTrue(qualifierInfo0.isOnceOnly());
      assertEquals(1, qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo("", (-1224), keyVector0, keyVector0, false);
      qualifierInfo0.getRequiredKeys();
      assertEquals((-1224), qualifierInfo0.getType());
      assertFalse(qualifierInfo0.isOnceOnly());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("3mXjPt&\"", 3, (KeyVector) null, (KeyVector) null, true);
      qualifierInfo0.getName();
      assertEquals(3, qualifierInfo0.getType());
      assertTrue(qualifierInfo0.isOnceOnly());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      QualifierInfo qualifierInfo0 = new QualifierInfo("", (-1224), keyVector0, keyVector0, false);
      qualifierInfo0.getName();
      assertFalse(qualifierInfo0.isOnceOnly());
      assertEquals((-1224), qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      keyVector0.add((Object) "O[AKle6z*12Er]");
      QualifierInfo qualifierInfo0 = new QualifierInfo("O[AKle6z*12Er]", (-2108), keyVector0, keyVector0, false);
      Key key0 = new Key((String) null, false);
      // Undeclared exception!
      try { 
        qualifierInfo0.isRequiredFor(key0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("\"opt\"");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("none");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("text");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("\"list\"");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("number");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = QualifierInfo.getQualifierTypeID("\"text\"");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        QualifierInfo.getQualifierTypeID("lis{");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // unknown type string: lis{
         //
         verifyException("uk.ac.sanger.artemis.io.QualifierInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("3mXjPt&\"", 3, (KeyVector) null, (KeyVector) null, true);
      Key key0 = new Key("3mXjPt&\"");
      boolean boolean0 = qualifierInfo0.isRequiredFor(key0);
      assertTrue(qualifierInfo0.isOnceOnly());
      assertFalse(boolean0);
      assertEquals(3, qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("uHs8[", (-2509), keyVector0, keyVector0, false);
      boolean boolean0 = qualifierInfo0.isRequiredFor(key0);
      assertTrue(boolean0);
      assertFalse(qualifierInfo0.isOnceOnly());
      assertEquals((-2509), qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Key key0 = new Key((String) null, true);
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("LdJW9'I0f*mt", 10, keyVector0, keyVector0, true);
      // Undeclared exception!
      try { 
        qualifierInfo0.isValidFor(key0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("3mXjPt&\"", 3, (KeyVector) null, (KeyVector) null, true);
      Key key0 = new Key("3mXjPt&\"");
      boolean boolean0 = qualifierInfo0.isValidFor(key0);
      assertTrue(qualifierInfo0.isOnceOnly());
      assertEquals(3, qualifierInfo0.getType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo((String) null, 1, keyVector0, keyVector0, true);
      KeyVector keyVector1 = qualifierInfo0.getRequiredKeys();
      assertEquals(1, qualifierInfo0.getType());
      assertNotNull(keyVector1);
      assertTrue(qualifierInfo0.isOnceOnly());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo((String) null, 1, keyVector0, keyVector0, true);
      qualifierInfo0.getName();
      assertTrue(qualifierInfo0.isOnceOnly());
      assertEquals(1, qualifierInfo0.getType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Key key0 = Key.CDS;
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("uHs8[", (-2509), keyVector0, keyVector0, false);
      int int0 = qualifierInfo0.getType();
      assertFalse(qualifierInfo0.isOnceOnly());
      assertEquals((-2509), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Key key0 = new Key("m[)j", false);
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("m[)j", 2000, keyVector0, keyVector0, false);
      boolean boolean0 = qualifierInfo0.isOnceOnly();
      assertEquals(2000, qualifierInfo0.getType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Key key0 = new Key("JSnKK@I|=`ex+nb");
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("g`ra\"b}", 2145, keyVector0, keyVector0, true);
      KeyVector keyVector1 = qualifierInfo0.getValidKeys();
      assertEquals(2145, qualifierInfo0.getType());
      assertTrue(qualifierInfo0.isOnceOnly());
      assertNotNull(keyVector1);
  }
}
