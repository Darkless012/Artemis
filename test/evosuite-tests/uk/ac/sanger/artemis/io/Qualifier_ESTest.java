/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 15:18:38 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Qualifier_ESTest extends Qualifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      String string0 = qualifier0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("IegCrxXVkDB2ggYzkx", "IegCrxXVkDB2ggYzkx");
      String string0 = qualifier0.getName();
      assertEquals("IegCrxXVkDB2ggYzkx", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      // Undeclared exception!
      try { 
        qualifier0.removeValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.Qualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      StringVector stringVector0 = qualifier0.getValues();
      assertNull(stringVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("");
      String string0 = qualifier0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("IegCrxXVkDB2ggYzkx", "IegCrxXVkDB2ggYzkx");
      qualifier0.removeValue("IegCrxXVkDB2ggYzkx");
      assertEquals("IegCrxXVkDB2ggYzkx", qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      qualifier0.addValue("d1z{uul");
      assertNull(qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("IegCrxXVkDB2ggYzkx", "IegCrxXVkDB2ggYzkx");
      qualifier0.addValue("IegCrxXVkDB2ggYzkx");
      assertEquals("IegCrxXVkDB2ggYzkx", qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringVector stringVector0 = new StringVector("g*fb7ko1");
      Qualifier qualifier0 = new Qualifier("g*fb7ko1", stringVector0);
      StringVector stringVector1 = qualifier0.getValues();
      assertTrue(stringVector1.equals((Object)stringVector0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringVector stringVector0 = new StringVector();
      Qualifier qualifier0 = null;
      try {
        qualifier0 = new Qualifier("eWS`-^SGCF>na2T", stringVector0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - zero length values vector
         //
         verifyException("uk.ac.sanger.artemis.io.Qualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      qualifier0.addValues((StringVector) null);
      assertNull(qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("");
      Qualifier qualifier1 = qualifier0.copy();
      assertEquals("", qualifier1.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("IegCrxXVkDB2ggYzkx", "IegCrxXVkDB2ggYzkx");
      StringVector stringVector0 = new StringVector("IegCrxXVkDB2ggYzkx");
      qualifier0.addValues(stringVector0);
      qualifier0.removeValue("IegCrxXVkDB2ggYzkx");
      assertEquals("IegCrxXVkDB2ggYzkx", qualifier0.getName());
  }
}
