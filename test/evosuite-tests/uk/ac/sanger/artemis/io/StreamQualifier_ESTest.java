/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 04:54:39 GMT 2017
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.BlastEntryInformation;
import uk.ac.sanger.artemis.io.EntryInformation;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.KeyVector;
import uk.ac.sanger.artemis.io.MSPcrunchEntryInformation;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.io.QualifierInfo;
import uk.ac.sanger.artemis.io.SimpleEntryInformation;
import uk.ac.sanger.artemis.io.StreamQualifier;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StreamQualifier_ESTest extends StreamQualifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntryInformation entryInformation0 = SimpleEntryInformation.getDefaultEntryInformation();
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("E5X'Kbx$4t:yA3io60n", "failed to read a qualifier name from this string: ", entryInformation0);
      assertEquals("E5X'Kbx$4t:yA3io60n", qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier((String) null, " used with conflicting types", blastEntryInformation0);
      assertNull(qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("Z'Ak", "^F", blastEntryInformation0);
      assertEquals("Z'Ak", qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("1KI(", (-1321), (KeyVector) null, (KeyVector) null, false);
      Qualifier qualifier0 = new Qualifier("", "/7H'qs=m<");
      StringVector stringVector0 = StreamQualifier.toStringVector(qualifierInfo0, qualifier0);
      assertEquals("[/=\"/7H'qs=m<\"]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      String string0 = StreamQualifier.readValue(lineNumberReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QualifierInfo qualifierInfo0 = new QualifierInfo("oBz", (-2864), (KeyVector) null, (KeyVector) null, true);
      // Undeclared exception!
      try { 
        StreamQualifier.toStringVector(qualifierInfo0, (Qualifier) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        StreamQualifier.toString((QualifierInfo) null, (Qualifier) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        StreamQualifier.readValue((BufferedReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      LineNumberReader lineNumberReader0 = new LineNumberReader(pipedReader0);
      try { 
        StreamQualifier.readValue(lineNumberReader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        StreamQualifier.readName((BufferedReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      charArrayReader0.close();
      try { 
        StreamQualifier.readName(bufferedReader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      // Undeclared exception!
      try { 
        StreamQualifier.makeStreamQualifier((String) null, (String) null, blastEntryInformation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      try { 
        StreamQualifier.makeStreamQualifier("-zD@//1w", "hit the end of line while looking for a \"", blastEntryInformation0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // unbalanced quotes: hit the end of line while looking for a \"
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MSPcrunchEntryInformation mSPcrunchEntryInformation0 = new MSPcrunchEntryInformation();
      try { 
        StreamQualifier.makeStreamQualifier("\"/y^{~S@?(vz+saMk.2_", "\"/y^{~S@?(vz+saMk.2_", mSPcrunchEntryInformation0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // unbalanced quotes: \"/y^{~S@?(vz+saMk.2_
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("", "/7H'qs=m<");
      StringVector stringVector0 = StreamQualifier.toStringVector((QualifierInfo) null, qualifier0);
      assertEquals("[/=\"/7H'qs=m<\"]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 702, 0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      BufferedReader bufferedReader0 = new BufferedReader(inputStreamReader0, 3);
      String string0 = StreamQualifier.readValue(bufferedReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l&aUydJmLUQ})sQP");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1222);
      String string0 = StreamQualifier.readValue(bufferedReader0);
      assertEquals("l& aUydJmLUQ})sQP", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<T77B5z8@cVSVk@:*O");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      try { 
        StreamQualifier.readName(bufferedReader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // failed to read a qualifier name from this string: <T77B5z8@cVSVk@:*O
         //
         verifyException("uk.ac.sanger.artemis.io.StreamQualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      String string0 = StreamQualifier.readName(bufferedReader0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      String string0 = StreamQualifier.readName(bufferedReader0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("OoKbd>x,p~@~/", (String) null);
      StringVector stringVector0 = StreamQualifier.toStringVector((QualifierInfo) null, qualifier0);
      assertEquals("[/OoKbd>x,p~@~/]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Key key0 = new Key("^%&V");
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("^%&V", 0, keyVector0, keyVector0, true);
      Qualifier qualifier0 = new Qualifier("u");
      StringVector stringVector0 = StreamQualifier.toStringVector(qualifierInfo0, qualifier0);
      assertNotNull(stringVector0);
      assertEquals("[/u]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      QualifierInfo qualifierInfo0 = new QualifierInfo("^F", 513, (KeyVector) null, (KeyVector) null, true);
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("$1\"\"$2", "s", blastEntryInformation0);
      StringVector stringVector0 = StreamQualifier.toStringVector(qualifierInfo0, qualifier0);
      assertEquals("[/$1\"\"$2=s]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier((String) null, (String) null);
      String string0 = StreamQualifier.toString((QualifierInfo) null, qualifier0);
      assertEquals("/null", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      QualifierInfo qualifierInfo0 = new QualifierInfo("uk.ac.sanger.artemis.io.StreamQualifier", 0, (KeyVector) null, (KeyVector) null, true);
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("", "uk.ac.sanger.artemis.io.StreamQualifier", blastEntryInformation0);
      qualifier0.removeValue("uk.ac.sanger.artemis.io.StreamQualifier");
      String string0 = StreamQualifier.toString(qualifierInfo0, qualifier0);
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      QualifierInfo qualifierInfo0 = new QualifierInfo("\n", 2414, (KeyVector) null, (KeyVector) null, true);
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("uk.ac.sanger.artemis.io.ReadFormatException", "uk.ac.sanger.artemis.io.ReadFormatException", blastEntryInformation0);
      String string0 = StreamQualifier.toString(qualifierInfo0, qualifier0);
      assertEquals("/uk.ac.sanger.artemis.io.ReadFormatException=uk.ac.sanger.artemis.io.ReadFormatException", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      QualifierInfo qualifierInfo0 = new QualifierInfo("\n", 2414, (KeyVector) null, (KeyVector) null, true);
      blastEntryInformation0.addQualifierInfo(qualifierInfo0);
      Qualifier qualifier0 = StreamQualifier.makeStreamQualifier("", "ssk", blastEntryInformation0);
      assertEquals("", qualifier0.getName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StreamQualifier streamQualifier0 = new StreamQualifier();
  }
}
