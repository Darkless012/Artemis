/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 00:43:55 GMT 2017
 */

package uk.ac.sanger.artemis.circular.digest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import java.awt.IllegalComponentStateException;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.MouseWheelEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DebugGraphics;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentType;
import uk.ac.sanger.artemis.circular.digest.CutSite;
import uk.ac.sanger.artemis.circular.digest.FragmentBand;
import uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InSilicoGelPanel_ESTest extends InSilicoGelPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      MockFile mockFile0 = new MockFile("Linear scale");
      FragmentBand fragmentBand0 = new FragmentBand();
      fragmentBand0.genomeFragmentLength = (-927);
      vector0.add(fragmentBand0);
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      FragmentBand fragmentBand1 = inSilicoGelPanel0.getBandAtLocation(point0);
      assertNull(fragmentBand1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<CutSite> linkedList0 = new LinkedList<CutSite>();
      MockFile mockFile0 = new MockFile("");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(3475, linkedList0, (-1321), mockFile0, "");
      InSilicoGelPanel.PopupListener inSilicoGelPanel_PopupListener0 = inSilicoGelPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(inSilicoGelPanel0, 50, 50, 0, 2838, 2838, 3475, 50, (-1381), false, (-5271), (-5271), (-5271));
      inSilicoGelPanel_PopupListener0.mouseReleased(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<FragmentBand> linkedList0 = new LinkedList<FragmentBand>();
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(linkedList0, 0, (File) null, "6zD@<VuSx2dh");
      // Undeclared exception!
      try { 
        inSilicoGelPanel0.paintComponent((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<FragmentBand> linkedList0 = new LinkedList<FragmentBand>();
      MockFile mockFile0 = new MockFile("~V9CfRfE?y`FOI");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(linkedList0, 3798, mockFile0, "use");
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("~V9CfRfE?y`FOI", "", (String) null);
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      DebugGraphics debugGraphics0 = new DebugGraphics(sVGGraphics2D0, inSilicoGelPanel0);
      // Undeclared exception!
      try { 
        inSilicoGelPanel0.paintComponent(debugGraphics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DebugGraphics cannot be cast to java.awt.Graphics2D
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<FragmentBand> stack0 = new Stack<FragmentBand>();
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(stack0, 0, (File) null, "Log scale");
      // Undeclared exception!
      try { 
        inSilicoGelPanel0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InSilicoGelPanel inSilicoGelPanel0 = null;
      try {
        inSilicoGelPanel0 = new InSilicoGelPanel((List<FragmentBand>) null, 150, (File) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("AltGraph Control", "AltGraph Control");
      InSilicoGelPanel inSilicoGelPanel0 = null;
      try {
        inSilicoGelPanel0 = new InSilicoGelPanel(1305, (List<CutSite>) null, 1305, mockFile0, "-a`dro&a");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      MockFile mockFile0 = new MockFile("Linear scale");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      ActionEvent actionEvent0 = new ActionEvent(genericDOMImplementation0, 3, "http://www.w3.org/1999/xlink", (-2365L), 0);
      // Undeclared exception!
      try { 
        inSilicoGelPanel0.actionPerformed(actionEvent0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class uk.ac.sanger.artemis.components.FileViewer
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<CutSite> linkedList0 = new LinkedList<CutSite>();
      MockFile mockFile0 = new MockFile("");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(3475, linkedList0, (-1321), mockFile0, "");
      InSilicoGelPanel.PopupListener inSilicoGelPanel_PopupListener0 = inSilicoGelPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(inSilicoGelPanel0, 50, 50, 0, 2838, 2838, 3475, 50, (-1381), false, (-5271), (-5271), (-5271));
      inSilicoGelPanel_PopupListener0.mousePressed(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      MockFile mockFile0 = new MockFile("Linear scale");
      FragmentBand fragmentBand0 = new FragmentBand();
      vector0.add(fragmentBand0);
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      inSilicoGelPanel0.paintComponent(sVGGraphics2D0);
      assertFalse(inSilicoGelPanel0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      MockFile mockFile0 = new MockFile("Linear scale");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      inSilicoGelPanel0.paintComponent(sVGGraphics2D0);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      FragmentBand fragmentBand0 = new FragmentBand();
      vector0.add(fragmentBand0);
      MockFile mockFile0 = new MockFile("Linear scale");
      vector0.add(fragmentBand0);
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      assertFalse(inSilicoGelPanel0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<FragmentBand> vector0 = new Vector<FragmentBand>();
      MockFile mockFile0 = new MockFile("Linear scale", "Linear scale");
      FragmentBand fragmentBand0 = new FragmentBand();
      fragmentBand0.genomeFragmentLength = 65;
      vector0.add(fragmentBand0);
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(vector0, 0, mockFile0, "Linear scale");
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      FragmentBand fragmentBand1 = inSilicoGelPanel0.getBandAtLocation(point0);
      assertNull(fragmentBand1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<CutSite> linkedList0 = new LinkedList<CutSite>();
      MockFile mockFile0 = new MockFile("@oyQ!;HFyu", "@oyQ!;HFyu");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(0, linkedList0, 0, mockFile0, "@oyQ!;HFyu");
      assertFalse(inSilicoGelPanel0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<CutSite> linkedList0 = new LinkedList<CutSite>();
      MockFile mockFile0 = new MockFile("");
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(3475, linkedList0, (-1321), mockFile0, "");
      InSilicoGelPanel.PopupListener inSilicoGelPanel_PopupListener0 = inSilicoGelPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(inSilicoGelPanel0, (-2830), (-1L), 30, 72, (-3954), 72, (-3954), 579, true, 2838, 50, 55);
      // Undeclared exception!
      try { 
        inSilicoGelPanel_PopupListener0.mouseReleased(mouseWheelEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<FragmentBand> arrayList0 = new ArrayList<FragmentBand>();
      InSilicoGelPanel inSilicoGelPanel0 = new InSilicoGelPanel(arrayList0, (-1765), (File) null, "lS/tO6T");
      arrayList0.add((FragmentBand) null);
      // Undeclared exception!
      try { 
        inSilicoGelPanel0.getBandAtLocation((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.circular.digest.InSilicoGelPanel", e);
      }
  }
}
