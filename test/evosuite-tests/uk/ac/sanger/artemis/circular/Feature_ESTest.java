/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 00:45:50 GMT 2017
 */

package uk.ac.sanger.artemis.circular;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.circular.Feature;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Feature_ESTest extends Feature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Feature feature0 = new Feature((String) null, 0, 0, 0);
      int int0 = feature0.getStart();
      assertEquals(0, int0);
      assertEquals(0, feature0.getColour());
      assertEquals(0, feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Feature feature0 = new Feature("", 1876, 0, 1168);
      int int0 = feature0.getStart();
      assertEquals(1876, int0);
      assertEquals(1168, feature0.getColour());
      assertEquals(0, feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Feature feature0 = new Feature("colour", (-1402), 0, 0);
      int int0 = feature0.getEnd();
      assertEquals(0, feature0.getColour());
      assertEquals(0, int0);
      assertEquals((-1402), feature0.getStart());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Feature feature0 = new Feature("Q^JDQh?'pTD{qY58", (-1853), (-1726), (-1853));
      int int0 = feature0.getEnd();
      assertEquals((-1726), int0);
      assertEquals((-1853), feature0.getStart());
      assertEquals((-1853), feature0.getColour());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Feature feature0 = new Feature((String) null, 0, 0, 0);
      feature0.getEmblKey();
      assertEquals(0, feature0.getEnd());
      assertEquals(0, feature0.getStart());
      assertEquals(0, feature0.getColour());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Feature feature0 = new Feature("~t2!k]rW8", (-112), (-112), (-112));
      feature0.getEmblKey();
      assertEquals((-112), feature0.getEnd());
      assertEquals((-112), feature0.getColour());
      assertEquals((-112), feature0.getStart());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Feature feature0 = new Feature("", 0, 0, 0);
      int int0 = feature0.getColour();
      assertEquals(0, feature0.getEnd());
      assertEquals(0, int0);
      assertEquals(0, feature0.getStart());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Feature feature0 = new Feature("3", 1245, 1245, 2747);
      int int0 = feature0.getColour();
      assertEquals(2747, int0);
      assertEquals(1245, feature0.getStart());
      assertEquals(1245, feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Feature feature0 = new Feature("", 0, 0, 0);
      feature0.getArtemisFeature();
      assertEquals(0, feature0.getColour());
      assertEquals(0, feature0.getStart());
      assertEquals(0, feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Feature feature0 = new Feature("3", 1245, 1245, 2747);
      uk.ac.sanger.artemis.Feature feature1 = feature0.getArtemisFeature();
      assertEquals(1245, feature0.getStart());
      assertEquals(2747, feature0.getColour());
      assertEquals(1245, feature0.getEnd());
      assertNotNull(feature1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Feature feature0 = new Feature("", 1, 1, 1);
      int int0 = feature0.getEnd();
      assertEquals(1, feature0.getColour());
      assertEquals(1, feature0.getStart());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Feature feature0 = new Feature("(-)CI/wmV]ZP", (-4974), (-984), (-984));
      int int0 = feature0.getStart();
      assertEquals((-984), feature0.getColour());
      assertEquals((-4974), int0);
      assertEquals((-984), feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Feature feature0 = new Feature("fd!islK9%Xap +T", (-5977), (-5977), (-5977));
      int int0 = feature0.getColour();
      assertEquals((-5977), feature0.getEnd());
      assertEquals((-5977), int0);
      assertEquals((-5977), feature0.getStart());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Feature feature0 = new Feature("", 62, (-904), 62);
      feature0.getEmblKey();
      assertEquals((-904), feature0.getEnd());
      assertEquals(62, feature0.getStart());
      assertEquals(62, feature0.getColour());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Feature feature0 = new Feature("fd!islK9%Xap +T", (-5977), (-5977), (-5977));
      feature0.setEnd((-5977));
      assertEquals((-5977), feature0.getColour());
      assertEquals((-5977), feature0.getStart());
      assertEquals((-5977), feature0.getEnd());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Feature feature0 = new Feature("exon", 1, 1, 1);
      uk.ac.sanger.artemis.Feature feature1 = feature0.getArtemisFeature();
      assertNotNull(feature1);
      assertEquals(1, feature0.getEnd());
      assertEquals(1, feature0.getColour());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Feature feature0 = new Feature((String) null, 0, 0, 0);
      feature0.setColour(0);
      assertEquals(0, feature0.getEnd());
      assertEquals(0, feature0.getStart());
      assertEquals(0, feature0.getColour());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Feature feature0 = new Feature("~t2!k]rW8", (-112), (-112), (-112));
      feature0.setEmblKey("~t2!k]rW8");
      assertEquals((-112), feature0.getEnd());
      assertEquals((-112), feature0.getColour());
      assertEquals((-112), feature0.getStart());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Feature feature0 = new Feature("Q^JDQh?'pTD{qY58", (-1853), (-1726), (-1853));
      feature0.setStart(3615);
      assertEquals(3615, feature0.getStart());
  }
}
