/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 00:56:46 GMT 2017
 */

package uk.ac.sanger.artemis.circular;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Rectangle;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.synth.SynthScrollBarUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.circular.ScrollPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScrollPanel_ESTest extends ScrollPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      Dimension dimension0 = scrollPanel0.getPreferredScrollableViewportSize();
      assertEquals(10.0, dimension0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GridLayout gridLayout0 = new GridLayout((-2180), (-2180));
      ScrollPanel scrollPanel0 = new ScrollPanel(gridLayout0);
      Dimension dimension0 = scrollPanel0.getPreferredScrollableViewportSize();
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GridLayout gridLayout0 = new GridLayout(10, 10, 1620, 10);
      ScrollPanel scrollPanel0 = new ScrollPanel(gridLayout0);
      Dimension dimension0 = scrollPanel0.getPreferredScrollableViewportSize();
      assertEquals(90, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      ScrollPanel scrollPanel0 = new ScrollPanel(metalComboBoxUI_MetalComboBoxLayoutManager0);
      // Undeclared exception!
      try { 
        scrollPanel0.getPreferredScrollableViewportSize();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SynthScrollBarUI synthScrollBarUI0 = new SynthScrollBarUI();
      ScrollPanel scrollPanel0 = new ScrollPanel(synthScrollBarUI0);
      // Undeclared exception!
      try { 
        scrollPanel0.getPreferredScrollableViewportSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.synth.SynthScrollBarUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339), (-339), (-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      Rectangle rectangle0 = new Rectangle((-339), (-339), (-339), (-339));
      int int0 = scrollPanel0.getScrollableUnitIncrement(rectangle0, 0, (-339));
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339), (-339), (-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      Rectangle rectangle0 = new Rectangle((-339), (-339), (-339), (-339));
      int int0 = scrollPanel0.getScrollableBlockIncrement(rectangle0, 0, (-2764));
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339), (-339), (-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      boolean boolean0 = scrollPanel0.getScrollableTracksViewportWidth();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339), (-339), (-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      Dimension dimension0 = scrollPanel0.getPreferredScrollableViewportSize();
      assertEquals((-678.0), dimension0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FlowLayout flowLayout0 = new FlowLayout((-339), (-339), (-339));
      ScrollPanel scrollPanel0 = new ScrollPanel(flowLayout0);
      boolean boolean0 = scrollPanel0.getScrollableTracksViewportHeight();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScrollPanel scrollPanel0 = new ScrollPanel();
      assertFalse(scrollPanel0.getScrollableTracksViewportWidth());
  }
}
