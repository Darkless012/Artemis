/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 06:09:09 GMT 2017
 */

package uk.ac.sanger.artemis.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringVector_ESTest extends StringVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("", "");
      assertEquals("[]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("");
      assertTrue(stringVector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringVector stringVector0 = new StringVector();
      String[] stringArray0 = new String[7];
      StringVector stringVector1 = new StringVector(stringArray0);
      stringVector0.add(stringVector1);
      stringVector0.copy();
      assertFalse(stringVector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringVector.getStrings((String) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringVector.getStrings((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringVector.getStrings((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringVector stringVector0 = new StringVector();
      // Undeclared exception!
      try { 
        stringVector0.add((StringVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringVector stringVector0 = null;
      try {
        stringVector0 = new StringVector((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.StringVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringVector stringVector0 = null;
      try {
        stringVector0 = new StringVector((StringVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("\"`ewwF QNX", "N", true);
      assertEquals("[\"`ewwF Q, X]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("wr", "wr", true);
      assertEquals("[]", stringVector0.toString());
      assertFalse(stringVector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("0M", "0M", false);
      assertTrue(stringVector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringVector stringVector0 = new StringVector();
      String[] stringArray0 = new String[7];
      stringArray0[3] = "";
      StringVector stringVector1 = new StringVector(stringArray0);
      stringVector0.add(stringVector1);
      stringVector0.sort();
      assertEquals(7, stringVector0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[6];
      StringVector stringVector0 = new StringVector(stringArray0);
      // Undeclared exception!
      stringVector0.add(stringVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("\"`ewwF QNX", "N");
      stringVector0.sort();
      assertEquals("[\"`ewwF Q, X]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("N");
      assertEquals("[N]", stringVector0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringVector stringVector0 = new StringVector();
      StringVector stringVector1 = stringVector0.copy();
      assertNotSame(stringVector0, stringVector1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringVector stringVector0 = new StringVector((String) null);
      StringVector stringVector1 = new StringVector(stringVector0);
      stringVector0.add(stringVector1);
      assertEquals(2, stringVector0.size());
  }
}
