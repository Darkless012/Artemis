/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 16:49:24 GMT 2018
 */

package uk.ac.sanger.artemis.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.event.HierarchyBoundsListener;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.List;
import javax.swing.JPasswordField;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.organism.Organism;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.IBatisDAO;
import uk.ac.sanger.artemis.chado.JdbcDAO;
import uk.ac.sanger.artemis.io.EmblStreamFeature;
import uk.ac.sanger.artemis.io.GFFStreamFeature;
import uk.ac.sanger.artemis.io.GenbankStreamFeature;
import uk.ac.sanger.artemis.j2ssh.SshLogin;
import uk.ac.sanger.artemis.util.ByteBuffer;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.InputStreamProgressListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatabaseDocument_ESTest extends DatabaseDocument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", ">9+'u.:15GsD", false);
      // Undeclared exception!
      try { 
        databaseDocument0.getCvTermsByCvName("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = true;
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("-b5z<1", (JPasswordField) null, "-b5z<1", "-b5z<1", true, inputStreamProgressListener0);
      String string0 = "feature_relationship_rank=";
      DatabaseDocument.isCvThreadAlive();
      // Undeclared exception!
      try { 
        databaseDocument0.getFeatureLocsByListOfIds((List) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      jPasswordField0.isFocusable();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      jPasswordField0.getX();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jPasswordField0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, (String) null, true, inputStreamProgressListener0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseDocument.isCvThreadAlive();
      DatabaseDocument.isCvThreadAlive();
      JPasswordField jPasswordField0 = new JPasswordField();
      String string0 = "oiy";
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument(",kPCOAgKXP#;{", jPasswordField0, "oiy", "", false, inputStreamProgressListener0);
      String string1 = "sR bw7vQ,TMLX&>O";
      databaseDocument0.setName(",kPCOAgKXP#;{");
      boolean boolean0 = false;
      InputStreamProgressListener inputStreamProgressListener1 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        databaseDocument0.getOrganismsContainingSrcFeatures();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, "?Rj3d!%.{BusxC5");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(71);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("+Rf9$ZU5ghkDPZs)?", jPasswordField0, "+Rf9$ZU5ghkDPZs)?", "+Rf9$ZU5ghkDPZs)?");
      databaseDocument0.reset();
      // Undeclared exception!
      try { 
        Timestamp.valueOf((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null string
         //
         verifyException("java.sql.Timestamp", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, (String) null, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringContent stringContent0 = new StringContent(1142);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, "Runtime Problems...\n", 1142);
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Runtime Problems...\n", jPasswordField0, "g*", "Runtime Problems...\n", false, inputStreamProgressListener0);
      DatabaseDocument.LocationComarator databaseDocument_LocationComarator0 = databaseDocument0.new LocationComarator();
      JdbcDAO jdbcDAO0 = null;
      try {
        jdbcDAO0 = new JdbcDAO("", jPasswordField0);
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // No suitable driver found for jdbc:postgresql:/null?
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmblStreamFeature emblStreamFeature0 = new EmblStreamFeature();
      GFFStreamFeature gFFStreamFeature0 = new GFFStreamFeature(emblStreamFeature0);
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature(gFFStreamFeature0);
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvTermId(0, genbankStreamFeature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JPasswordField jPasswordField0 = null;
      String string0 = "";
      String string1 = "aW3(Lm-PYK*%d^#P";
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", (JPasswordField) null, "", "aW3(Lm-PYK*%d^#P", true, inputStreamProgressListener0);
      databaseDocument0.writable();
      // Undeclared exception!
      try { 
        databaseDocument0.showCvTermLookUp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringContent stringContent0 = new StringContent(656);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, (String) null, 0);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, "_<nFvPs", (String) null, byteBuffer0, (String) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvtermID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvtermFromGoId("_-/2UZ^`cSGwe");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(45);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("(85.aaj<G`7R~_", jPasswordField0);
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument1 = new DatabaseDocument(databaseDocument0, "", "", false, inputStreamProgressListener0);
      databaseDocument1.addInputStreamProgressListener((InputStreamProgressListener) null);
      // Undeclared exception!
      try { 
        databaseDocument1.getInputStream();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((DatabaseDocument) null, "kFOV=*0d", "kFOV=*0d", true, inputStreamProgressListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      jPasswordField0.echoCharIsSet();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("#created ", jPasswordField0);
      databaseDocument0.isLazyFeatureLoad();
      IBatisDAO iBatisDAO0 = null;
      try {
        iBatisDAO0 = new IBatisDAO(jPasswordField0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("K+1Ia");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("`0XG'iDKb", jPasswordField0, "polygon", "polygon", true);
      databaseDocument0.isLazyFeatureLoad();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getSynonymTypeNames("pA@r:;da[K![e", (GFFStreamFeature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvterms("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "";
      JPasswordField jPasswordField0 = new JPasswordField("4Wf3sL;E}\\%(G");
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "4Wf3sL;E}\\%(G", true, inputStreamProgressListener0);
      databaseDocument0.readable();
      IBatisDAO iBatisDAO0 = null;
      try {
        iBatisDAO0 = new IBatisDAO(jPasswordField0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvAndCvTerm("2$}m!}D?(#XZwX?JW", "2$}m!}D?(#XZwX?JW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DatabaseDocument.isCvThreadAlive();
      GapContent gapContent0 = new GapContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, "|9:2[V84{<9P;*RZwBz", 0);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("|9:2[V84{<9P;*RZwBz", jPasswordField0, "~=j4*#x!", "yyyy/MM/dd HH:mm:ss", byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getGffDocuments("p66q~0ybtb;&i[OXw", "@qM2*C)RBsT9=2 )^;", "|9:2[V84{<9P;*RZwBz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("\"ht%Z4Gs9W28\"7", 0);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument(")?}FI", jPasswordField0, "db_xref=", ")?}FI", byteBuffer0, "\"ht%Z4Gs9W28\"7");
      databaseDocument0.setLazyFeatureLoad(false);
      databaseDocument0.getIdFeatureStore();
      JdbcDAO jdbcDAO0 = null;
      try {
        jdbcDAO0 = new JdbcDAO("mRNA", jPasswordField0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("a", jPasswordField0, "@@e6}p)1dlsq", "@@e6}p)1dlsq", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DatabaseDocument.isCvThreadAlive();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("`E'&[", (JPasswordField) null);
      JdbcDAO jdbcDAO0 = null;
      try {
        jdbcDAO0 = new JdbcDAO("]?", (JPasswordField) null);
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // No suitable driver found for ]?
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument(";", (JPasswordField) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("Gap");
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("public", jPasswordField0, "", "", true, inputStreamProgressListener0);
      String string0 = databaseDocument0.getSrcFeatureId();
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("SELECT dbxref_id FROM dbxref WHERE accession='", jPasswordField0, "SELECT dbxref_id FROM dbxref WHERE accession='", "SELECT dbxref_id FROM dbxref WHERE accession='");
      String string0 = "";
      IBatisDAO iBatisDAO0 = null;
      try {
        iBatisDAO0 = new IBatisDAO(jPasswordField0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Mm^&'mi", jPasswordField0, ";current=false", "Mm^&'mi");
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvTermName("mRNA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(1462);
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("ID=", jPasswordField0, "ID=", "ID=");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseDocument.getTYPES();
      JPasswordField jPasswordField0 = new JPasswordField();
      jPasswordField0.setAutoscrolls(false);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("GQ", jPasswordField0, "/H`Z%:6L%UU", "/H`Z%:6L%UU", byteBuffer0, "F0wmBupZKHB");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "ungapped id";
      JPasswordField jPasswordField0 = new JPasswordField(0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("ungapped id", jPasswordField0);
      Organism organism0 = new Organism();
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvPartAndCvTerm("RILEY", "CC_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("u", jPasswordField0, "3]", "3]", byteBuffer0, "u");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      String string0 = null;
      boolean boolean0 = false;
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("", jPasswordField0, (String) null, (String) null, false, (InputStreamProgressListener) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvControledCurationNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "repeat_unit";
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvTermName("repeat_unit");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }
}
