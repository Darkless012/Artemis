/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 06:05:35 GMT 2017
 */

package uk.ac.sanger.artemis.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.util.FTPSeekableStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FTPSeekableStream_ESTest extends FTPSeekableStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          MockFile mockFile0 = new MockFile("", "");
          URL uRL0 = mockFile0.toURL();
          FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0, "", "d{1,3},d{1,3},d{1,3},d{1,3},d{1,3},d{1,3}");
          byte[] byteArray0 = new byte[7];
          // Undeclared exception!
          try { 
            fTPSeekableStream0.read(byteArray0, (int) (byte)40, 255);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"127.0.0.1:21\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:163)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:184)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:273)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getClient(FTPSeekableStream.java:84)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.initStream(FTPSeekableStream.java:217)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.read(FTPSeekableStream.java:132)
             // sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A]Taq'c");
      URL uRL0 = mockFile0.toURL();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = fTPSeekableStream0.getTmpFolder();
      assertEquals("tmp", file0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "+c'Xb|YjX%<\"HPON", uRLStreamHandler0);
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL1);
      String string0 = fTPSeekableStream0.getSource();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0, "J:IZ=Vi):tK[{$a,_", "J:IZ=Vi):tK[{$a,_");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/fooExample.bai");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "J:IZ=Vi):tK[{$a,_");
      File file0 = fTPSeekableStream0.getIndexFile();
      assertNotNull(file0);
      assertEquals(1392409281320L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      File file0 = fTPSeekableStream0.getIndexFile();
      File file1 = MockFile.createTempFile("J:IZ=Vi):tK[{$a,_", "org.apache.log4j.Layout", file0);
      assertEquals("/tmp/fooExample.bai/J:IZ=Vi):tK[{$a,_0org.apache.log4j.Layout", file1.toString());
      
      File file2 = fTPSeekableStream0.getIndexFile();
      assertEquals("/tmp/fooExample.bai", file2.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0, "; )<PvA", "; )<PvA");
      // Undeclared exception!
      try { 
        fTPSeekableStream0.setTmpFolder((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.FTPSeekableStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FTPSeekableStream fTPSeekableStream0 = null;
      try {
        fTPSeekableStream0 = new FTPSeekableStream((URL) null, "", "File ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FTPSeekableStream fTPSeekableStream0 = null;
      try {
        fTPSeekableStream0 = new FTPSeekableStream((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      File file0 = fTPSeekableStream0.getIndexFile();
      try { 
        fTPSeekableStream0.setTmpFolder(file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // File fooExample.bai is not a folder
         //
         verifyException("uk.ac.sanger.artemis.util.FTPSeekableStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      File file0 = fTPSeekableStream0.getTmpFolder();
      assertTrue(file0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          URL uRL0 = MockURL.getHttpExample();
          FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
          // Undeclared exception!
          try { 
            fTPSeekableStream0.length();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:21\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:163)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:184)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:273)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getClient(FTPSeekableStream.java:84)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.length(FTPSeekableStream.java:115)
             // sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          URL uRL0 = MockURL.getHttpExample();
          FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
          EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/fooExample.bai");
          FileSystemHandling.createFolder(evoSuiteFile0);
          // Undeclared exception!
          try { 
            fTPSeekableStream0.getIndexFile();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:21\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:163)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:184)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:273)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getClient(FTPSeekableStream.java:84)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getIndexFile(FTPSeekableStream.java:265)
             // sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0, ":7@GI`XJ", ":7@GI`XJ");
      fTPSeekableStream0.setTmpFolder(mockFile0);
      File file0 = fTPSeekableStream0.getTmpFolder();
      assertTrue(file0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A]Taq'c");
      URL uRL0 = mockFile0.toURL();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      fTPSeekableStream0.close();
      assertEquals("file:/Users/kp11/workspace/applications/Artemis/test/A]Taq'c", fTPSeekableStream0.getSource());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          URL uRL0 = MockURL.getHttpExample();
          FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
          // Undeclared exception!
          try { 
            fTPSeekableStream0.eof();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:21\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:163)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:184)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:273)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getClient(FTPSeekableStream.java:84)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.length(FTPSeekableStream.java:115)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.eof(FTPSeekableStream.java:183)
             // sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      URL uRL0 = mockFile0.toURL();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0, "", "d{1,3},d{1,3},d{1,3},d{1,3},d{1,3},d{1,3}");
      File file0 = fTPSeekableStream0.getIndexFile();
      assertNotNull(file0);
      assertEquals("/tmp/.bai", file0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      String string0 = fTPSeekableStream0.getSource();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A]Taq'c");
      URL uRL0 = mockFile0.toURL();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      fTPSeekableStream0.seek(0L);
      assertEquals(0L, fTPSeekableStream0.position());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          URL uRL0 = MockURL.getHttpExample();
          FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
          // Undeclared exception!
          try { 
            fTPSeekableStream0.read();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:21\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:163)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:184)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:273)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.getClient(FTPSeekableStream.java:84)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.initStream(FTPSeekableStream.java:217)
             // uk.ac.sanger.artemis.util.FTPSeekableStream.read(FTPSeekableStream.java:205)
             // sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FTPSeekableStream fTPSeekableStream0 = new FTPSeekableStream(uRL0);
      long long0 = fTPSeekableStream0.position();
      assertEquals(0L, long0);
  }
}
