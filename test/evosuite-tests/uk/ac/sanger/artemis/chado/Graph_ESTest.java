/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 00:32:54 GMT 2017
 */

package uk.ac.sanger.artemis.chado;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.Graph;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Graph_ESTest extends Graph_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setName("mkSW<Lqxr4?;HMGK*");
      String string0 = graph0.getName();
      assertEquals("mkSW<Lqxr4?;HMGK*", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setName("");
      String string0 = graph0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setGraphId(1229);
      int int0 = graph0.getGraphId();
      assertEquals(1229, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setGraphId((-1147));
      int int0 = graph0.getGraphId();
      assertEquals((-1147), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setFeatureId(1658);
      int int0 = graph0.getFeatureId();
      assertEquals(1658, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setFeatureId((-1));
      int int0 = graph0.getFeatureId();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setDescription("+a]#B4'N]6p");
      String string0 = graph0.getDescription();
      assertEquals("+a]#B4'N]6p", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.setDescription("");
      String string0 = graph0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Graph graph0 = new Graph();
      byte[] byteArray0 = new byte[2];
      graph0.setData(byteArray0);
      byte[] byteArray1 = graph0.getData();
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Graph graph0 = new Graph();
      int int0 = graph0.getGraphId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Graph graph0 = new Graph();
      byte[] byteArray0 = new byte[0];
      graph0.setData(byteArray0);
      byte[] byteArray1 = graph0.getData();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Graph graph0 = new Graph();
      int int0 = graph0.getFeatureId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Graph graph0 = new Graph();
      byte[] byteArray0 = graph0.getData();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Graph graph0 = new Graph();
      String string0 = graph0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Graph graph0 = new Graph();
      String string0 = graph0.getName();
      assertNull(string0);
  }
}
