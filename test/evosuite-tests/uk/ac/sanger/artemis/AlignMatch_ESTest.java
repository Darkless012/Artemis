/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 00:21:39 GMT 2017
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.AlignMatch;
import uk.ac.sanger.artemis.io.Range;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlignMatch_ESTest extends AlignMatch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.setRange(1, (-1), false, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals((-1), alignMatch0.getQuerySequenceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range range0 = new Range((-612));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1586, 1);
      alignMatch0.setRange((-612), (-612), false, false);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
      assertTrue(alignMatch0.isSelfMatch());
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1586, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, 0);
      alignMatch0.setRange(0, 0, true, true);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Range range0 = new Range((-191));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-191), (-191));
      boolean boolean0 = alignMatch0.isRevMatch();
      assertTrue(boolean0);
      assertEquals((-191), alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-191), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getSubjectSequenceStart();
      assertEquals(0, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Range range0 = new Range((-1), (-1));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getSubjectSequenceStart();
      assertEquals(0, alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Range range0 = new Range(3407);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 3407, 3407);
      alignMatch0.getSubjectSequenceRange();
      assertEquals(3407, alignMatch0.getPercentID());
      assertEquals(3407, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertTrue(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, 0);
      alignMatch0.getSubjectSequenceRange();
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Range range0 = new Range((-583), (-583));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-583), (-583));
      alignMatch0.getSubjectSequenceRange();
      assertEquals((-583), alignMatch0.getScore());
      assertEquals((-583), alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getSubjectSequenceEnd();
      assertEquals(0, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1, 1);
      alignMatch0.getSubjectSequenceEnd();
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      int int0 = alignMatch0.getScore();
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, int0);
      assertEquals(0, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Range range0 = new Range((-3707), 1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-3707), 1074);
      int int0 = alignMatch0.getScore();
      assertEquals(3708, alignMatch0.getLength());
      assertEquals(1074, alignMatch0.getPercentID());
      assertEquals((-3707), int0);
      assertFalse(alignMatch0.isSelfMatch());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getQuerySequenceStart();
      assertEquals(0, alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range range0 = new Range(3407);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 3407, 3407);
      alignMatch0.getQuerySequenceRange();
      assertEquals(3407, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertEquals(3407, alignMatch0.getPercentID());
      assertTrue(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getQuerySequenceRange();
      assertEquals(0, alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Range range0 = new Range((-612));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1586, 1);
      alignMatch0.setRange(1, (-1420), false, false);
      alignMatch0.getQuerySequenceRange();
      assertEquals((-1420), alignMatch0.getQuerySequenceStart());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Range range0 = new Range((-1), (-1));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 61, 61);
      alignMatch0.getQuerySequenceEnd();
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
      assertEquals(61, alignMatch0.getPercentID());
      assertEquals(61, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, 0);
      int int0 = alignMatch0.getPercentID();
      assertEquals(0, int0);
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1, 1);
      int int0 = alignMatch0.getPercentID();
      assertEquals(1, alignMatch0.getScore());
      assertEquals(1, int0);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Range range0 = new Range((-855), 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-855), (-1386));
      int int0 = alignMatch0.getLength();
      assertEquals((-1386), alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-855), alignMatch0.getScore());
      assertEquals(855, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1, 1);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(1, alignMatch1.getPercentID());
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1, alignMatch1.getScore());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch1.getLength());
      assertEquals(1, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Range range0 = new Range((-3707), 1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-3707), 1074);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(1074, alignMatch0.getPercentID());
      assertEquals(1074, alignMatch1.getPercentID());
      assertEquals(3708, alignMatch1.getLength());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals((-3707), alignMatch0.getScore());
      assertEquals((-3707), alignMatch1.getScore());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Range range0 = new Range((-1));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-1), 0);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(0, alignMatch1.getPercentID());
      assertEquals((-1), alignMatch1.getScore());
      assertEquals((-1), alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch1.getLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Range range0 = new Range((-1), 2939);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-1), (-1));
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals((-1), alignMatch1.getPercentID());
      assertEquals(2940, alignMatch1.getLength());
      assertEquals((-1), alignMatch0.getPercentID());
      assertEquals((-1), alignMatch0.getScore());
      assertEquals((-1), alignMatch1.getScore());
      assertEquals((-1), alignMatch0.getQuerySequenceStart());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        AlignMatch.copy((AlignMatch) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Range range0 = new Range((-612));
      AlignMatch alignMatch0 = null;
      try {
        alignMatch0 = new AlignMatch((Range) null, range0, false, 1586, (-1420));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 810, (-4110));
      alignMatch0.getQuerySequenceEnd();
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-4110), alignMatch0.getPercentID());
      assertEquals(810, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Range range0 = new Range((-1), 2939);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-1), (-1));
      int int0 = alignMatch0.getQuerySequenceStart();
      assertEquals(2940, alignMatch0.getLength());
      assertEquals((-1), alignMatch0.getPercentID());
      assertEquals((-1), int0);
      assertEquals((-1), alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Range range0 = new Range((-583), (-583));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-583), (-583));
      alignMatch0.getSubjectSequenceEnd();
      assertEquals((-583), alignMatch0.getScore());
      assertEquals((-583), alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Range range0 = new Range(2078, 2078);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1, 1);
      alignMatch0.getSubjectSequenceStart();
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.setRange(0, 1, false, true);
      assertFalse(alignMatch0.isSelfMatch());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Range range0 = new Range((-718), 1631);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1631, 1631);
      alignMatch0.setRange((-9), 1631, false, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals((-9), alignMatch0.getQuerySequenceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, 0);
      alignMatch0.setRange(0, 211, true, true);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals(211, alignMatch0.getSubjectSequenceEnd());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Range range0 = new Range((-3707), 1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-3707), 1074);
      alignMatch0.setRange(1074, (-84), true, true);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, (-1227));
      alignMatch0.setRange(2433, 0, false, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals(2433, alignMatch0.getQuerySequenceEnd());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 1, 1);
      alignMatch0.getQuerySequenceEnd();
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertTrue(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Range range0 = new Range(2899, 2899);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 2899, 1);
      alignMatch0.getQuerySequenceStart();
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(2899, alignMatch0.getScore());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, (-1227));
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertFalse(alignMatch0.isRevMatch());
      assertTrue(boolean0);
      assertEquals(0, alignMatch0.getScore());
      assertEquals((-1227), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, (-1227));
      boolean boolean0 = alignMatch0.isRevMatch();
      assertEquals((-1227), alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getScore());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Range range0 = new Range((-899));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-899), (-1));
      int int0 = alignMatch0.getPercentID();
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-1), int0);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-899), alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, (-1227));
      int int0 = alignMatch0.getLength();
      assertEquals(0, alignMatch0.getScore());
      assertEquals(0, int0);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-1227), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Range range0 = new Range((-1));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-1), 0);
      alignMatch0.getQuerySequenceRange();
      assertEquals((-1), alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Range range0 = new Range((-718), 1631);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1631, 1631);
      int int0 = alignMatch0.getScore();
      assertEquals(2349, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1631, int0);
      assertEquals(1631, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, (-1227));
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals((-1227), alignMatch1.getPercentID());
      assertEquals(0, alignMatch1.getScore());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-1227), alignMatch0.getPercentID());
  }
}
