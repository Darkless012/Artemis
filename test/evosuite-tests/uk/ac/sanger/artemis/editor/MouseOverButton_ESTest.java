/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 13:53:52 GMT 2018
 */

package uk.ac.sanger.artemis.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.DebugGraphics;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.events.EventListener;
import uk.ac.sanger.artemis.editor.HitInfo;
import uk.ac.sanger.artemis.editor.MouseOverButton;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MouseOverButton_ESTest extends MouseOverButton_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("z3wD$?sUBd{5!", "?Ut\"s,9$Xe%B#cU:=M");
      MouseOverButton mouseOverButton0 = new MouseOverButton(hitInfo0);
      hitInfo0.setOrganism("?Ut\"s,9$Xe%B#cU:=M");
      String string0 = mouseOverButton0.getToolTipText();
      assertEquals("?Ut\"s,9$Xe%B#cU:=M", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("(pm4,FcS1B");
      // Undeclared exception!
      try { 
        mouseOverButton0.processMouseEvent((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("");
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("", "", (String) null);
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      genericDocumentType0.addEventListenerNS("#Pf$", "k;Ir'2", eventListener0, true, mouseOverButton0);
      // Undeclared exception!
      try { 
        mouseOverButton0.paintComponent(sVGGraphics2D0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Bad event type: MutationEvents
         //
         verifyException("org.apache.batik.dom.events.DocumentEventSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton();
      // Undeclared exception!
      try { 
        mouseOverButton0.paintComponent((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MouseOverButton mouseOverButton0 = null;
      try {
        mouseOverButton0 = new MouseOverButton((HitInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.MouseOverButton", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("l&KVC:", "l&KVC:");
      MouseOverButton mouseOverButton0 = new MouseOverButton(hitInfo0);
      MenuElement[] menuElementArray0 = new MenuElement[3];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(mouseOverButton0, 505, (-1020L), 505, 5632, 505, (-40), 5632, (-40), true, menuElementArray0, menuSelectionManager0);
      mouseOverButton0.processMouseEvent(menuDragMouseEvent0);
      assertEquals(5632, menuDragMouseEvent0.getYOnScreen());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("");
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(mouseOverButton0, (short)4, 201L, (-1904), 104, (short)1, (short)1, 3, (short)16, false, 452, (short)16, (short)4);
      mouseOverButton0.processMouseEvent(mouseWheelEvent0);
      assertFalse(mouseOverButton0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("");
      String string0 = mouseOverButton0.getToolTipText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("(pm4,FcS1B");
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("`/, 3j$^1?S", (String) null, (String) null);
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      mouseOverButton0.paintComponent(sVGGraphics2D0);
      assertTrue(mouseOverButton0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton("");
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("", "", (String) null);
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      mouseOverButton0.paintComponent(sVGGraphics2D0);
      assertNull(mouseOverButton0.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MouseOverButton mouseOverButton0 = new MouseOverButton();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("c", "c", "c");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      DebugGraphics debugGraphics0 = new DebugGraphics(sVGGraphics2D0, mouseOverButton0);
      // Undeclared exception!
      try { 
        mouseOverButton0.paintComponent(debugGraphics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DebugGraphics cannot be cast to java.awt.Graphics2D
         //
         verifyException("uk.ac.sanger.artemis.editor.MouseOverButton", e);
      }
  }
}
