/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 13:53:56 GMT 2018
 */

package uk.ac.sanger.artemis.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.editor.HitInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HitInfo_ESTest extends HitInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setUngapped("VUv");
      String string0 = hitInfo0.getUngapped();
      assertEquals("VUv", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("[T[X4P0VkxTTd)&S", "UNIPROT");
      hitInfo0.setUngapped("");
      String string0 = hitInfo0.getUngapped();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("/W*B)1l^w'VA%0'&", "zrS\"D");
      hitInfo0.setSubjectRange("^.ci%Ki$'ar~");
      String string0 = hitInfo0.getSubjectRange();
      assertEquals("^.ci%Ki$'ar~", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("Se", "");
      hitInfo0.setSubjectRange("");
      String string0 = hitInfo0.getSubjectRange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setStartPosition(1372);
      int int0 = hitInfo0.getStartPosition();
      assertEquals(1372, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "l*");
      hitInfo0.setStartPosition((-1103));
      int int0 = hitInfo0.getStartPosition();
      assertEquals((-1103), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("(", "(");
      hitInfo0.setScore("(");
      String string0 = hitInfo0.getScore();
      assertEquals("(", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("e", "");
      hitInfo0.setScore("");
      String string0 = hitInfo0.getScore();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setQueryRange("F=r+U7OaS");
      String string0 = hitInfo0.getQueryRange();
      assertEquals("F=r+U7OaS", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(";m4y b@+=+x-u\"2;", "u");
      hitInfo0.setQueryPosition(0, 0);
      Vector vector0 = hitInfo0.getQueryPosition();
      assertEquals("[0, 0]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      hitInfo0.setOverlap("E}h89_ZyTWqd");
      String string0 = hitInfo0.getOverlap();
      assertEquals("E}h89_ZyTWqd", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setOverlap("");
      String string0 = hitInfo0.getOverlap();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      hitInfo0.setOrganism("0");
      String string0 = hitInfo0.getOrganism();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setOrganism("");
      String string0 = hitInfo0.getOrganism();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ,`%_ECiG<};", ".");
      hitInfo0.setLength(" ,`%_ECiG<};");
      String string0 = hitInfo0.getLength();
      assertEquals(" ,`%_ECiG<};", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setLength("");
      String string0 = hitInfo0.getLength();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("a", "a");
      hitInfo0.setIdentity("#Z!.p!TK !d(");
      String string0 = hitInfo0.getIdentity();
      assertEquals("#Z!.p!TK !d(", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setIdentity("");
      String string0 = hitInfo0.getIdentity();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(";m4y b@+=+x-u\"2;", "u");
      hitInfo0.setBLASTPInfo("ltkQSSz'+5 bQb");
      String string0 = hitInfo0.getID();
      assertEquals("ltkQSSz'+5", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      String string0 = hitInfo0.getHeader();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("|O", "|O");
      hitInfo0.setGoAssociation("", "");
      String string0 = hitInfo0.getGoAssociation("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("UniProt", "");
      hitInfo0.setGeneName("<l`y9I6M%Q1J");
      String string0 = hitInfo0.getGeneName();
      assertEquals("<l`y9I6M%Q1J", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("Fe`4y1+REw+A6<$|7m", "Fe`4y1+REw+A6<$|7m");
      hitInfo0.setGeneName("");
      String string0 = hitInfo0.getGeneName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      hitInfo0.setEndPosition(50);
      int int0 = hitInfo0.getEndPosition();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setEndPosition((-1157));
      int int0 = hitInfo0.getEndPosition();
      assertEquals((-1157), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("7\r2mHrGs7<[(Q:", "7\r2mHrGs7<[(Q:");
      hitInfo0.setEValue("7\r2mHrGs7<[(Q:");
      String string0 = hitInfo0.getEValue();
      assertEquals("7\r2mHrGs7<[(Q:", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setEValue("");
      String string0 = hitInfo0.getEValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setEMBL("nbamrZfMNO;_wm>THb~");
      String string0 = hitInfo0.getEMBL();
      assertEquals("nbamrZfMNO;_wm>THb~", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      hitInfo0.setEMBL("");
      String string0 = hitInfo0.getEMBL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      hitInfo0.setEC_number("B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getEC_number();
      assertEquals("B\"2-SJtl8N)u`&", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("s", "");
      hitInfo0.setEC_number("");
      String string0 = hitInfo0.getEC_number();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("|O", "|O");
      hitInfo0.appendDescription("|O");
      String string0 = hitInfo0.getDescription();
      assertEquals("|O", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setDescription("");
      String string0 = hitInfo0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("Ub[v,", "e");
      // Undeclared exception!
      try { 
        hitInfo0.setGoAssociation((String) null, "e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("h+:eGvAA>aEy{)nd<", "h+:eGvAA>aEy{)nd<");
      // Undeclared exception!
      try { 
        hitInfo0.setGO((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.HitInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("(", "(");
      // Undeclared exception!
      try { 
        hitInfo0.setFastaHitInfo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.HitInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      // Undeclared exception!
      try { 
        hitInfo0.setEValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      // Undeclared exception!
      try { 
        hitInfo0.setEMBL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ,`%_ECiG<};", ".");
      // Undeclared exception!
      try { 
        hitInfo0.setBLASTPInfo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.HitInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("?eJ{{+U4k6%t%j.", "?eJ{{+U4k6%t%j.");
      hitInfo0.setGoAssociation("?eJ{{+U4k6%t%j.", "");
      // Undeclared exception!
      try { 
        hitInfo0.getGoAssociation((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B0-.{6}QX?-\"W@", "B0-.{6}QX?-\"W@");
      // Undeclared exception!
      try { 
        hitInfo0.appendDescription((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HitInfo hitInfo0 = null;
      try {
        hitInfo0 = new HitInfo("zQkWy@DbCd;tu", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setGoAssociation("g^#H>:fLPD", "5Q{Z3ZP,X/eH$=");
      String string0 = hitInfo0.getGoAssociation("t&zZr");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("+:#F5rjjd", "T Y|13\"LPgV$I |-");
      hitInfo0.setGoAssociation("", "LFqygkF");
      String string0 = hitInfo0.getGoAssociation("");
      assertEquals("LFqygkF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      String string0 = hitInfo0.getGoAssociation("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("?eJ{{+U4k6%t%j.", "?eJ{{+U4k6%t%j.");
      hitInfo0.setGoAssociation("?eJ{{+U4k6%t%j.", "");
      hitInfo0.setGoAssociation("PvE", "");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setGO("fasta");
      hitInfo0.setGO("nbamrZfMNO;_wm>THb~");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ,`%_ECiG<};", ".");
      hitInfo0.setGO(" ,`%_ECiG<};");
      Vector vector0 = hitInfo0.getGO();
      assertFalse(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("EYl(T.J", "EYl(T.J");
      hitInfo0.setEValue("e");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(";m4y b@+=+x-u\"2;", "u");
      hitInfo0.setEMBL(";m4y b@+=+x-u\"2;");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      hitInfo0.appendDescription("(EC ");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("s", "");
      hitInfo0.setDescription("x{A7HRf9T");
      hitInfo0.appendDescription("+rj");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "l*");
      hitInfo0.appendDescription("");
      hitInfo0.appendDescription("y@");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("|O", "|O");
      hitInfo0.setOrganism("");
      hitInfo0.setOrganism((String) null);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      hitInfo0.setOrganism("B\"2-SJtl8N)u`&");
      hitInfo0.setOrganism((String) null);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ", " ");
      hitInfo0.setFastaHitInfo(" ");
      String string0 = hitInfo0.getID();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      hitInfo0.setBLASTPInfo("4i:;Q2<-j %|'@");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("fasta", "fasta");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getLength();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("a", "a");
      String string0 = hitInfo0.getEValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("/W*B)1l^w'VA%0'&", "zrS\"D");
      String string0 = hitInfo0.getSubjectRange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getScore();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      String string0 = hitInfo0.getOrganism();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getEMBL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ", " ");
      Vector vector0 = hitInfo0.getQueryPosition();
      assertTrue(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ", " ");
      String string0 = hitInfo0.getDB();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      hitInfo0.setQueryRange("");
      String string0 = hitInfo0.getQueryRange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      String string0 = hitInfo0.getIdentity();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getGeneName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo(" ", " ");
      Vector vector0 = hitInfo0.getGO();
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "");
      String string0 = hitInfo0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      hitInfo0.setQueryPosition(1773, 0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      int int0 = hitInfo0.getEndPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      String string0 = hitInfo0.getQueryRange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("", "l*");
      int int0 = hitInfo0.getStartPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getEC_number();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("blastp", "blastp");
      String string0 = hitInfo0.getAcc();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("0", "0");
      String string0 = hitInfo0.getUngapped();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getHeader();
      assertEquals("B\"2-SJtl8N)u`&", string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HitInfo hitInfo0 = new HitInfo("B\"2-SJtl8N)u`&", "B\"2-SJtl8N)u`&");
      String string0 = hitInfo0.getOverlap();
      assertNull(string0);
  }
}
