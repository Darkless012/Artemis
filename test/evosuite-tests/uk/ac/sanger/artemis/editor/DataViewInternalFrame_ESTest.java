/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 03:23:05 GMT 2017
 */

package uk.ac.sanger.artemis.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Checkbox;
import java.awt.Dialog;
import java.util.Hashtable;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JDesktopPane;
import javax.swing.JScrollPane;
import javax.swing.JSlider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.editor.DataViewInternalFrame;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataViewInternalFrame_ESTest extends DataViewInternalFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      Hashtable hashtable0 = jSlider0.createStandardLabels(8, 8);
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      JScrollPane jScrollPane0 = new JScrollPane(jDesktopPane0);
      DataViewInternalFrame dataViewInternalFrame0 = null;
      try {
        dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, jScrollPane0, (-686), (-686), (String) null, (Feature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.DataViewInternalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 0, "ZbN< =gSdIVDaa\"'", (Feature) null);
      dataViewInternalFrame0.setDataDividerLocation();
      assertTrue(dataViewInternalFrame0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 0, "ZbN< =gSdIVDaa\"'", (Feature) null);
      dataViewInternalFrame0.stopGetz();
      assertTrue(dataViewInternalFrame0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      JScrollPane jScrollPane0 = new JScrollPane();
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      Hashtable hashtable0 = jSlider0.createStandardLabels(150);
      DataViewInternalFrame dataViewInternalFrame0 = null;
      try {
        dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, jScrollPane0, 86, 86, "' for use as a flush trigger for the cache model named '", (Feature) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("uk.ac.sanger.artemis.editor.DataViewInternalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 0, "ZbN< =gSdIVDaa\"'", (Feature) null);
      dataViewInternalFrame0.deleteNote();
      assertFalse(dataViewInternalFrame0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 17, "ZbN< =gSdIVDaa\"'", (Feature) null);
      dataViewInternalFrame0.setAnnotationDividerLocation();
      assertTrue(dataViewInternalFrame0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 17, "ZbN< =gSdIVDaa\"'", (Feature) null);
      DataViewInternalFrame.ActiveJSplitPane dataViewInternalFrame_ActiveJSplitPane0 = dataViewInternalFrame0.new ActiveJSplitPane(0, dataViewInternalFrame0, jDesktopPane0);
      // Undeclared exception!
      try { 
        dataViewInternalFrame_ActiveJSplitPane0.setActive(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.DataViewInternalFrame$ActiveJSplitPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Hashtable<Dialog, Checkbox> hashtable0 = new Hashtable<Dialog, Checkbox>();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      DataViewInternalFrame dataViewInternalFrame0 = new DataViewInternalFrame(hashtable0, jDesktopPane0, (JScrollPane) null, 0, 0, "ZbN< =gSdIVDaa\"'", (Feature) null);
      dataViewInternalFrame0.updateNote();
      assertFalse(dataViewInternalFrame0.getIgnoreRepaint());
  }
}
