/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 03:20:27 GMT 2017
 */

package uk.ac.sanger.artemis.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.InputEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.io.IOException;
import java.net.URL;
import java.net.URLStreamHandler;
import javax.swing.JDesktopPane;
import javax.swing.JTabbedPane;
import javax.swing.event.HyperlinkEvent;
import javax.swing.text.Element;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.HTMLFrameHyperlinkEvent;
import javax.swing.text.html.StyleSheet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.editor.Annotation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Annotation_ESTest extends Annotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        annotation0.setUpSRSFrame(uRL0, "<br>");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      // Undeclared exception!
      try { 
        annotation0.setAnnotation((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      // Undeclared exception!
      try { 
        annotation0.insert((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.Annotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      // Undeclared exception!
      try { 
        annotation0.hyperlinkUpdate((HyperlinkEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.Annotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      // Undeclared exception!
      try { 
        annotation0.deleteGo((String) null, "wD9>c2?XNFd%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Annotation annotation0 = null;
      try {
        annotation0 = new Annotation(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      HyperlinkEvent.EventType hyperlinkEvent_EventType0 = HyperlinkEvent.EventType.ACTIVATED;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("/GO_component=", "", 0, "8|'M", uRLStreamHandler0);
      HTMLFrameHyperlinkEvent hTMLFrameHyperlinkEvent0 = new HTMLFrameHyperlinkEvent(annotation0, hyperlinkEvent_EventType0, uRL0, "GoYi DQHDL3(<}", "wE8Y`' pX7\"+:");
      annotation0.hyperlinkUpdate(hTMLFrameHyperlinkEvent0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      HyperlinkEvent.EventType hyperlinkEvent_EventType0 = HyperlinkEvent.EventType.ENTERED;
      HTMLEditorKit hTMLEditorKit0 = new HTMLEditorKit();
      StyleSheet styleSheet0 = hTMLEditorKit0.getStyleSheet();
      HTMLDocument hTMLDocument0 = new HTMLDocument(styleSheet0);
      Element element0 = hTMLDocument0.getDefaultRootElement();
      HTMLFrameHyperlinkEvent hTMLFrameHyperlinkEvent0 = new HTMLFrameHyperlinkEvent(jTabbedPane0, hyperlinkEvent_EventType0, (URL) null, "hg3S", element0, (InputEvent) null, "hg3S");
      annotation0.hyperlinkUpdate(hTMLFrameHyperlinkEvent0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      annotation0.goBack();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      // Undeclared exception!
      try { 
        annotation0.setUpSRSFrame((URL) null, "v[Wej?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.Annotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      annotation0.deleteNote();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.delete((String) null, false);
      assertFalse(annotation0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.insert("l;8j|7{", 0);
      annotation0.delete("", true);
      assertFalse(annotation0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      annotation0.deleteGo("57^", "57^");
      assertFalse(annotation0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.deleteGo("", "S$YmKp5NmX-zbY2p");
      assertFalse(annotation0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.insert("l;8j|7{", 0);
      annotation0.deleteGo("", "");
      assertFalse(annotation0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      annotation0.insert("Obw+?4%.6}L0[*", true);
      assertTrue(annotation0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      annotation0.insert("R(|hLWJWko", false);
      assertFalse(annotation0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      String string0 = annotation0.getFeatureText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.setAnnotation("@:^26tP");
      String string0 = annotation0.getFeatureText();
      assertEquals("/@:^26tP", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.setAnnotation("|L=B+_^|.g~[{eQ");
      assertTrue(annotation0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      Annotation annotation0 = new Annotation(jDesktopPane0);
      Annotation.PopupListener annotation_PopupListener0 = annotation0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(annotation0, 0, 0, 0, 0, 50, 50, 0, 2367, false, (-2498), 0, 0, 0.0);
      annotation_PopupListener0.mouseReleased(mouseWheelEvent0);
      assertEquals(0, mouseWheelEvent0.getUnitsToScroll());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      Annotation.PopupListener annotation_PopupListener0 = annotation0.new PopupListener();
      MouseEvent mouseEvent0 = new MouseEvent(annotation0, 4, (-188L), 0, (byte)87, 0, 0, 0, (-168), true, 3);
      annotation_PopupListener0.mousePressed(mouseEvent0);
      assertEquals((-188L), mouseEvent0.getWhen());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.insert("Ls='3bz?aqH{p/<s5E&", 17);
      assertFalse(annotation0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Annotation annotation0 = new Annotation((JDesktopPane) null);
      annotation0.reportHTML();
      assertFalse(annotation0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("FQbzJ=sC#3sj", "FQbzJ=sC#3sj", 1239, "fA", uRLStreamHandler0);
      Annotation annotation0 = null;
      try {
        annotation0 = new Annotation(uRL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.reflect.InvocationTargetException
         //
         verifyException("javax.swing.JEditorPane", e);
      }
  }
}
