/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 05:22:38 GMT 2017
 */

package uk.ac.sanger.artemis.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.io.GenbankStreamFeature;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.RangeVector;
import uk.ac.sanger.artemis.plot.HydrophilicityAlgorithm;
import uk.ac.sanger.artemis.plot.HydrophobicityAlgorithm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FeatureAlgorithm_ESTest extends FeatureAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Key key0 = new Key("");
      RangeVector rangeVector0 = new RangeVector((Range) null);
      Location location0 = new Location(rangeVector0, true);
      QualifierVector qualifierVector0 = new QualifierVector();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature(key0, location0, qualifierVector0);
      Feature feature0 = new Feature(genbankStreamFeature0);
      HydrophobicityAlgorithm hydrophobicityAlgorithm0 = new HydrophobicityAlgorithm(feature0);
      int int0 = hydrophobicityAlgorithm0.getValueCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HydrophobicityAlgorithm hydrophobicityAlgorithm0 = new HydrophobicityAlgorithm((Feature) null);
      Feature feature0 = hydrophobicityAlgorithm0.getFeature();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HydrophobicityAlgorithm hydrophobicityAlgorithm0 = new HydrophobicityAlgorithm((Feature) null);
      // Undeclared exception!
      try { 
        hydrophobicityAlgorithm0.getValues(1, 1, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.plot.HydroAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Key key0 = new Key("");
      RangeVector rangeVector0 = new RangeVector((Range) null);
      Location location0 = new Location(rangeVector0, true);
      QualifierVector qualifierVector0 = new QualifierVector();
      GenbankStreamFeature genbankStreamFeature0 = new GenbankStreamFeature(key0, location0, qualifierVector0);
      Feature feature0 = new Feature(genbankStreamFeature0);
      HydrophilicityAlgorithm hydrophilicityAlgorithm0 = new HydrophilicityAlgorithm(feature0);
      hydrophilicityAlgorithm0.getFeature();
  }
}
