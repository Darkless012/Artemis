/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 15:44:32 GMT 2018
 */

package uk.ac.sanger.artemis.j2ssh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.BoundedRangeModel;
import javax.swing.JProgressBar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.j2ssh.FTProgress;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FTProgress_ESTest extends FTProgress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "\"]J%T,>+M`zB");
      fTProgress0.started((-43L), "\"]J%T,>+M`zB");
      fTProgress0.progressed((-43L));
      assertFalse(fTProgress0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "");
      long long0 = fTProgress0.getProgress();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FTProgress fTProgress0 = new FTProgress((JProgressBar) null, (String) null);
      // Undeclared exception!
      try { 
        fTProgress0.started((-1246L), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.j2ssh.FTProgress", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar((BoundedRangeModel) null);
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "");
      // Undeclared exception!
      try { 
        fTProgress0.progressed(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JProgressBar", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FTProgress fTProgress0 = new FTProgress((JProgressBar) null, "GT");
      // Undeclared exception!
      try { 
        fTProgress0.getProgress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.j2ssh.FTProgress", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "\"]J%T,>+M`zB");
      // Undeclared exception!
      try { 
        fTProgress0.progressed((-43L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("uk.ac.sanger.artemis.j2ssh.FTProgress", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "\"]J%T,>+M`zB");
      fTProgress0.completed();
      assertFalse(fTProgress0.isCancelled());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "\"]J%T,>+M`zB");
      fTProgress0.started((-43L), "\"]J%T,>+M`zB");
      long long0 = fTProgress0.getProgress();
      assertEquals((-43L), long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar(100, 233);
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, " ");
      long long0 = fTProgress0.getProgress();
      assertEquals(100L, long0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      JProgressBar jProgressBar0 = new JProgressBar();
      FTProgress fTProgress0 = new FTProgress(jProgressBar0, "\"]J%T,>+M`zB");
      boolean boolean0 = fTProgress0.isCancelled();
      assertFalse(boolean0);
  }
}
