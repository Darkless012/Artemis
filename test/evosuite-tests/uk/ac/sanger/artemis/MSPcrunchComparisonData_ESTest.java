/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 05:05:08 GMT 2017
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.AlignMatch;
import uk.ac.sanger.artemis.MSPcrunchComparisonData;
import uk.ac.sanger.artemis.SimpleComparisonData;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.util.LinePushBackReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MSPcrunchComparisonData_ESTest extends MSPcrunchComparisonData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlignMatch alignMatch0 = SimpleComparisonData.makeAlignMatch(0, (-2310), 99, 0, (-2310), 99);
      MockFileWriter mockFileWriter0 = new MockFileWriter("uk.ac.sanger.artemis.util.PushBackException");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      MSPcrunchComparisonData.writeMatchFromAlignMatch(alignMatch0, "%Tx*a_D", "\"jR8g>y]pA6$", mockPrintWriter0);
      assertEquals(0, alignMatch0.getQuerySequenceStart());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range range0 = new Range(97, 97);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 460, 3);
      // Undeclared exception!
      try { 
        MSPcrunchComparisonData.writeMatchFromAlignMatch(alignMatch0, "while reading MSPcrunch data: not enough fields in this line: ", "while reading MSPcrunch data: not enough fields in this line: ", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.MSPcrunchComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlignMatch alignMatch0 = SimpleComparisonData.makeAlignMatch(0, 5199, 5199, 0, 1652, 0);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        MSPcrunchComparisonData.writeMatchFromAlignMatch(alignMatch0, "#gRNQxZWVdM5 z\"y0v", "#gRNQxZWVdM5 z\"y0v", pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MSPcrunchComparisonData mSPcrunchComparisonData0 = new MSPcrunchComparisonData();
      // Undeclared exception!
      try { 
        mSPcrunchComparisonData0.makeMatchFromString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MSPcrunchComparisonData mSPcrunchComparisonData0 = new MSPcrunchComparisonData();
      try { 
        mSPcrunchComparisonData0.makeMatchFromString("LinePushBackReader.pushBack () called twice before calling readLine ()");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading MSPcrunch data: failed to parse a number from this string: For input string: \"LinePushBackReader.pushBack\"
         //
         verifyException("uk.ac.sanger.artemis.MSPcrunchComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        MSPcrunchComparisonData.formatCorrect((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" > end: ");
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(stringReader0);
      MSPcrunchComparisonData mSPcrunchComparisonData0 = null;
      try {
        mSPcrunchComparisonData0 = new MSPcrunchComparisonData(linePushBackReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // while reading MSPcrunch data: not enough fields in this line:  > end: 
         //
         verifyException("uk.ac.sanger.artemis.MSPcrunchComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MSPcrunchComparisonData mSPcrunchComparisonData0 = null;
      try {
        mSPcrunchComparisonData0 = new MSPcrunchComparisonData((LinePushBackReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.SimpleComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";)_rDx");
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(stringReader0);
      linePushBackReader0.readLine();
      MSPcrunchComparisonData mSPcrunchComparisonData0 = new MSPcrunchComparisonData(linePushBackReader0);
      try { 
        mSPcrunchComparisonData0.makeMatchFromString("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading MSPcrunch data: not enough fields in this line: 
         //
         verifyException("uk.ac.sanger.artemis.MSPcrunchComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlignMatch alignMatch0 = SimpleComparisonData.makeAlignMatch(0, 5205, 5205, 0, 1652, 0);
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      MSPcrunchComparisonData.writeMatchFromAlignMatch(alignMatch0, "#gRNQxZWVdM5 z\"y0v", "#gRNQxZWVdM5 z\"y0v", pipedWriter0);
      LinePushBackReader linePushBackReader0 = new LinePushBackReader(pipedReader0);
      MSPcrunchComparisonData mSPcrunchComparisonData0 = null;
      try {
        mSPcrunchComparisonData0 = new MSPcrunchComparisonData(linePushBackReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // while reading MSPcrunch data: failed to parse a number from this string: For input string: \"z\"y0v\"
         //
         verifyException("uk.ac.sanger.artemis.MSPcrunchComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = MSPcrunchComparisonData.formatCorrect("uk.ac.sanger.artemis.ComparisonDataParseException");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MSPcrunchComparisonData mSPcrunchComparisonData0 = new MSPcrunchComparisonData();
      SimpleComparisonData simpleComparisonData0 = mSPcrunchComparisonData0.getNewSimpleComparisonData();
      assertNotSame(simpleComparisonData0, mSPcrunchComparisonData0);
  }
}
