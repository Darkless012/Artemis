/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 14:25:17 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.GotoEvent;
import uk.ac.sanger.artemis.SimpleEntryGroup;
import uk.ac.sanger.artemis.io.FastaStreamSequence;
import uk.ac.sanger.artemis.sequence.Bases;
import uk.ac.sanger.artemis.sequence.Marker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GotoEvent_ESTest extends GotoEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GotoEvent gotoEvent0 = new GotoEvent("uk.ac.sanger.artemis.GotoEvent", (Marker) null);
      Marker marker0 = gotoEvent0.getMarker();
      assertNull(marker0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GotoEvent gotoEvent0 = null;
      try {
        gotoEvent0 = new GotoEvent((Object) null, (Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      FastaStreamSequence fastaStreamSequence0 = new FastaStreamSequence("*XPG((L #q]", "*XPG((L #q]");
      Bases bases0 = new Bases(fastaStreamSequence0);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup(bases0);
      Entry entry0 = simpleEntryGroup0.createEntry();
      Feature feature0 = entry0.createFeature();
      Marker marker0 = feature0.getLastBaseMarker();
      GotoEvent gotoEvent0 = new GotoEvent(mockJapaneseDate0, marker0);
      gotoEvent0.getMarker();
  }
}
