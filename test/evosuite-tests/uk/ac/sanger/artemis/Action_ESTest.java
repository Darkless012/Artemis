/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 10:19:37 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.FileDialog;
import java.util.Stack;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Action;
import uk.ac.sanger.artemis.ChangeEvent;
import uk.ac.sanger.artemis.ChangeEventVector;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.EntryChangeEvent;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.FeatureChangeEvent;
import uk.ac.sanger.artemis.io.BlastStreamFeature;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.sequence.Bases;
import uk.ac.sanger.artemis.sequence.SequenceChangeEvent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Action_ESTest extends Action_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Action action0 = new Action();
      EntryChangeEvent entryChangeEvent0 = new EntryChangeEvent(action0, (Entry) null, 0);
      action0.addEntryChangeEvent(entryChangeEvent0);
      ChangeEventVector changeEventVector0 = action0.getChangeEvents();
      assertEquals(1, changeEventVector0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Action action0 = new Action();
      // Undeclared exception!
      try { 
        action0.addFeatureChangeEvent((FeatureChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.Action", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Action action0 = new Action();
      // Undeclared exception!
      try { 
        action0.addChangeEvent((ChangeEvent) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - unknown event type: null
         //
         verifyException("uk.ac.sanger.artemis.Action", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Action action0 = new Action();
      Stack<FileDialog> stack0 = new Stack<FileDialog>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 1);
      Key key0 = new Key("Dk");
      QualifierVector qualifierVector0 = new QualifierVector();
      BlastStreamFeature blastStreamFeature0 = new BlastStreamFeature(key0, (Location) null, qualifierVector0);
      Feature feature0 = new Feature(blastStreamFeature0);
      FeatureChangeEvent featureChangeEvent0 = new FeatureChangeEvent(defaultTableModel0, feature0, key0, (Location) null, qualifierVector0, 2);
      action0.addFeatureChangeEvent(featureChangeEvent0);
      assertTrue(action0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Action action0 = new Action();
      EntryChangeEvent entryChangeEvent0 = new EntryChangeEvent(action0, (Entry) null, 0);
      action0.addChangeEvent(entryChangeEvent0);
      assertFalse(action0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Action action0 = new Action();
      Bases bases0 = new Bases((Sequence) null);
      SequenceChangeEvent sequenceChangeEvent0 = new SequenceChangeEvent(bases0, 0, 650, " 3=H]^_o");
      // Undeclared exception!
      try { 
        action0.addChangeEvent(sequenceChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.sequence.Bases", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Action action0 = new Action();
      boolean boolean0 = action0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Action action0 = new Action();
      ChangeEventVector changeEventVector0 = action0.getChangeEvents();
      assertEquals(0, changeEventVector0.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Action action0 = new Action();
      EntryChangeEvent entryChangeEvent0 = new EntryChangeEvent(action0, (Entry) null, 0);
      assertTrue(action0.isEmpty());
      
      action0.addEntryChangeEvent(entryChangeEvent0);
      boolean boolean0 = action0.isEmpty();
      assertFalse(boolean0);
  }
}
