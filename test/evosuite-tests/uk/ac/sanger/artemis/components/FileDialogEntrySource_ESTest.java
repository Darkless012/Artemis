/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 01:54:27 GMT 2017
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JFrame;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.components.FileDialogEntrySource;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.sequence.Bases;
import uk.ac.sanger.artemis.util.InputStreamProgressListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileDialogEntrySource_ESTest extends FileDialogEntrySource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      doReturn("^g$J:.soAV$1w O").when(inputStreamProgressListener0).toString();
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, inputStreamProgressListener0);
      InputStreamProgressListener inputStreamProgressListener1 = fileDialogEntrySource0.getInputStreamProgressListener();
      assertSame(inputStreamProgressListener1, inputStreamProgressListener0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, inputStreamProgressListener0);
      Bases bases0 = new Bases((Sequence) null);
      Entry.newEntry(bases0);
      // Undeclared exception!
      fileDialogEntrySource0.getEntry(bases0, false);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, inputStreamProgressListener0);
      String string0 = fileDialogEntrySource0.getSourceName();
      assertEquals("Filesystem", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, (InputStreamProgressListener) null);
      InputStreamProgressListener inputStreamProgressListener0 = fileDialogEntrySource0.getInputStreamProgressListener();
      assertNull(inputStreamProgressListener0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, (InputStreamProgressListener) null);
      // Undeclared exception!
      try { 
        fileDialogEntrySource0.getEntry(true);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Permission Denied
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, inputStreamProgressListener0);
      boolean boolean0 = fileDialogEntrySource0.isFullEntrySource();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      FileDialogEntrySource fileDialogEntrySource0 = new FileDialogEntrySource((JFrame) null, inputStreamProgressListener0);
      Bases bases0 = new Bases((Sequence) null);
      // Undeclared exception!
      try { 
        fileDialogEntrySource0.getEntry(bases0, false);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Permission Denied
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
