/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 03:02:41 GMT 2017
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.EntryGroup;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.FeatureVector;
import uk.ac.sanger.artemis.components.TransferAnnotationTool;
import uk.ac.sanger.artemis.components.genebuilder.ortholog.MatchPanel;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransferAnnotationTool_ESTest extends TransferAnnotationTool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransferAnnotationTool transferAnnotationTool0 = null;
      try {
        transferAnnotationTool0 = new TransferAnnotationTool((Feature) null, (EntryGroup) null, (MatchPanel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.TransferAnnotationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringVector stringVector0 = new StringVector("genban_ac3Fs8ions");
      Qualifier qualifier0 = new Qualifier("", stringVector0);
      Qualifier qualifier1 = TransferAnnotationTool.getQualifierWithoutDuplicateValues(qualifier0, stringVector0);
      assertNull(qualifier1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringVector stringVector0 = new StringVector("genban_ac3Fs8ions");
      Qualifier qualifier0 = new Qualifier("");
      qualifier0.addValue("yv/V:HBy1}1(olQMcg");
      Qualifier qualifier1 = TransferAnnotationTool.getQualifierWithoutDuplicateValues(qualifier0, stringVector0);
      assertNotNull(qualifier1);
      assertNotSame(qualifier1, qualifier0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FeatureVector featureVector0 = new FeatureVector();
      StringVector stringVector0 = Feature.getAllQualifierNames(featureVector0);
      Qualifier qualifier0 = new Qualifier("with=");
      Qualifier qualifier1 = TransferAnnotationTool.getQualifierWithoutDuplicateValues(qualifier0, stringVector0);
      assertSame(qualifier1, qualifier0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringVector stringVector0 = new StringVector("genban_ac3Fs8ions");
      Qualifier qualifier0 = new Qualifier("");
      // Undeclared exception!
      try { 
        TransferAnnotationTool.getQualifierWithoutDuplicateValues(qualifier0, stringVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.TransferAnnotationTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Qualifier qualifier0 = TransferAnnotationTool.getQualifierWithoutDuplicateValues((Qualifier) null, (StringVector) null);
      assertNull(qualifier0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = TransferAnnotationTool.isNonTransferable("membrane_structure");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = TransferAnnotationTool.isNonTransferable("");
      assertFalse(boolean0);
  }
}
