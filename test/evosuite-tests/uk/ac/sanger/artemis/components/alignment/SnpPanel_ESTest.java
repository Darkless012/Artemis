/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 01:25:13 GMT 2017
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import javax.swing.DebugGraphics;
import htsjdk.samtools.SAMFileHeader;
import htsjdk.samtools.SAMRecord;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.ExtensionHandler;
import org.apache.batik.svggen.ImageHandlerBase64Encoder;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMImplementation;
import uk.ac.sanger.artemis.components.alignment.BamView;
import uk.ac.sanger.artemis.components.alignment.SnpPanel;
import uk.ac.sanger.artemis.io.FastaStreamSequence;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.sequence.Bases;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SnpPanel_ESTest extends SnpPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      // Undeclared exception!
      try { 
        snpPanel0.init((BamView) null, 1152.263F, 2398, 255);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.SnpPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("", ",mjN6g! EM4VC}{u@WV", "");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      DebugGraphics debugGraphics0 = new DebugGraphics(sVGGraphics2D0);
      // Undeclared exception!
      try { 
        snpPanel0.paintComponent(debugGraphics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DebugGraphics cannot be cast to java.awt.Graphics2D
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.SnpPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      SAMFileHeader sAMFileHeader0 = new SAMFileHeader();
      SAMRecord sAMRecord0 = new SAMRecord(sAMFileHeader0);
      snpPanel0.addRecord(sAMRecord0, 224);
      snpPanel0.addRecord(sAMRecord0, 0);
      assertEquals("*", sAMRecord0.getMateReferenceName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      SAMFileHeader sAMFileHeader0 = new SAMFileHeader();
      SAMRecord sAMRecord0 = new SAMRecord(sAMFileHeader0);
      snpPanel0.addRecord(sAMRecord0, 198);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("SO", "1.4", "*");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      snpPanel0.draw(sVGGraphics2D0);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("SO", "1.4", "*");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      // Undeclared exception!
      try { 
        snpPanel0.draw(sVGGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.SnpPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FastaStreamSequence fastaStreamSequence0 = new FastaStreamSequence(">[*AU,z%u");
      Bases bases0 = new Bases(fastaStreamSequence0);
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, bases0);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType(">[*AU,z%u", ">[*AU,z%u", (String) null);
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      ExtensionHandler extensionHandler0 = sVGGeneratorContext0.getExtensionHandler();
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0, imageHandlerBase64Encoder0, extensionHandler0, true);
      snpPanel0.paintComponent(sVGGraphics2D0);
      assertFalse(snpPanel0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, (Bases) null);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("v$SZ3JO", "", "^o8J\"@FyONt9xO/DFY");
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, (DOMImplementation) null);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      snpPanel0.paintComponent(sVGGraphics2D0);
      assertFalse(snpPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Bases bases0 = new Bases((Sequence) null);
      SnpPanel snpPanel0 = new SnpPanel((BamView) null, bases0);
      // Undeclared exception!
      try { 
        snpPanel0.paintComponent((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JComponent", e);
      }
  }
}
