/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 01:16:22 GMT 2017
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.net.URL;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.DisplayAdjustmentEvent;
import uk.ac.sanger.artemis.components.FeatureDisplay;
import uk.ac.sanger.artemis.components.alignment.LookSeqPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LookSeqPanel_ESTest extends LookSeqPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("chr=", "chr=");
      // Undeclared exception!
      try { 
        lookSeqPanel0.showOptions();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      String string0 = lookSeqPanel0.getQueryStr();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      lookSeqPanel0.setImage("Mximum Inel Size...", "Mximum Inel Size...");
      String string0 = lookSeqPanel0.getQueryStr();
      assertEquals("Mximum Inel Size...", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      // Undeclared exception!
      try { 
        lookSeqPanel0.showOptions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LookSeqPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      // Undeclared exception!
      try { 
        lookSeqPanel0.setDisplay(1003, 1003, (DisplayAdjustmentEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LookSeqPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      // Undeclared exception!
      try { 
        lookSeqPanel0.paintComponent(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("to=", "to=");
      URL uRL0 = mockFile0.toURL();
      LookSeqPanel lookSeqPanel0 = null;
      try {
        lookSeqPanel0 = new LookSeqPanel(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = null;
      try {
        lookSeqPanel0 = new LookSeqPanel((URL) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("", "");
      DisplayAdjustmentEvent displayAdjustmentEvent0 = new DisplayAdjustmentEvent("", 1, 1, 1, 1, 1, false, 1);
      lookSeqPanel0.setDisplay(1, 1, displayAdjustmentEvent0);
      assertEquals("", lookSeqPanel0.getQueryStr());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      lookSeqPanel0.setImage(";F~]Aa}keUwScL.FQUn", "Only symbols of type IntegerAlphabet.IntegerSymbol are valid for this alphabet.\n(");
      lookSeqPanel0.setDisplay((-2529), (-1098), (DisplayAdjustmentEvent) null);
      assertEquals("Only symbols of type IntegerAlphabet.IntegerSymbol are valid for this alphabet.\n(", lookSeqPanel0.getQueryStr());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("!74Ofv09U*%@Do>e,&", "!74Ofv09U*%@Do>e,&");
      DisplayAdjustmentEvent displayAdjustmentEvent0 = new DisplayAdjustmentEvent("!74Ofv09U*%@Do>e,&", (-2012), (-35), (-2012), (-2012), 0, true, 0);
      lookSeqPanel0.setDisplay(0, (-2012), displayAdjustmentEvent0);
      assertEquals("!74Ofv09U*%@Do>e,&", lookSeqPanel0.getQueryStr());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("", "");
      lookSeqPanel0.setUrl("6C6>>;", "");
      assertEquals("", lookSeqPanel0.getQueryStr());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel(uRL0);
      assertFalse(lookSeqPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("", "");
      String string0 = lookSeqPanel0.getQueryStr();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel();
      lookSeqPanel0.setFeatureDisplay((FeatureDisplay) null);
      assertFalse(lookSeqPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("http:", (String) null);
      DisplayAdjustmentEvent displayAdjustmentEvent0 = new DisplayAdjustmentEvent(lookSeqPanel0, 1349, 664, 664, 664);
      lookSeqPanel0.displayAdjustmentValueChanged(displayAdjustmentEvent0);
      assertNull(lookSeqPanel0.getQueryStr());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LookSeqPanel lookSeqPanel0 = new LookSeqPanel("{chr=", "{chr=");
      // Undeclared exception!
      try { 
        lookSeqPanel0.showOptions();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
