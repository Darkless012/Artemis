/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 01:08:10 GMT 2017
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.IllegalComponentStateException;
import java.awt.SystemColor;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JSplitPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMImplementation;
import uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractGraphPanel_ESTest extends AbstractGraphPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      abstractGraphPanel0.setStartAndEnd(0, 63);
      assertFalse(abstractGraphPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("additive");
      abstractGraphPanel0.initPopupMenu(jCheckBoxMenuItem0);
      assertFalse(abstractGraphPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("*4?aDckj]t7AmE#xS", "draw_feature_borders", "*4?aDckj]t7AmE#xS");
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      // Undeclared exception!
      try { 
        abstractGraphPanel0.drawMax(sVGGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue((-3370), false);
      assertEquals((-3370.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      // Undeclared exception!
      try { 
        abstractGraphPanel0.initPopupMenu((JComponent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      // Undeclared exception!
      try { 
        abstractGraphPanel0.drawMax((Graphics2D) null, (-2267.214F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(abstractGraphPanel0, 0, 0, 1767, 0, 0, 5, 0, 0, true, menuElementArray0, menuSelectionManager0);
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseReleased(menuDragMouseEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(abstractGraphPanel0, 929, (-2147483648L), 929, 0, 0, 131, false, (-547), 0, 0);
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseClicked(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel$PopupListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(abstractGraphPanel0, 0, 0, 1767, 0, 0, 5, 0, 0, true, menuElementArray0, menuSelectionManager0);
      abstractGraphPanel_PopupListener0.mouseClicked(menuDragMouseEvent0);
      assertEquals(0, menuDragMouseEvent0.getClickCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("*4?aDckj]t7AmE#xS", "draw_feature_borders", "*4?aDckj]t7AmE#xS");
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      SystemColor systemColor0 = SystemColor.textText;
      abstractGraphPanel0.drawSelectionRange(sVGGraphics2D0, 0.0F, (-1129), (short)4, (short)16, systemColor0);
      assertFalse(abstractGraphPanel0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue(1683, false);
      assertEquals(1683.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue(0, false);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue(29, true);
      assertEquals(3.3672957F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(abstractGraphPanel0, (-3370), (-3370), (-3370), (-3370), (-3370), (-3370), 2408, (-3370), false, 1, (-3370), 2408, (-519.0));
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseReleased(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel$PopupListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseEvent mouseEvent0 = new MouseEvent(abstractGraphPanel0, 10, 0L, 0, 40960, 10, 0, false);
      abstractGraphPanel_PopupListener0.mousePressed(mouseEvent0);
      assertFalse(mouseEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      JSplitPane jSplitPane0 = new JSplitPane();
      // Undeclared exception!
      try { 
        abstractGraphPanel0.initPopupMenu(jSplitPane0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot add to layout: unknown constraint: null
         //
         verifyException("javax.swing.plaf.basic.BasicSplitPaneUI$BasicHorizontalLayoutManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      abstractGraphPanel0.setStartAndEnd(64000, 64000);
      // Undeclared exception!
      try { 
        abstractGraphPanel0.drawMax((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      abstractGraphPanel0.setPixPerBase(35);
      assertFalse(abstractGraphPanel0.isFocusCycleRoot());
  }
}
