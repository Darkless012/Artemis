/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 11:11:56 GMT 2018
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.IllegalComponentStateException;
import java.awt.SystemColor;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JComponent;
import javax.swing.JSlider;
import javax.swing.JTree;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.tree.TreeModel;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.ImageHandlerBase64Encoder;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMImplementation;
import uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractGraphPanel_ESTest extends AbstractGraphPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      // Undeclared exception!
      try { 
        abstractGraphPanel0.initPopupMenu((JComponent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("9R-6Z+>", "Using cached index ", "");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0, imageHandlerBase64Encoder0, defaultExtensionHandler0, true);
      // Undeclared exception!
      try { 
        abstractGraphPanel0.drawMax(sVGGraphics2D0, 843);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jSlider0, (-39), (-39), 25, 25, 25, (-39), (-39), (-1681), true, (MenuElement[]) null, menuSelectionManager0);
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseReleased(menuDragMouseEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseEvent mouseEvent0 = new MouseEvent(abstractGraphPanel0, 2753, 1000L, 342, (-874), (-1687), 1123, false);
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseClicked(mouseEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel$PopupListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jSlider0, (-39), (-39), 25, 25, 25, (-39), (-39), (-1681), true, (MenuElement[]) null, menuSelectionManager0);
      abstractGraphPanel_PopupListener0.mouseClicked(menuDragMouseEvent0);
      assertEquals((-39), menuDragMouseEvent0.getID());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType(".LC#T3wt97$.h0&", (String) null, ".LC#T3wt97$.h0&");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      SystemColor systemColor0 = SystemColor.desktop;
      abstractGraphPanel0.drawSelectionRange(sVGGraphics2D0, 3, (-811), (-811), (short)16, systemColor0);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue(126, true);
      assertEquals(4.836282F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue(0, false);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      float float0 = abstractGraphPanel0.getValue((-2672), false);
      assertEquals((-2672.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(abstractGraphPanel0, 2315, 2315, 3, 2315, 8000, 2315, (-1509), 8000, false, (-1509), (-712), 8000);
      // Undeclared exception!
      try { 
        abstractGraphPanel_PopupListener0.mouseReleased(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel$PopupListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      AbstractGraphPanel.PopupListener abstractGraphPanel_PopupListener0 = abstractGraphPanel0.new PopupListener();
      MouseEvent mouseEvent0 = new MouseEvent(abstractGraphPanel0, 2753, 1000L, 342, (-874), (-1687), 1123, false);
      abstractGraphPanel_PopupListener0.mousePressed(mouseEvent0);
      assertEquals(0, mouseEvent0.getYOnScreen());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      JTree jTree0 = new JTree((TreeModel) null);
      abstractGraphPanel0.initPopupMenu(jTree0);
      assertFalse(jTree0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      abstractGraphPanel0.setStartAndEnd(5, 3);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("Filter minimum score must be less than maximum score", "Window Size", "GBReference_reference");
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      // Undeclared exception!
      try { 
        abstractGraphPanel0.drawMax(sVGGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.AbstractGraphPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractGraphPanel abstractGraphPanel0 = new AbstractGraphPanel();
      abstractGraphPanel0.setPixPerBase(5408);
      assertFalse(abstractGraphPanel0.isFocusTraversalPolicyProvider());
  }
}
