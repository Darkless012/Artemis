/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 11:29:11 GMT 2018
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import htsjdk.samtools.SAMFileHeader;
import htsjdk.samtools.SAMRecord;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.alignment.SAMRecordFlagConjunctionPredicate;
import uk.ac.sanger.artemis.components.alignment.SAMRecordFlagPredicate;
import uk.ac.sanger.artemis.components.alignment.SAMRecordPredicate;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAMRecordFlagConjunctionPredicate_ESTest extends SAMRecordFlagConjunctionPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate((-257), false);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, 1386);
      int[] intArray0 = new int[6];
      SAMRecordFlagPredicate.FLAGS = intArray0;
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate(0);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, 0);
      int[] intArray0 = new int[2];
      SAMRecordFlagPredicate.FLAGS = intArray0;
      SAMRecordFlagConjunctionPredicate.OR = (-1351);
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate((-1));
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, (-1));
      // Undeclared exception!
      try { 
        sAMRecordFlagConjunctionPredicate0.testPredicate((SAMRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.SAMRecordFlagPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate(0);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, 0);
      int[] intArray0 = new int[2];
      SAMRecordFlagPredicate.FLAGS = intArray0;
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector<SAMRecordPredicate> vector0 = new Vector<SAMRecordPredicate>();
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(vector0, (-3219));
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate1 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagConjunctionPredicate0, sAMRecordFlagConjunctionPredicate0, 0);
      boolean boolean0 = sAMRecordFlagConjunctionPredicate1.testPredicate((SAMRecord) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate(0);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, 0);
      int[] intArray0 = new int[2];
      SAMRecordFlagPredicate.FLAGS = intArray0;
      SAMRecordFlagConjunctionPredicate.OR = (-1351);
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      SAMRecordFlagConjunctionPredicate.OR = 0;
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate((-9), false);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, (-9));
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      int[] intArray0 = new int[5];
      SAMRecordFlagPredicate.FLAGS = intArray0;
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SAMRecordFlagPredicate sAMRecordFlagPredicate0 = new SAMRecordFlagPredicate((-9), false);
      SAMRecordFlagConjunctionPredicate sAMRecordFlagConjunctionPredicate0 = new SAMRecordFlagConjunctionPredicate(sAMRecordFlagPredicate0, sAMRecordFlagPredicate0, (-9));
      SAMRecord sAMRecord0 = new SAMRecord((SAMFileHeader) null);
      boolean boolean0 = sAMRecordFlagConjunctionPredicate0.testPredicate(sAMRecord0);
      assertFalse(boolean0);
  }
}
