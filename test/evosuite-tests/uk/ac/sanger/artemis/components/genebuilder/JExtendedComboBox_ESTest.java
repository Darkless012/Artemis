/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 02:18:04 GMT 2017
 */

package uk.ac.sanger.artemis.components.genebuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Panel;
import java.awt.ScrollPane;
import java.util.Vector;
import javax.swing.JList;
import javax.swing.KeyStroke;
import javax.swing.event.PopupMenuEvent;
import javax.swing.table.DefaultTableModel;
import org.emboss.jemboss.JembossParams;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.JExtendedComboBox;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JExtendedComboBox_ESTest extends JExtendedComboBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPrivateServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
      
      jExtendedComboBox0.setHighLightCurrent(true);
      JList<ScrollPane> jList0 = new JList<ScrollPane>();
      jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, (Object) null, 5, true, true);
      assertTrue(jExtendedComboBox0.isHighLightCurrent());
      assertEquals(0, jExtendedComboBox0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(true);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
      
      jExtendedComboBox0.setHighLightCurrent(true);
      boolean boolean0 = jExtendedComboBox0.isHighLightCurrent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPublicServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      jExtendedComboBox0.setCurrent((-2211));
      int int0 = jExtendedComboBox0.getCurrent();
      assertEquals((-2211), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = null;
      try {
        jExtendedComboBox0 = new JExtendedComboBox((String[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = null;
      try {
        jExtendedComboBox0 = new JExtendedComboBox((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = null;
      try {
        jExtendedComboBox0 = new JExtendedComboBox((Vector<?>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = null;
      try {
        jExtendedComboBox0 = new JExtendedComboBox((Vector<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0, false);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPublicServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      boolean boolean0 = jExtendedComboBox0.isHighLightCurrent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPublicServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      int int0 = jExtendedComboBox0.getCurrent();
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPrivateServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
      
      jExtendedComboBox0.setHighLightCurrent(true);
      JList<ScrollPane> jList0 = new JList<ScrollPane>();
      jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, (Object) null, 0, true, true);
      assertTrue(jExtendedComboBox0.isHighLightCurrent());
      assertEquals(0, jExtendedComboBox0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      JExtendedComboBox.ComboPopupMenuLister jExtendedComboBox_ComboPopupMenuLister0 = jExtendedComboBox0.new ComboPopupMenuLister();
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      JList<Panel> jList0 = new JList<Panel>();
      // Undeclared exception!
      try { 
        jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, jExtendedComboBox_ComboPopupMenuLister0, (-2202), true, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // uk.ac.sanger.artemis.components.genebuilder.JExtendedComboBox$ComboPopupMenuLister cannot be cast to org.gmod.schema.cv.CvTerm
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.JExtendedComboBox$ComboBoxRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      JExtendedComboBox.ComboPopupMenuLister jExtendedComboBox_ComboPopupMenuLister0 = jExtendedComboBox0.new ComboPopupMenuLister();
      PopupMenuEvent popupMenuEvent0 = new PopupMenuEvent(jExtendedComboBox0);
      jExtendedComboBox_ComboPopupMenuLister0.popupMenuWillBecomeVisible(popupMenuEvent0);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2332, 1246);
      Vector vector0 = defaultTableModel0.getDataVector();
      JExtendedComboBox jExtendedComboBox0 = null;
      try {
        jExtendedComboBox0 = new JExtendedComboBox(vector0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.gmod.schema.cv.CvTerm
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
      
      jExtendedComboBox0.setHighLightCurrent(true);
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      JList<Panel> jList0 = new JList<Panel>();
      jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, (Object) null, (-2202), true, true);
      assertTrue(jExtendedComboBox0.isHighLightCurrent());
      assertEquals(0, jExtendedComboBox0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      JList<Panel> jList0 = new JList<Panel>();
      jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, (Object) null, (-2202), true, true);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(false);
      JExtendedComboBox.ComboBoxRenderer jExtendedComboBox_ComboBoxRenderer0 = jExtendedComboBox0.new ComboBoxRenderer();
      JList<KeyStroke> jList0 = new JList<KeyStroke>();
      jExtendedComboBox_ComboBoxRenderer0.getListCellRendererComponent(jList0, "java.lang.String@0000000004", 308, false, true);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPrivateServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0);
      assertEquals(0, jExtendedComboBox0.getCurrent());
      
      jExtendedComboBox0.setCurrent(1);
      int int0 = jExtendedComboBox0.getCurrent();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.getPrivateServers();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0);
      JExtendedComboBox.ComboPopupMenuLister jExtendedComboBox_ComboPopupMenuLister0 = jExtendedComboBox0.new ComboPopupMenuLister();
      PopupMenuEvent popupMenuEvent0 = new PopupMenuEvent(jembossParams0);
      jExtendedComboBox_ComboPopupMenuLister0.popupMenuWillBecomeInvisible(popupMenuEvent0);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      JExtendedComboBox.ComboPopupMenuLister jExtendedComboBox_ComboPopupMenuLister0 = jExtendedComboBox0.new ComboPopupMenuLister();
      PopupMenuEvent popupMenuEvent0 = new PopupMenuEvent(jExtendedComboBox0);
      jExtendedComboBox_ComboPopupMenuLister0.popupMenuCanceled(popupMenuEvent0);
      assertFalse(jExtendedComboBox0.isHighLightCurrent());
  }
}
