/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 12:19:56 GMT 2018
 */

package uk.ac.sanger.artemis.components.genebuilder.cv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox;
import uk.ac.sanger.artemis.components.genebuilder.cv.ProductBox;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCvBox_ESTest extends AbstractCvBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("");
      Dimension dimension0 = new Dimension(6, 0);
      ProductBox productBox0 = new ProductBox(qualifier0, "", 6, dimension0, dimension0);
      Date date0 = productBox0.getDate(";[S&&[^,;=]]+=");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("^", "^");
      Dimension dimension0 = new Dimension((-10), (-10));
      ProductBox productBox0 = new ProductBox(qualifier0, "^", (-10), dimension0, dimension0);
      String string0 = productBox0.changeField("5", "^", "5");
      assertEquals("5^", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("");
      Dimension dimension0 = new Dimension(6, 0);
      ProductBox productBox0 = new ProductBox(qualifier0, "", 6, dimension0, dimension0);
      String string0 = productBox0.changeField("", "", ";[S&&[^,;=]]+=");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "9igBR@h@1PX3HRnWB7", 13, dimension0, dimension0);
      boolean boolean0 = productBox0.isQualifierChanged();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = AbstractCvBox.getField("", "L^?N*^8y:KZV:>Gec.%");
      assertEquals("L^?N*^8y:KZV:>Gec.%", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = AbstractCvBox.getField("=", "1%=");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringVector stringVector0 = new StringVector("U /C6Tf+");
      Qualifier qualifier0 = new Qualifier("", stringVector0);
      Dimension dimension0 = new Dimension((-253), 588);
      ProductBox productBox0 = new ProductBox(qualifier0, "", 588, dimension0, dimension0);
      QualifierVector qualifierVector0 = new QualifierVector();
      // Undeclared exception!
      try { 
        productBox0.updateQualifier(qualifierVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.ProductBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractCvBox.getFieldIgnoreSeparator((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractCvBox.getField("DtrDWt{ m;\"0V;jM", "DtrDWt{ m;\"0V;jM");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractCvBox.getField("org.apache.log4j.AsyncAppender", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox((Qualifier) null, "8v!4o)k5hl37N}", 44, dimension0, dimension0);
      // Undeclared exception!
      try { 
        productBox0.changeField((String) null, "", "getDbs");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringVector stringVector0 = new StringVector("uimode");
      Qualifier qualifier0 = new Qualifier("2i78m6", stringVector0);
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "=", 1807, dimension0, dimension0);
      Date date0 = productBox0.getDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("x", "x");
      Dimension dimension0 = new Dimension(6, 0);
      ProductBox productBox0 = new ProductBox(qualifier0, "x", 6, dimension0, dimension0);
      Date date0 = productBox0.getDate("x");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringVector stringVector0 = new StringVector("uimode");
      Qualifier qualifier0 = new Qualifier("T", stringVector0);
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "T", 1807, dimension0, dimension0);
      Date date0 = productBox0.getDate((String) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Dimension dimension0 = new Dimension((-648), (-2519));
      ProductBox productBox0 = new ProductBox((Qualifier) null, "", (-897), dimension0, dimension0);
      String string0 = productBox0.changeField("missing ScriptReader.", "", "D9U{fUqDn1cJoae=R");
      assertEquals("D9U{fUqDn1cJoae=R", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dimension dimension0 = new Dimension((-648), (-2519));
      ProductBox productBox0 = new ProductBox((Qualifier) null, "", (-897), dimension0, dimension0);
      String string0 = productBox0.changeField("missing ScriptReader.", "", "missing ScriptReader.");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("^", "^");
      Dimension dimension0 = new Dimension((-10), (-10));
      ProductBox productBox0 = new ProductBox(qualifier0, "^", (-10), dimension0, dimension0);
      String string0 = productBox0.changeField("^", "^", ";[S&&[^,;=]]+=");
      assertEquals(";[S&&[^^;=]]+=", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("x");
      Dimension dimension0 = new Dimension(6, 0);
      ProductBox productBox0 = new ProductBox(qualifier0, "x", 6, dimension0, dimension0);
      String string0 = productBox0.changeField("x", "x", ";[S&&[^,;=]]+=");
      assertEquals(";[S&&[^,;=]]+=;xx", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = AbstractCvBox.getFieldIgnoreSeparator("", "MsHG");
      assertEquals("MsHG", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = AbstractCvBox.getFieldIgnoreSeparator("U&zG)JCe`R0", "DtrDWt{ m;\"0V;jM");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractCvBox.getFieldIgnoreSeparator("XH64zO5~'E928;", "XH64zO5~'E928;");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("x", "x");
      Dimension dimension0 = new Dimension(6, 0);
      ProductBox productBox0 = new ProductBox(qualifier0, "x", 6, dimension0, dimension0);
      String string0 = productBox0.changeField("x", "x", "KX{o/gD:j7W?");
      assertEquals("KXx", string0);
  }
}
