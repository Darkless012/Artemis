/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 02:10:01 GMT 2017
 */

package uk.ac.sanger.artemis.components.genebuilder.cv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.cv.DatePanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatePanel_ESTest extends DatePanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatePanel datePanel0 = null;
      try {
        datePanel0 = new DatePanel("(Jo;ZI-:", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"(Jo;\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatePanel datePanel0 = null;
      try {
        datePanel0 = new DatePanel("nQ0FsDkd");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"nQ0F\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel(" |\"b6&", (-554));
      Date date0 = datePanel0.getDate("y");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel("");
      Date date0 = datePanel0.getDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel(" |\"b6&", (-554));
      Date date0 = datePanel0.getDate((String) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatePanel datePanel0 = null;
      try {
        datePanel0 = new DatePanel("20140214");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (start <= value <= end) is false
         //
         verifyException("javax.swing.SpinnerDateModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel(" |\"b6&", (-554));
      String string0 = datePanel0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel("}7U-zDfo7Ein])$=e");
      Date date0 = datePanel0.getDate("20140214");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel("");
      // Undeclared exception!
      try { 
        datePanel0.setValue("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal value
         //
         verifyException("javax.swing.SpinnerDateModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatePanel datePanel0 = null;
      try {
        datePanel0 = new DatePanel("19700101", 66);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (start <= value <= end) is false
         //
         verifyException("javax.swing.SpinnerDateModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = DatePanel.getDate();
      assertEquals("20140214", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatePanel datePanel0 = new DatePanel((String) null);
      // Undeclared exception!
      try { 
        datePanel0.getDate("U0rHBFfi");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"U0rH\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
