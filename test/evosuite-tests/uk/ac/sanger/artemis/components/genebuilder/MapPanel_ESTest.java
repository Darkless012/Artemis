/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 02:22:03 GMT 2017
 */

package uk.ac.sanger.artemis.components.genebuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentType;
import uk.ac.sanger.artemis.components.genebuilder.MapPanel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MapPanel_ESTest extends MapPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      MapPanel.drawFeature(sVGGraphics2D0, (-1618), 0, 260, systemColor0, systemColor0, (-1686.0F), false, (-730.1542F), (short)32);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapPanel mapPanel0 = new MapPanel();
      MapPanel.border = (-1688);
      int int0 = mapPanel0.getTranscriptSize();
      assertEquals((-3331), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MapPanel mapPanel0 = new MapPanel();
      int int0 = mapPanel0.getFontHeight();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Color color0 = Color.green;
      // Undeclared exception!
      try { 
        MapPanel.drawFeature((Graphics2D) null, (-2481), 0, 0, color0, color0, 0, false, (-946.607F), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.MapPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      // Undeclared exception!
      try { 
        MapPanel.drawFeature((Graphics2D) null, 131072, 131072, 131072, systemColor0, 0.0F, false, 1032.4309F, 131072);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.MapPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      MapPanel.drawFeature(sVGGraphics2D0, (short)2, (-1618), (short)1, systemColor0, (short)2, false, 75, 0);
      assertEquals(128, systemColor0.getRed());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, genericDOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      // Undeclared exception!
      try { 
        MapPanel.drawFeature(sVGGraphics2D0, (short)16, (-2935), 15, (Color) null, (Color) null, (-1.0F), true, (-2935), 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative width
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MapPanel mapPanel0 = new MapPanel();
      int int0 = mapPanel0.getViewerBorder();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("table-row", "table-row", "uk.ac.sanger.artemis.components.genebuilder.MapPanel");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      Color color0 = Color.orange;
      // Undeclared exception!
      try { 
        MapPanel.drawFeature(sVGGraphics2D0, (-1731), (-2832), (short)2, color0, (short)8, true, (-1.0F), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative width
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MapPanel mapPanel0 = new MapPanel();
      int int0 = mapPanel0.getTranscriptSize();
      assertEquals(75, int0);
  }
}
