/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 12:28:00 GMT 2018
 */

package uk.ac.sanger.artemis.components.genebuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import javax.swing.JPasswordField;
import javax.swing.text.DefaultStyledDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.GeneEdit;
import uk.ac.sanger.artemis.io.DatabaseDocumentEntry;
import uk.ac.sanger.artemis.j2ssh.SshLogin;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.InputStreamProgressListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneEdit_ESTest extends GeneEdit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeneEdit.showGeneEditor("oj8jJUfI10ZlL$:<o{5", "FB/f1f-B*)!1[;z", (DatabaseDocumentEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.GeneEdit", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("MF&MfqY^CKHB", jPasswordField0, "i&qR)XIC>4", ".oK:vP*O#BN11^Xkv4`");
      // Undeclared exception!
      GeneEdit.makeGeneEntry("MF&MfqY^CKHB", "MF&MfqY^CKHB", databaseDocument0, (InputStreamProgressListener) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, "L6mk9uqlC^g(y%ev", 0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("/etc/key_mapping", jPasswordField0, "/4N2j?,uD8]7", "/4N2j?,uD8]7");
      GeneEdit geneEdit0 = null;
      try {
        geneEdit0 = new GeneEdit("`>131 8oR@|sh&s/~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseLocationParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GeneEdit geneEdit0 = null;
      try {
        geneEdit0 = new GeneEdit("`>131 8oR@|sh&s/~");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeneEdit.makeGeneEntry("|S98m)IlLRbKf", (String) null, (DatabaseDocument) null, (InputStreamProgressListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GeneEdit geneEdit0 = null;
      try {
        geneEdit0 = new GeneEdit();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
