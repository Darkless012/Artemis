/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 12:15:11 GMT 2018
 */

package uk.ac.sanger.artemis.components.genebuilder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Checkbox;
import java.awt.TextArea;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleContext;
import org.emboss.jemboss.JembossParams;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument;
import uk.ac.sanger.artemis.components.genebuilder.JExtendedComboBox;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AutoCompleteComboDocument_ESTest extends AutoCompleteComboDocument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultComboBoxModel<TextArea> defaultComboBoxModel0 = new DefaultComboBoxModel<TextArea>();
      JComboBox<TextArea> jComboBox0 = new JComboBox<TextArea>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.hitBackspace = true;
      // Undeclared exception!
      try { 
        autoCompleteComboDocument0.remove((-3743), 70);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad position: -3743
         //
         verifyException("javax.swing.text.JTextComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JComboBox<Checkbox> jComboBox0 = new JComboBox<Checkbox>();
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      try { 
        autoCompleteComboDocument0.insertString(491, ">", (AttributeSet) null);
        fail("Expecting exception: BadLocationException");
      
      } catch(BadLocationException e) {
         //
         // Invalid insert
         //
         verifyException("javax.swing.text.GapContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(stringArray0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jExtendedComboBox0);
      // Undeclared exception!
      try { 
        autoCompleteComboDocument0.insertString((-1146), "", (AttributeSet) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad position: -1146
         //
         verifyException("javax.swing.text.JTextComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AutoCompleteComboDocument autoCompleteComboDocument0 = null;
      try {
        autoCompleteComboDocument0 = new AutoCompleteComboDocument((JComboBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = null;
      try {
        autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.gmod.schema.cv.CvTerm
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<MockHijrahDate> vector0 = new Vector<MockHijrahDate>();
      JComboBox<MockHijrahDate> jComboBox0 = new JComboBox<MockHijrahDate>(vector0);
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      vector0.add(mockHijrahDate0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      MutableAttributeSet mutableAttributeSet0 = jTextPane0.getInputAttributes();
      AttributeSet attributeSet0 = styleContext0.removeAttribute(mutableAttributeSet0, vector0);
      // Undeclared exception!
      try { 
        autoCompleteComboDocument0.insertString(1, "", attributeSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate cannot be cast to org.gmod.schema.cv.CvTerm
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.modeVector();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, true);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jExtendedComboBox0);
      autoCompleteComboDocument0.insertString(2, "M+T8wK", (AttributeSet) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<JPasswordField> vector0 = new Vector<JPasswordField>();
      DefaultComboBoxModel<JPasswordField> defaultComboBoxModel0 = new DefaultComboBoxModel<JPasswordField>(vector0);
      JComboBox<JPasswordField> jComboBox0 = new JComboBox<JPasswordField>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.selecting = true;
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      autoCompleteComboDocument0.insertString(7501, "SQJAVA.LANG.STRING@0000000015", simpleAttributeSet0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultComboBoxModel<TextArea> defaultComboBoxModel0 = new DefaultComboBoxModel<TextArea>();
      JComboBox<TextArea> jComboBox0 = new JComboBox<TextArea>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.hitBackspace = true;
      // Undeclared exception!
      try { 
        autoCompleteComboDocument0.remove(1602, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad position: 1602
         //
         verifyException("javax.swing.text.JTextComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultComboBoxModel<TextArea> defaultComboBoxModel0 = new DefaultComboBoxModel<TextArea>();
      JComboBox<TextArea> jComboBox0 = new JComboBox<TextArea>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.hitBackspace = true;
      autoCompleteComboDocument0.remove(0, 0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<JPasswordField> vector0 = new Vector<JPasswordField>();
      DefaultComboBoxModel<JPasswordField> defaultComboBoxModel0 = new DefaultComboBoxModel<JPasswordField>(vector0);
      JComboBox<JPasswordField> jComboBox0 = new JComboBox<JPasswordField>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.selecting = true;
      autoCompleteComboDocument0.remove(7501, 6);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultComboBoxModel<TextArea> defaultComboBoxModel0 = new DefaultComboBoxModel<TextArea>();
      JComboBox<TextArea> jComboBox0 = new JComboBox<TextArea>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      autoCompleteComboDocument0.remove(70, 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultComboBoxModel<TextArea> defaultComboBoxModel0 = new DefaultComboBoxModel<TextArea>();
      JComboBox<TextArea> jComboBox0 = new JComboBox<TextArea>(defaultComboBoxModel0);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jComboBox0);
      StyleContext styleContext0 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      defaultComboBoxModel0.setSelectedItem(styleContext_NamedStyle0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(true);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jExtendedComboBox0);
      try { 
        autoCompleteComboDocument0.remove(1059, 1059);
        fail("Expecting exception: BadLocationException");
      
      } catch(BadLocationException e) {
         //
         // Invalid remove
         //
         verifyException("javax.swing.text.AbstractDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JembossParams jembossParams0 = new JembossParams();
      Vector vector0 = jembossParams0.modeVector();
      JExtendedComboBox jExtendedComboBox0 = new JExtendedComboBox(vector0, false);
      AutoCompleteComboDocument autoCompleteComboDocument0 = new AutoCompleteComboDocument(jExtendedComboBox0);
      StyleContext styleContext0 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      // Undeclared exception!
      try { 
        autoCompleteComboDocument0.insertString(1602, (String) null, styleContext_NamedStyle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.AutoCompleteComboDocument", e);
      }
  }
}
