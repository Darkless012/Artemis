/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 02:09:47 GMT 2017
 */

package uk.ac.sanger.artemis.components.genebuilder.cv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import javax.swing.Box;
import javax.swing.JCheckBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.cv.ProductBox;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.io.QualifierVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProductBox_ESTest extends ProductBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProductBox productBox0 = null;
      try {
        productBox0 = new ProductBox((Qualifier) null, (String) null, 200, (Dimension) null, (Dimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      qualifier0.addValue("~");
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      QualifierVector qualifierVector0 = new QualifierVector();
      qualifierVector0.add(qualifier0);
      productBox0.updateQualifier(qualifierVector0);
      assertFalse(qualifierVector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      boolean boolean0 = productBox0.isQualifierChanged();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("S81|37%5N<.Ox>%j", "S81|37%5N<.Ox>%j");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "WITH/FROM", 8, dimension0, dimension0);
      QualifierVector qualifierVector0 = new QualifierVector();
      qualifierVector0.add(qualifier0);
      // Undeclared exception!
      try { 
        productBox0.updateQualifier(qualifierVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 8
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      QualifierVector qualifierVector0 = new QualifierVector();
      // Undeclared exception!
      try { 
        productBox0.updateQualifier(qualifierVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.ProductBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      Box box0 = productBox0.getHeadingsBox();
      assertFalse(box0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      Box box0 = productBox0.getBox();
      assertFalse(box0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("~");
      Dimension dimension0 = new Dimension();
      ProductBox productBox0 = new ProductBox(qualifier0, "~", 0, dimension0, dimension0);
      JCheckBox jCheckBox0 = productBox0.getRecommended();
      assertFalse(jCheckBox0.isFocusTraversalPolicyProvider());
  }
}
