/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 13:11:12 GMT 2018
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.awt.datatransfer.Clipboard;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Selection;
import uk.ac.sanger.artemis.components.SelectionMenu;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SelectionMenu_ESTest extends SelectionMenu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(90);
      assertEquals("Z", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(57);
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      boolean boolean0 = selectionMenu0.isEditableShortCutMenu();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("Select a qualifer name");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "G", selection0);
      Selection selection1 = selectionMenu0.getSelection();
      assertSame(selection1, selection0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      // Undeclared exception!
      try { 
        selectionMenu0.getShortCuts((Vector<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.SelectionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionRange((JFrame) null, (Selection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.SelectionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", (Selection) null);
      // Undeclared exception!
      try { 
        selectionMenu0.checkForSelectionRange();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.SelectionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard((String) null);
      Selection selection0 = new Selection(clipboard0);
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionFeatures((JFrame) null, selection0, 1218, "No bases selected");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionFeatures((JFrame) null, (Selection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.SelectionMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionFeatures((JFrame) null, selection0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionRange((JFrame) null, selection0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(227);
      assertEquals("KP_RIGHT", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(225);
      assertEquals("KP_DOWN", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(127);
      assertEquals("DELETE", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(40);
      assertEquals("DOWN", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(39);
      assertEquals("RIGHT", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(38);
      assertEquals("UP", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(65);
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(224);
      assertEquals("KP_UP", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = SelectionMenu.getKeyText(0);
      assertEquals("unknown(0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("f");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "f", selection0);
      selectionMenu0.add((JMenuItem) selectionMenu0);
      StringVector stringVector0 = new StringVector("f");
      // Undeclared exception!
      try { 
        selectionMenu0.getShortCuts(stringVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      SelectionMenu selectionMenu1 = (SelectionMenu)selectionMenu0.add((JMenuItem) selectionMenu0);
      Vector<String> vector0 = selectionMenu1.getUsedShortCutKeys();
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      // Undeclared exception!
      try { 
        selectionMenu0.checkForSelectionFeatureSegments(0, "");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      // Undeclared exception!
      try { 
        SelectionMenu.checkForSelectionCDSFeatures((JFrame) null, selection0, 0, "KP_RIGHT");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("DELETE");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "DELETE", selection0);
      // Undeclared exception!
      try { 
        selectionMenu0.checkForSelectionFeatures();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      // Undeclared exception!
      try { 
        selectionMenu0.checkForSelectionRange();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      // Undeclared exception!
      try { 
        selectionMenu0.checkForSelectionFeatures(0, (String) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      JFrame jFrame0 = selectionMenu0.getParentFrame();
      assertNull(jFrame0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        SelectionMenu.makeMenuKeyStroke(224);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard("");
      Selection selection0 = new Selection(clipboard0);
      SelectionMenu selectionMenu0 = new SelectionMenu((JFrame) null, "", selection0);
      JMenuItem jMenuItem0 = new JMenuItem((Icon) null);
      selectionMenu0.add(jMenuItem0);
      StringVector stringVector0 = new StringVector("");
      // Undeclared exception!
      try { 
        selectionMenu0.getShortCuts(stringVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }
}
