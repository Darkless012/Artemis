/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 03:14:04 GMT 2017
 */

package uk.ac.sanger.artemis.components.variant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.variant.VCFRecord;
import uk.ac.sanger.artemis.components.variant.VariantBase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VariantBase_ESTest extends VariantBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "Ign#ring  D90rve tag m-ssing : ");
      int int0 = variantBase0.getNumberOfIndels(false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "aV");
      vCFRecord0.setRef("aV");
      boolean boolean0 = variantBase0.isInsertion(true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "aV");
      String string0 = variantBase0.toString();
      assertEquals("aV", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "");
      String string0 = variantBase0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "");
      int int0 = variantBase0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "aV");
      int int0 = variantBase0.length();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      vCFRecord0.setRef("(9Sk{");
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      int int0 = variantBase0.getNumberOfIndels(true);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "");
      int int0 = variantBase0.getNumAlleles();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VariantBase variantBase0 = new VariantBase((VCFRecord) null, "Plot Options:");
      // Undeclared exception!
      try { 
        variantBase0.isMultiAllele(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      boolean boolean0 = variantBase0.isNonVariant();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, ".");
      // Undeclared exception!
      try { 
        variantBase0.isNonVariant();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VariantBase variantBase0 = new VariantBase((VCFRecord) null, "Plot Options:");
      int int0 = variantBase0.getNumberOfIndels(false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      // Undeclared exception!
      try { 
        variantBase0.getNumberOfIndels(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "D");
      int int0 = variantBase0.getNumberOfIndels(false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      boolean boolean0 = variantBase0.isMultiAllele(44);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "aV");
      Pattern pattern0 = Pattern.compile("aV", (-5457));
      VCFRecord.MULTI_ALLELE_PATTERN = pattern0;
      boolean boolean0 = variantBase0.isMultiAllele((-5457));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, ".");
      boolean boolean0 = variantBase0.isMultiAllele((-815));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "Ign#ring  D90rve tag m-ssing : ");
      boolean boolean0 = variantBase0.isInsertion(false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      vCFRecord0.setRef("(9Sk{");
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      boolean boolean0 = variantBase0.isInsertion(true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      // Undeclared exception!
      try { 
        variantBase0.isInsertion(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, ".");
      boolean boolean0 = variantBase0.isInsertion(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "D");
      boolean boolean0 = variantBase0.isDeletion(false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      vCFRecord0.setRef("(9Sk{");
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      boolean boolean0 = variantBase0.isDeletion(true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "aV");
      vCFRecord0.setRef("aV");
      boolean boolean0 = variantBase0.isDeletion(true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      // Undeclared exception!
      try { 
        variantBase0.isDeletion(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, "[K");
      boolean boolean0 = variantBase0.isDeletion(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, (String) null);
      // Undeclared exception!
      try { 
        variantBase0.getNumAlleles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VCFRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, (String) null);
      String string0 = variantBase0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VCFRecord vCFRecord0 = new VCFRecord();
      VariantBase variantBase0 = new VariantBase(vCFRecord0, (String) null);
      // Undeclared exception!
      try { 
        variantBase0.length();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.VariantBase", e);
      }
  }
}
