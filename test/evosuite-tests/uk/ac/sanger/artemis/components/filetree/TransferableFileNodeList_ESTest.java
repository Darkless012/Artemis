/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 12:12:10 GMT 2018
 */

package uk.ac.sanger.artemis.components.filetree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.filetree.TransferableFileNodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransferableFileNodeList_ESTest extends TransferableFileNodeList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(7);
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      try { 
        transferableFileNodeList0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      
      } catch(UnsupportedFlavorException e) {
         //
         // 
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.TransferableFileNodeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(2621);
      TransferableFileNodeList.remoteFlavors = null;
      DataFlavor[] dataFlavorArray0 = transferableFileNodeList0.getTransferDataFlavors();
      assertNull(dataFlavorArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(0);
      // Undeclared exception!
      try { 
        transferableFileNodeList0.isDataFlavorSupported((DataFlavor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.TransferableFileNodeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(1305);
      // Undeclared exception!
      try { 
        transferableFileNodeList0.getTransferData((DataFlavor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.TransferableFileNodeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = null;
      try {
        transferableFileNodeList0 = new TransferableFileNodeList((-347));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -347
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(2621);
      TransferableFileNodeList transferableFileNodeList1 = (TransferableFileNodeList)transferableFileNodeList0.getTransferData(transferableFileNodeList0.TRANSFERABLEFILENODELIST);
      assertEquals(0, transferableFileNodeList1.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(2621);
      DataFlavor[] dataFlavorArray0 = transferableFileNodeList0.getTransferDataFlavors();
      assertNotNull(dataFlavorArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TransferableFileNodeList transferableFileNodeList0 = new TransferableFileNodeList(2621);
      boolean boolean0 = transferableFileNodeList0.isDataFlavorSupported(transferableFileNodeList0.TRANSFERABLEFILENODELIST);
      assertTrue(boolean0);
  }
}
