/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 29 02:51:35 GMT 2017
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics;
import javax.swing.DebugGraphics;
import org.apache.batik.dom.GenericDOMImplementation;
import org.apache.batik.dom.GenericDocument;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.DocumentType;
import uk.ac.sanger.artemis.components.SegmentBorder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SegmentBorder_ESTest extends SegmentBorder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(true, false, true, (-3193), (-3193), (-215), (-215));
      GenericDocumentType genericDocumentType0 = new GenericDocumentType((String) null, (String) null, "uk.ac.sanger.artemis.components.SegmentBorder");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      genericDocumentType0.initializeEventSupport();
      // Undeclared exception!
      try { 
        segmentBorder0.drawSegmentBorder(sVGGraphics2D0, (-1493), (short)16);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Bad event type: MutationEvents
         //
         verifyException("org.apache.batik.dom.events.DocumentEventSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(false, true, false, 2, 2, 2, 2);
      // Undeclared exception!
      try { 
        segmentBorder0.drawSegmentBorder((Graphics) null, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.SegmentBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(false, false, true, (-2606), (-370), 0, (-2606));
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        segmentBorder0.drawSegmentBorder(debugGraphics0, (-370), 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DebugGraphics cannot be cast to java.awt.Graphics2D
         //
         verifyException("uk.ac.sanger.artemis.components.SegmentBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(false, false, false, 848, 848, 848, 848);
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("n0dkXjSk+D\u0006]/a,e=p", "menutext", "menutext");
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, (DOMImplementation) null);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, false);
      segmentBorder0.drawSegmentBorder(sVGGraphics2D0, (short)16, (-2580));
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(true, false, true, (-3193), (-3193), (-215), (-215));
      GenericDocumentType genericDocumentType0 = new GenericDocumentType((String) null, (String) null, "uk.ac.sanger.artemis.components.SegmentBorder");
      GenericDOMImplementation genericDOMImplementation0 = new GenericDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, genericDOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      segmentBorder0.drawSegmentBorder(sVGGraphics2D0, (-1493), (short)16);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SegmentBorder segmentBorder0 = new SegmentBorder(true, true, true, 0, (-95), 3376, 1);
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument((DocumentType) null, dOMImplementation0);
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(genericDocument0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      segmentBorder0.drawSegmentBorder(sVGGraphics2D0, 3376, 0);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("4tU%uQ.'F5m8", "", "");
      DOMImplementation dOMImplementation0 = GenericDOMImplementation.getDOMImplementation();
      GenericDocument genericDocument0 = new GenericDocument(genericDocumentType0, dOMImplementation0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(genericDocument0);
      SegmentBorder segmentBorder0 = new SegmentBorder(false, false, true, (short)16, 2650, 127, (short)1);
      segmentBorder0.drawSegmentBorder(sVGGraphics2D0, 0, (short)4);
      assertEquals(3, SVGGraphics2D.DEFAULT_MAX_GC_OVERRIDES);
  }
}
