/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 10:19:38 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Action;
import uk.ac.sanger.artemis.ActionVector;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.EntryChangeEvent;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.io.FastaStreamSequence;
import uk.ac.sanger.artemis.sequence.Bases;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ActionVector_ESTest extends ActionVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      Action action0 = new Action();
      actionVector0.add(action0);
      actionVector0.add(action0);
      actionVector0.removeAndReturnLast();
      assertEquals(1, actionVector0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      Action action0 = new Action();
      actionVector0.add(action0);
      int int0 = actionVector0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      actionVector0.add((Action) null);
      Action action0 = actionVector0.removeAndReturnLast();
      assertNull(action0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      Action action0 = new Action();
      actionVector0.add(action0);
      EntryChangeEvent entryChangeEvent0 = new EntryChangeEvent(action0, (Entry) null, 0);
      action0.addEntryChangeEvent(entryChangeEvent0);
      Action action1 = actionVector0.removeAndReturnLast();
      assertSame(action1, action0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      actionVector0.add((Action) null);
      Action action0 = actionVector0.elementAt(0);
      assertNull(action0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      Action action0 = new Action();
      actionVector0.add(action0);
      Action action1 = actionVector0.elementAt(0);
      assertSame(action1, action0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      Action action0 = new Action();
      FastaStreamSequence fastaStreamSequence0 = new FastaStreamSequence(",Dj[g79", ",Dj[g79");
      Bases bases0 = new Bases(fastaStreamSequence0);
      Entry entry0 = Entry.newEntry(bases0);
      EntryChangeEvent entryChangeEvent0 = new EntryChangeEvent(entry0, (Feature) null, 1);
      action0.addEntryChangeEvent(entryChangeEvent0);
      actionVector0.add(action0);
      actionVector0.elementAt(0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      // Undeclared exception!
      try { 
        actionVector0.removeAndReturnLast();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      int int0 = actionVector0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ActionVector actionVector0 = new ActionVector();
      // Undeclared exception!
      try { 
        actionVector0.elementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
