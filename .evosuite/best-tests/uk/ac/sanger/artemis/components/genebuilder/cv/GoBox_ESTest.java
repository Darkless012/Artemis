/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 19 18:42:03 GMT 2018
 */

package uk.ac.sanger.artemis.components.genebuilder.cv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.genebuilder.cv.GoBox;
import uk.ac.sanger.artemis.io.Qualifier;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GoBox_ESTest extends GoBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dimension dimension0 = GoBox.getEvidenceListDimension();
      dimension0.setSize(0.0, 4750.52800930506);
      Dimension dimension1 = GoBox.getEvidenceListDimension();
      assertEquals(4751, dimension1.height);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Dimension dimension0 = GoBox.getEvidenceListDimension();
      dimension0.width = (-1);
      Dimension dimension1 = GoBox.getEvidenceListDimension();
      assertEquals(24, dimension1.height);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Dimension dimension0 = GoBox.getEvidenceListDimension();
      dimension0.height = 0;
      Dimension dimension1 = GoBox.getEvidenceListDimension();
      assertEquals(80, dimension1.width);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dimension dimension0 = GoBox.getEvidenceListDimension();
      assertNotNull(dimension0);
      
      dimension0.height = (-2438);
      Dimension dimension1 = GoBox.getEvidenceListDimension();
      assertEquals(80, dimension1.width);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = GoBox.getEvidenceIndex("exp");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = GoBox.getEvidenceCodeGoTextFromText("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        GoBox.getGOCvTerm("evidence=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        GoBox.getEvidenceCodeGoTextFromText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.cv.AbstractCvBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dimension dimension0 = GoBox.getEvidenceListDimension();
      Qualifier qualifier0 = new Qualifier();
      GoBox goBox0 = null;
      try {
        goBox0 = new GoBox(qualifier0, "", (-3525), dimension0, dimension0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = GoBox.getEvidenceCodeGoTextFromText("4+*28:-\"");
      assertEquals("4+*28:-\"", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = GoBox.getEvidenceIndex("iso");
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = GoBox.getEvidenceIndex("inferred from sequence alignment");
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = GoBox.getEvidenceIndex("`HPNS#yrVw*C5G>z");
      assertEquals((-1), int0);
  }
}
