/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 20 12:26:17 GMT 2018
 */

package uk.ac.sanger.artemis.j2ssh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.util.Properties;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.j2ssh.SshLogin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SshLogin_ESTest extends SshLogin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      sshLogin0.getLogin();
      String string0 = sshLogin0.getUser();
      assertEquals("kp11", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      Properties properties0 = SshLogin.getProperties();
      assertNotNull(properties0);
      assertEquals(24, properties0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      sshLogin0.getLogin();
      String string0 = SshLogin.getPort();
      assertEquals("2224", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      sshLogin0.getLogin();
      String string0 = SshLogin.getHostname();
      assertEquals("localhost", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      sshLogin0.getLogin();
      JPanel jPanel0 = sshLogin0.getLogin();
      assertFalse(jPanel0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      sshLogin0.getLogin();
      // Undeclared exception!
      try { 
        sshLogin0.getSshClient();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      SshLogin sshLogin1 = new SshLogin();
      // Undeclared exception!
      try { 
        sshLogin1.getSshClient(true);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      assertFalse(jPasswordField0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      String string0 = sshLogin0.getUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = SshLogin.getPort();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = SshLogin.getHostname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Properties properties0 = SshLogin.getProperties();
      assertNull(properties0);
  }
}
