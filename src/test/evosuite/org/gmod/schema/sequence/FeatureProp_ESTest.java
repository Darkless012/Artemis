/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 20 14:25:07 GMT 2018
 */

package org.gmod.schema.sequence;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.cv.CvTerm;
import org.gmod.schema.sequence.Feature;
import org.gmod.schema.sequence.FeatureProp;
import org.gmod.schema.sequence.FeaturePropPub;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class FeatureProp_ESTest extends FeatureProp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      featureProp0.setCvTerm(cvTerm0);
      assertEquals(0, featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp((Feature) null, (CvTerm) null, (String) null, (-588));
      featureProp0.getValue();
      assertEquals((-588), featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      featureProp0.setValue("");
      String string0 = featureProp0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      int int0 = featureProp0.getRank();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      featureProp0.setRank((-94));
      int int0 = featureProp0.getRank();
      assertEquals((-94), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      featureProp0.setFeaturePropId(177);
      int int0 = featureProp0.getFeaturePropId();
      assertEquals(177, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      featureProp0.setFeaturePropId((-94));
      int int0 = featureProp0.getFeaturePropId();
      assertEquals((-94), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp((Feature) null, (CvTerm) null, (String) null, (-588));
      featureProp0.getFeature();
      assertEquals((-588), featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      CvTerm cvTerm0 = featureProp0.getCvTerm();
      assertNull(cvTerm0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      featureProp0.setFeaturePropPubs((Set<FeaturePropPub>) null);
      assertEquals(0, featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureProp featureProp0 = new FeatureProp(feature0, cvTerm0, "org.gmod.schema.cv.CvTermSynonym", 45);
      featureProp0.getValue();
      assertEquals(45, featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureProp featureProp0 = new FeatureProp(feature0, cvTerm0, "org.gmod.schema.cv.CvTermSynonym", 45);
      Feature feature1 = mock(Feature.class, new ViolatedAssumptionAnswer());
      featureProp0.setFeature(feature1);
      assertEquals(45, featureProp0.getRank());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FeatureProp featureProp0 = new FeatureProp();
      int int0 = featureProp0.getFeaturePropId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureProp featureProp0 = new FeatureProp(feature0, cvTerm0, "org.gmod.schema.cv.CvTermSynonym", 45);
      int int0 = featureProp0.getRank();
      assertEquals(45, int0);
  }
}
