/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 20 14:19:38 GMT 2018
 */

package org.gmod.schema.sequence;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.cv.CvTerm;
import org.gmod.schema.sequence.Feature;
import org.gmod.schema.sequence.FeatureRelationship;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class FeatureRelationship_ESTest extends FeatureRelationship_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      featureRelationship0.setRank(255);
      int int0 = featureRelationship0.getRank();
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureRelationship featureRelationship0 = new FeatureRelationship((Feature) null, (Feature) null, cvTerm0, (-1));
      int int0 = featureRelationship0.getRank();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship((Feature) null, (Feature) null, (CvTerm) null, 3474);
      featureRelationship0.setFeatureRelationshipId(2369);
      int int0 = featureRelationship0.getFeatureRelationshipId();
      assertEquals(2369, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      featureRelationship0.setFeatureRelationshipId((-1164));
      int int0 = featureRelationship0.getFeatureRelationshipId();
      assertEquals((-1164), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      Feature feature0 = featureRelationship0.getFeatureBySubjectId();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureRelationship featureRelationship0 = new FeatureRelationship(feature0, feature0, cvTerm0, (-31));
      featureRelationship0.getValue();
      assertEquals((-31), featureRelationship0.getRank());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      featureRelationship0.setCvTerm((CvTerm) null);
      assertEquals(0, featureRelationship0.getFeatureRelationshipId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      FeatureRelationship featureRelationship0 = new FeatureRelationship(feature0, feature0, cvTerm0, (-31));
      featureRelationship0.setFeatureByObjectId(feature0);
      assertEquals((-31), featureRelationship0.getRank());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      int int0 = featureRelationship0.getRank();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      featureRelationship0.setFeatureBySubjectId((Feature) null);
      assertNull(featureRelationship0.getValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      Feature feature0 = featureRelationship0.getFeatureByObjectId();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      int int0 = featureRelationship0.getFeatureRelationshipId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      CvTerm cvTerm0 = featureRelationship0.getCvTerm();
      assertNull(cvTerm0);
  }
}
