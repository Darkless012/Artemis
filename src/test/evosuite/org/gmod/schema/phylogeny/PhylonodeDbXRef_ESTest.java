/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 20 14:15:10 GMT 2018
 */

package org.gmod.schema.phylogeny;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gmod.schema.general.DbXRef;
import org.gmod.schema.phylogeny.Phylonode;
import org.gmod.schema.phylogeny.PhylonodeDbXRef;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class PhylonodeDbXRef_ESTest extends PhylonodeDbXRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setPhylonodeDbXRefId(2911);
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals(2911, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      phylonodeDbXRef0.setPhylonodeDbXRefId((-1937));
      assertEquals((-1937), phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      phylonodeDbXRef0.getDbXRef();
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      phylonodeDbXRef0.setDbXRef((DbXRef) null);
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      phylonodeDbXRef0.setPhylonode((Phylonode) null);
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setPhylonodeDbXRefId((-2494));
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals((-2494), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(0, (DbXRef) null, (Phylonode) null);
      phylonodeDbXRef0.getPhylonode();
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }
}
