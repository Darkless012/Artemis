/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 20 14:36:12 GMT 2018
 */

package org.gmod.schema.phylogeny;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Collection;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.cv.CvTerm;
import org.gmod.schema.general.DbXRef;
import org.gmod.schema.phylogeny.Phylonode;
import org.gmod.schema.phylogeny.Phylotree;
import org.gmod.schema.phylogeny.PhylotreePub;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Phylotree_ESTest extends Phylotree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree((DbXRef) null);
      phylotree0.setName("e1q||..y8mPHx");
      String string0 = phylotree0.getName();
      assertEquals("e1q||..y8mPHx", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setName("");
      String string0 = phylotree0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setComment(";");
      String string0 = phylotree0.getComment();
      assertEquals(";", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setComment("");
      String string0 = phylotree0.getComment();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setCvTerm((CvTerm) null);
      assertNull(phylotree0.getComment());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      DbXRef dbXRef0 = phylotree0.getDbXRef();
      assertNull(dbXRef0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setDbXRef((DbXRef) null);
      assertNull(phylotree0.getComment());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      CvTerm cvTerm0 = phylotree0.getCvTerm();
      assertNull(cvTerm0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      Collection<Phylonode> collection0 = phylotree0.getPhylonodes();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      int int0 = phylotree0.getPhylotreeId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      String string0 = phylotree0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      Collection<PhylotreePub> collection0 = phylotree0.getPhylotreePubs();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      String string0 = phylotree0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setPhylonodes((Set<Phylonode>) null);
      Collection<Phylonode> collection0 = phylotree0.getPhylonodes();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Phylotree phylotree0 = new Phylotree();
      phylotree0.setPhylotreePubs((Set<PhylotreePub>) null);
      Collection<PhylotreePub> collection0 = phylotree0.getPhylotreePubs();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CvTerm cvTerm0 = mock(CvTerm.class, new ViolatedAssumptionAnswer());
      DbXRef dbXRef0 = mock(DbXRef.class, new ViolatedAssumptionAnswer());
      Phylotree phylotree0 = new Phylotree(cvTerm0, dbXRef0, "", "", (Set<Phylonode>) null, (Set<PhylotreePub>) null);
      assertEquals(0, phylotree0.getPhylotreeId());
  }
}
