/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 19 21:47:58 GMT 2018
 */

package uk.ac.sanger.artemis.components.genebuilder.ortholog;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.util.Stack;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Document;
import javax.swing.text.MaskFormatter;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.gmod.schema.sequence.FeatureLoc;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.FeatureSegment;
import uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable;
import uk.ac.sanger.artemis.components.genebuilder.ortholog.OrthoParalogTable;
import uk.ac.sanger.artemis.components.genebuilder.ortholog.SimilarityTable;
import uk.ac.sanger.artemis.io.EmblStreamFeature;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.j2ssh.SshLogin;
import uk.ac.sanger.artemis.sequence.Bases;
import uk.ac.sanger.artemis.util.ByteBuffer;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractMatchTable_ESTest extends AbstractMatchTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringVector stringVector0 = new StringVector("v");
      Qualifier qualifier0 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier0).getValues();
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, (DatabaseDocument) null);
      AbstractMatchTable.getField("AqH_ #8}S&HLTrIY9", "AqH_ #8}S&HLTrIY9");
      JCheckBox jCheckBox0 = mock(JCheckBox.class, new ViolatedAssumptionAnswer());
      DefaultTableModel defaultTableModel0 = mock(DefaultTableModel.class, new ViolatedAssumptionAnswer());
      AbstractMatchTable.ButtonEditor abstractMatchTable_ButtonEditor0 = similarityTable0.new ButtonEditor(jCheckBox0, defaultTableModel0, "", (DatabaseDocument) null);
      abstractMatchTable_ButtonEditor0.getCellEditorValue();
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      similarityTable0.getInfoLevelButton();
      JButton jButton0 = abstractMatchTable_ButtonEditor0.buttRemove;
      // Undeclared exception!
      try { 
        abstractMatchTable_TableTransferHandler0.createTransferable(jButton0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.JButton cannot be cast to javax.swing.JTable
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$TableTransferHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = OrthoParalogTable.GENE_COL;
      StringVector stringVector0 = StringVector.getStrings("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$ButtonEditor$1");
      Qualifier qualifier0 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier0).getValues();
      DatabaseDocument databaseDocument0 = mock(DatabaseDocument.class, new ViolatedAssumptionAnswer());
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      JTable jTable0 = new JTable();
      abstractMatchTable_TableTransferHandler0.importString(jTable0, "_}&fUD)]");
      Qualifier qualifier1 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier1).getValues();
      similarityTable0.getOtherValues(qualifier1);
      SimilarityTable similarityTable1 = null;
      try {
        similarityTable1 = new SimilarityTable((Qualifier) null, (DatabaseDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.SimilarityTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringVector stringVector0 = new StringVector("v");
      Qualifier qualifier0 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier0).getValues();
      DatabaseDocument databaseDocument0 = null;
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, (DatabaseDocument) null);
      similarityTable0.getColumnIndex("v");
      AbstractMatchTable.getField("AqH_ #8}S&HLTrIY9", "AqH_ #8}S&HLTrIY9");
      int int0 = 0;
      AbstractMatchTable.getField("bc$De4B9Q!h?Z[", "Set Working Directory");
      String string0 = SimilarityTable.HIT_COL;
      // Undeclared exception!
      try { 
        SimilarityTable.containsStringInStringVector("L", stringVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("\nORIGIN\n", "\nORIGIN\n");
      Qualifier qualifier0 = new Qualifier("\nORIGIN\n", stringVector0);
      JPasswordField jPasswordField0 = new JPasswordField("\nORIGIN\n", 4297);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("\nORIGIN\n", jPasswordField0, "\nORIGIN\n", "\nORIGIN\n", false);
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stringVector0, 4297);
      JTable jTable0 = new JTable();
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler1 = similarityTable0.new TableTransferHandler();
      // Undeclared exception!
      try { 
        abstractMatchTable_TableTransferHandler1.importData((JComponent) jPasswordField0, (Transferable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$StringTransferHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractMatchTable.getField("AqH_ #8}S&HLTrIY9", "AqH_ #8}S&HLTrIY9");
      JCheckBox jCheckBox0 = mock(JCheckBox.class, new ViolatedAssumptionAnswer());
      DefaultTableModel defaultTableModel0 = mock(DefaultTableModel.class, new ViolatedAssumptionAnswer());
      StringVector stringVector0 = new StringVector("Loading ...                         ");
      Qualifier qualifier0 = new Qualifier("AqH_ #8}S&HLTrIY9", stringVector0);
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, (DatabaseDocument) null);
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      DataFlavor[] dataFlavorArray0 = new DataFlavor[0];
      abstractMatchTable_TableTransferHandler0.canImport((JComponent) jCheckBox0, dataFlavorArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("=?'[My%79@fe<Ht", "=?'[My%79@fe<Ht");
      JPasswordField jPasswordField0 = new JPasswordField("=?'[My%79@fe<Ht", 116);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("=/wgetz?-e+[", jPasswordField0, "=/wgetz?-e+[", "=/wgetz?-e+[", byteBuffer0, "g!|t<G <?CV.si.Px:+");
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      MaskFormatter maskFormatter0 = new MaskFormatter();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(maskFormatter0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      jFormattedTextField0.getAction();
      JCheckBox jCheckBox0 = new JCheckBox((Action) null);
      AbstractMatchTable.ButtonEditor abstractMatchTable_ButtonEditor0 = similarityTable0.new ButtonEditor(jCheckBox0, (DefaultTableModel) null, "CC_", databaseDocument0);
      abstractMatchTable_ButtonEditor0.fireEditingStopped();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractMatchTable.getField("getDbId", "ys,OZUUsX");
      StringVector stringVector0 = StringVector.getStrings("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$ButtonEditor$1");
      Qualifier qualifier0 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier0).getValues();
      DatabaseDocument databaseDocument0 = mock(DatabaseDocument.class, new ViolatedAssumptionAnswer());
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      JTable jTable0 = similarityTable0.getTable();
      abstractMatchTable_TableTransferHandler0.importString(jTable0, "_}&fUD)]");
      String string0 = "";
      Qualifier qualifier1 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn((StringVector) null).when(qualifier1).getValues();
      // Undeclared exception!
      try { 
        similarityTable0.getOtherValues(qualifier1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("\nORIGIN\n", "\nORIGIN\n");
      Qualifier qualifier0 = new Qualifier("\nORIGIN\n", stringVector0);
      JPasswordField jPasswordField0 = new JPasswordField("\nORIGIN\n", 4297);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("\nORIGIN\n", jPasswordField0, "\nORIGIN\n", "\nORIGIN\n", false);
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      ImageIcon imageIcon0 = new ImageIcon("CC_");
      MatteBorder matteBorder0 = new MatteBorder(imageIcon0);
      Icon icon0 = matteBorder0.getTileIcon();
      JCheckBox jCheckBox0 = new JCheckBox("genedb_products", icon0, false);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stringVector0, 4297);
      AbstractMatchTable.ButtonEditor abstractMatchTable_ButtonEditor0 = similarityTable0.new ButtonEditor(jCheckBox0, defaultTableModel0, "{]]cV4", databaseDocument0);
      JTable jTable0 = new JTable();
      AbstractMatchTable.LinkEditor abstractMatchTable_LinkEditor0 = similarityTable0.new LinkEditor(jCheckBox0, defaultTableModel0, databaseDocument0);
      abstractMatchTable_LinkEditor0.getCellEditorValue();
      abstractMatchTable_ButtonEditor0.getTableCellEditorComponent(jTable0, "", false, 4297, 1609);
      // Undeclared exception!
      try { 
        similarityTable0.updateQualifierString(4297);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4297 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      boolean boolean0 = true;
      DatabaseDocument databaseDocument0 = new DatabaseDocument("1tqafaC]uq8s!K.7", jPasswordField0, "1tqafaC]uq8s!K.7", "", true);
      Qualifier qualifier0 = new Qualifier("@?WBZ3E_::M8I'oV5~-", "mRNA");
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      StringVector stringVector0 = similarityTable0.getOtherValues(qualifier0);
      StringVector stringVector1 = new StringVector(stringVector0);
      Qualifier qualifier1 = null;
      try {
        qualifier1 = new Qualifier("org.biojava.bio.seq.io.GAMEFormat", stringVector1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - zero length values vector
         //
         verifyException("uk.ac.sanger.artemis.io.Qualifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractMatchTable.getField("oC-O'#ME}Ba{hfN/", "oC-O'#ME}Ba{hfN/");
      Qualifier qualifier0 = new Qualifier("oC-O'#ME}Ba{hfN/", "oC-O'#ME}Ba{hfN/");
      JPasswordField jPasswordField0 = null;
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("oC-O'#ME}Ba{hfN/", (JPasswordField) null, "", "oC-O'#ME}Ba{hfN/", byteBuffer0, "");
      DatabaseDocument databaseDocument1 = databaseDocument0.createDatabaseDocument();
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument1);
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      int int0 = 0;
      // Undeclared exception!
      try { 
        similarityTable0.openArtemis(databaseDocument0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractMatchTable.getField("", "vl4nR\"-hg5d%z");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractMatchTable.getField("SV>n", "label");
      int int0 = 2;
      JPasswordField jPasswordField0 = new JPasswordField((Document) null, ";JUp", 2);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("SV>n", jPasswordField0, "Couldn't create feature", "", true);
      Feature feature0 = null;
      try {
        feature0 = new Feature((uk.ac.sanger.artemis.io.Feature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.Feature", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractMatchTable.getField((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier("u&'m>!c", "6Z+{PW QAF");
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, (DatabaseDocument) null);
      JTextField jTextField0 = new JTextField("u&'m>!c");
      AbstractMatchTable.CellEditing abstractMatchTable_CellEditing0 = similarityTable0.new CellEditing(jTextField0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range range0 = new Range(2301);
      Location location0 = new Location(range0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractMatchTable.getField("getDbId", "ys,OZUUsX");
      StringVector stringVector0 = StringVector.getStrings("uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$ButtonEditor$1");
      Qualifier qualifier0 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier0).getValues();
      DatabaseDocument databaseDocument0 = mock(DatabaseDocument.class, new ViolatedAssumptionAnswer());
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      JTable jTable0 = similarityTable0.getTable();
      abstractMatchTable_TableTransferHandler0.importString(jTable0, "_}&fUD)]");
      Qualifier qualifier1 = mock(Qualifier.class, new ViolatedAssumptionAnswer());
      doReturn(stringVector0).when(qualifier1).getValues();
      StringVector stringVector1 = similarityTable0.getOtherValues(qualifier1);
      // Undeclared exception!
      try { 
        OrthoParalogTable.containsStringInStringVector("", stringVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringVector stringVector0 = StringVector.getStrings("\nORIGIN\n", "\nORIGIN\n");
      Qualifier qualifier0 = new Qualifier("\nORIGIN\n", stringVector0);
      JPasswordField jPasswordField0 = new JPasswordField("\nORIGIN\n", 4297);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("\nORIGIN\n", jPasswordField0, "\nORIGIN\n", "\nORIGIN\n", false);
      SimilarityTable similarityTable0 = new SimilarityTable(qualifier0, databaseDocument0);
      ImageIcon imageIcon0 = new ImageIcon("CC_");
      MatteBorder matteBorder0 = new MatteBorder(imageIcon0);
      Icon icon0 = matteBorder0.getTileIcon();
      JCheckBox jCheckBox0 = new JCheckBox("genedb_products", icon0, false);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stringVector0, 4297);
      AbstractMatchTable.ButtonEditor abstractMatchTable_ButtonEditor0 = similarityTable0.new ButtonEditor(jCheckBox0, defaultTableModel0, "{]]cV4", databaseDocument0);
      JTable jTable0 = new JTable();
      AbstractMatchTable.LinkEditor abstractMatchTable_LinkEditor0 = similarityTable0.new LinkEditor(jCheckBox0, defaultTableModel0, databaseDocument0);
      abstractMatchTable_LinkEditor0.getCellEditorValue();
      AbstractMatchTable.TableTransferHandler abstractMatchTable_TableTransferHandler0 = similarityTable0.new TableTransferHandler();
      abstractMatchTable_TableTransferHandler0.getSourceActions(jCheckBox0);
      abstractMatchTable_ButtonEditor0.getTableCellEditorComponent(jTable0, "", false, 4297, 1609);
      // Undeclared exception!
      try { 
        similarityTable0.updateQualifierString(4297);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4297 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Qualifier qualifier0 = new Qualifier();
      Qualifier qualifier1 = qualifier0.copy();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      int int0 = 8924;
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, "vc~Q7-J\">Q", 8924);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, (String) null, "uk.ac.sanger.artemis.components.genebuilder.ortholog.AbstractMatchTable$2", byteBuffer0, (String) null);
      DatabaseDocument databaseDocument1 = databaseDocument0.createDatabaseDocument();
      SimilarityTable similarityTable0 = null;
      try {
        similarityTable0 = new SimilarityTable(qualifier1, databaseDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.genebuilder.ortholog.SimilarityTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbstractMatchTable abstractMatchTable0 = null;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte) (-66);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      JCheckBox jCheckBox0 = new JCheckBox(";](!3{iV]QN?ja", imageIcon0);
      DefaultTableModel defaultTableModel0 = null;
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, "8cb;J3");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }
}
