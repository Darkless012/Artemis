/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 11:42:35 GMT 2018
 */

package uk.ac.sanger.artemis.components.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Component;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.Splash;
import uk.ac.sanger.artemis.components.database.DatabaseEntrySource;
import uk.ac.sanger.artemis.components.database.DatabaseJPanel;
import uk.ac.sanger.artemis.util.InputStreamProgressListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatabaseJPanel_ESTest extends DatabaseJPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatabaseEntrySource databaseEntrySource0 = new DatabaseEntrySource();
      DatabaseJPanel databaseJPanel0 = null;
      try {
        databaseJPanel0 = new DatabaseJPanel(databaseEntrySource0, (Splash) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatabaseEntrySource databaseEntrySource0 = new DatabaseEntrySource();
      try { 
        DatabaseJPanel.show(databaseEntrySource0, (Splash) null, (InputStreamProgressListener) null, "B^{:$j+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.database.DatabaseJPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DatabaseJPanel databaseJPanel0 = null;
      try {
        databaseJPanel0 = new DatabaseJPanel((DatabaseEntrySource) null, (Splash) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.database.DatabaseJPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DatabaseEntrySource databaseEntrySource0 = new DatabaseEntrySource();
      DatabaseJPanel.getEntryEditFromDatabase(databaseEntrySource0, (Splash) null, (Component) null, "");
      assertFalse(databaseEntrySource0.isReadOnly());
  }
}
