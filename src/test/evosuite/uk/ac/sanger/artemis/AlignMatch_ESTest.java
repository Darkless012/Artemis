/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 10:19:21 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.AlignMatch;
import uk.ac.sanger.artemis.io.Range;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlignMatch_ESTest extends AlignMatch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Range range0 = new Range(14);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 14, 14);
      alignMatch0.setRange((-1), 14, true, false);
      alignMatch0.setRange((-2614), (-1), false, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals((-1), alignMatch0.getSubjectSequenceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Range range0 = new Range(1667, 1667);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1667, 1667);
      alignMatch0.setRange(0, 92, false, true);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals(92, alignMatch0.getQuerySequenceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, 0);
      alignMatch0.setRange(0, 0, true, true);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Range range0 = new Range(856, 1355);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 1355, 1);
      boolean boolean0 = alignMatch0.isRevMatch();
      assertEquals(499, alignMatch0.getLength());
      assertTrue(boolean0);
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(1355, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Range range0 = new Range(138, 138);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-2964), (-1));
      alignMatch0.getSubjectSequenceStart();
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-2964), alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-1), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange((-1), 1151, true, true);
      int int0 = alignMatch0.getSubjectSequenceStart();
      assertTrue(alignMatch0.isRevMatch());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Range range0 = new Range(14);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 14, 14);
      alignMatch0.getSubjectSequenceRange();
      assertEquals(14, alignMatch0.getScore());
      assertEquals(14, alignMatch0.getPercentID());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Range range0 = new Range((-1999));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-1999), (-1999));
      alignMatch0.getSubjectSequenceRange();
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-1999), alignMatch0.getPercentID());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals((-1999), alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange(1076, 0, true, true);
      int int0 = alignMatch0.getSubjectSequenceEnd();
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(1076, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range range0 = new Range((-2492));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-2492), (-2492));
      alignMatch0.getSubjectSequenceEnd();
      assertEquals((-2492), alignMatch0.getScore());
      assertEquals((-2492), alignMatch0.getPercentID());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range range0 = new Range((-1102), (-1102));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 0, (-1102));
      int int0 = alignMatch0.getScore();
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-1102), alignMatch0.getPercentID());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Range range0 = new Range((-151));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-163), 0);
      int int0 = alignMatch0.getScore();
      assertEquals((-163), int0);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Range range0 = new Range(1165, 1165);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-1), 2321);
      alignMatch0.getQuerySequenceStart();
      assertEquals(2321, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-1), alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Range range0 = new Range(14);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 14, 14);
      alignMatch0.getQuerySequenceRange();
      assertEquals(14, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(14, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Range range0 = new Range((-649), (-649));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-649), (-649));
      alignMatch0.getQuerySequenceRange();
      assertEquals((-649), alignMatch0.getScore());
      assertEquals((-649), alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.getQuerySequenceRange();
      assertEquals(1076, alignMatch0.getScore());
      assertEquals(1076, alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Range range0 = new Range((-1));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-1), (-211));
      alignMatch0.getQuerySequenceEnd();
      assertEquals((-1), alignMatch0.getScore());
      assertEquals((-211), alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getLength());
      assertTrue(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Range range0 = new Range((-151));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-163), 0);
      int int0 = alignMatch0.getPercentID();
      assertEquals((-163), alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertEquals(0, int0);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Range range0 = new Range(1284, 1284);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-2064), (-1));
      int int0 = alignMatch0.getPercentID();
      assertEquals((-2064), alignMatch0.getScore());
      assertEquals(0, alignMatch0.getLength());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Range range0 = new Range(0, 1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      int int0 = alignMatch0.getLength();
      assertEquals(1, int0);
      assertEquals(0, alignMatch0.getScore());
      assertEquals(0, alignMatch0.getPercentID());
      assertTrue(alignMatch0.isSelfMatch());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Range range0 = new Range(856, 1355);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 1355, 1);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(1355, alignMatch1.getScore());
      assertEquals(1355, alignMatch0.getScore());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(1, alignMatch1.getPercentID());
      assertEquals(1, alignMatch0.getPercentID());
      assertEquals(499, alignMatch1.getLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 1, (-1262));
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(0, alignMatch1.getLength());
      assertEquals(1, alignMatch1.getScore());
      assertEquals(1, alignMatch0.getScore());
      assertTrue(alignMatch0.isRevMatch());
      assertEquals((-1262), alignMatch1.getPercentID());
      assertEquals((-1262), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Range range0 = new Range((-151));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, (-163), 0);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch1.getPercentID());
      assertEquals((-163), alignMatch0.getScore());
      assertEquals(0, alignMatch1.getLength());
      assertEquals((-163), alignMatch1.getScore());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(1076, alignMatch1.getScore());
      assertEquals(1076, alignMatch0.getScore());
      assertEquals(1076, alignMatch0.getPercentID());
      assertEquals(1076, alignMatch1.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Range range0 = new Range(0, 1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      AlignMatch alignMatch1 = AlignMatch.copy(alignMatch0);
      assertEquals(0, alignMatch1.getScore());
      assertEquals(0, alignMatch1.getPercentID());
      assertEquals(0, alignMatch0.getQuerySequenceStart());
      assertEquals(1, alignMatch1.getLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Range range0 = new Range(0, 0);
      AlignMatch alignMatch0 = new AlignMatch(range0, (Range) null, false, 0, (-678));
      // Undeclared exception!
      try { 
        alignMatch0.isSelfMatch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Range range0 = new Range((-1311));
      AlignMatch alignMatch0 = new AlignMatch(range0, (Range) null, false, (-1311), (-1));
      // Undeclared exception!
      try { 
        alignMatch0.getQuerySequenceStart();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        AlignMatch.copy((AlignMatch) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AlignMatch alignMatch0 = null;
      try {
        alignMatch0 = new AlignMatch((Range) null, (Range) null, false, 765, (-919));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.AlignMatch", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 0, 0);
      alignMatch0.getQuerySequenceEnd();
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getPercentID());
      assertEquals(0, alignMatch0.getScore());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.getQuerySequenceStart();
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1076, alignMatch0.getScore());
      assertEquals(1076, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.getSubjectSequenceEnd();
      assertEquals(1076, alignMatch0.getPercentID());
      assertEquals(1076, alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.getSubjectSequenceStart();
      assertEquals(1076, alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1076, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange((-1), 0, true, false);
      alignMatch0.setRange(1076, (-1), false, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals(1076, alignMatch0.getQuerySequenceEnd());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Range range0 = new Range((-2492));
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, (-2492), (-2492));
      alignMatch0.setRange((-2492), (-2492), false, true);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange((-1), 0, true, false);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertEquals((-1), alignMatch0.getSubjectSequenceStart());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange(1076, (-1), false, false);
      int int0 = alignMatch0.getQuerySequenceStart();
      assertFalse(alignMatch0.isSelfMatch());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Range range0 = new Range(1);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, true, 1, (-1262));
      alignMatch0.getQuerySequenceEnd();
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-1262), alignMatch0.getPercentID());
      assertEquals(1, alignMatch0.getScore());
      assertTrue(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.setRange(1076, 0, true, true);
      int int0 = alignMatch0.getQuerySequenceStart();
      assertFalse(alignMatch0.isSelfMatch());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      boolean boolean0 = alignMatch0.isSelfMatch();
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1076, alignMatch0.getScore());
      assertTrue(boolean0);
      assertEquals(1076, alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Range range0 = new Range((-1311));
      AlignMatch alignMatch0 = new AlignMatch(range0, (Range) null, false, (-1311), (-1));
      boolean boolean0 = alignMatch0.isRevMatch();
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-1311), alignMatch0.getScore());
      assertFalse(boolean0);
      assertEquals((-1), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      int int0 = alignMatch0.getPercentID();
      assertEquals(1076, alignMatch0.getScore());
      assertEquals(1076, int0);
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Range range0 = new Range((-1311));
      AlignMatch alignMatch0 = new AlignMatch(range0, (Range) null, false, (-1311), (-1));
      int int0 = alignMatch0.getLength();
      assertEquals(0, int0);
      assertEquals((-1311), alignMatch0.getScore());
      assertEquals((-1), alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      alignMatch0.getSubjectSequenceRange();
      assertEquals(1076, alignMatch0.getPercentID());
      assertEquals(1076, alignMatch0.getScore());
      assertFalse(alignMatch0.isRevMatch());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Range range0 = new Range((-635), (-635));
      AlignMatch alignMatch0 = new AlignMatch(range0, (Range) null, true, (-635), (-1));
      Range range1 = alignMatch0.getQuerySequenceRange();
      assertNull(range1);
      assertTrue(alignMatch0.isRevMatch());
      assertEquals(0, alignMatch0.getLength());
      assertEquals((-635), alignMatch0.getScore());
      assertEquals((-1), alignMatch0.getPercentID());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Range range0 = new Range(0);
      AlignMatch alignMatch0 = new AlignMatch(range0, range0, false, 1076, 1076);
      int int0 = alignMatch0.getScore();
      assertEquals(1076, alignMatch0.getPercentID());
      assertFalse(alignMatch0.isRevMatch());
      assertEquals(1076, int0);
  }
}
