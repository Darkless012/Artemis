/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 06 20:00:27 GMT 2018
 */

package uk.ac.sanger.artemis.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JPasswordField;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.gmod.schema.cv.CvTerm;
import org.gmod.schema.organism.Organism;
import org.gmod.schema.sequence.Feature;
import org.gmod.schema.sequence.FeatureLoc;
import org.gmod.schema.sequence.FeatureRelationship;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.ChadoTransaction;
import uk.ac.sanger.artemis.chado.GmodDAO;
import uk.ac.sanger.artemis.io.GFFStreamFeature;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.KeyVector;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.j2ssh.SshLogin;
import uk.ac.sanger.artemis.util.ByteBuffer;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.InputStreamProgressListener;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DatabaseDocument_ESTest extends DatabaseDocument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("660Il$-1z?Vj#Q", jPasswordField0, "", "", true);
      DatabaseDocument.LocationComarator databaseDocument_LocationComarator0 = databaseDocument0.new LocationComarator();
      FeatureLoc featureLoc0 = new FeatureLoc();
      // Undeclared exception!
      try { 
        databaseDocument_LocationComarator0.compare(featureLoc0, featureLoc0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument$LocationComarator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatabaseDocument.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((javax.swing.text.Document) null, "JVX$h7c(S=", 0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("JVX$h7c(S=", jPasswordField0, "JVX$h7c(S=", "", false);
      // Undeclared exception!
      try { 
        databaseDocument0.showCvTermLookUp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("VW^[", jPasswordField0, "VW^[", "C5gHo3WK.QXzzV\"#3");
      Feature feature0 = new Feature();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument1 = new DatabaseDocument(databaseDocument0, "genedb_products", feature0, (Range) null, inputStreamProgressListener0);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertEquals("VW^[", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument1.isLazyFeatureLoad());
      assertTrue(databaseDocument1.isSingleSchema());
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("-1", databaseDocument1.getSrcFeatureId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", (JPasswordField) null, "", "", false, inputStreamProgressListener0);
      InputStreamProgressListener inputStreamProgressListener1 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument1 = new DatabaseDocument(databaseDocument0, "-|hh", "-1", false, inputStreamProgressListener1);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertEquals("-|hh", databaseDocument1.getSrcFeatureId());
      assertEquals("", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      byte[] byteArray0 = new byte[3];
      byteBuffer0.append(byteArray0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      databaseDocument0.getInputStream();
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("", databaseDocument0.getName());
      assertEquals("", databaseDocument0.getSrcFeatureId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getUpdateResiduesColumnTransactions((ChadoTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("");
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", false, inputStreamProgressListener0);
      StringVector stringVector0 = StringVector.getStrings("");
      // Undeclared exception!
      try { 
        databaseDocument0.getSimilarityMatches(stringVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((String) null);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Q mJ9b", jPasswordField0, (String) null, "Q mJ9b", byteBuffer0, "MP#6C4(w,|=OK@JI'Po");
      // Undeclared exception!
      try { 
        databaseDocument0.getPolypeptideFeatures("Q mJ9b");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("Lq:mO Fak", 0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0);
      // Undeclared exception!
      try { 
        databaseDocument0.getPartOfFeatures("Lq:mO Fak");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("[%s %s%s%s%s%s%s%s]", jPasswordField0, "[%s %s%s%s%s%s%s%s]", "[%s %s%s%s%s%s%s%s]");
      // Undeclared exception!
      try { 
        databaseDocument0.getOutputStream();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StyledEditorKit styledEditorKit0 = new StyledEditorKit();
      javax.swing.text.Document document0 = styledEditorKit0.createDefaultDocument();
      JPasswordField jPasswordField0 = new JPasswordField(document0, "[#}&cIY%7_Wdv#", 1018);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Tzu]=BLui6tI;O");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, ".\t", (String) null, byteBuffer0, "/Tzu]=BLui6tI;O");
      try { 
        databaseDocument0.getOutputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("zm-H^:gs~nOz", jPasswordField0);
      // Undeclared exception!
      try { 
        databaseDocument0.getGraphs();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("tSIUQ'=");
      DatabaseDocument databaseDocument0 = new DatabaseDocument(";~%", jPasswordField0, "aYs@q_0^6(o+O(PHI3", "", (ByteBuffer) null, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getGraphData(5, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("t_VuF$.P`_r7_DwmWSv");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("t_VuF$.P`_r7_DwmWSv", jPasswordField0, "t_VuF$.P`_r7_DwmWSv", "", false, (InputStreamProgressListener) null);
      // Undeclared exception!
      try { 
        databaseDocument0.getGffDocuments("", "t_VuF$.P`_r7_DwmWSv", "t_VuF$.P`_r7_DwmWSv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<FeatureLoc> arrayList0 = new ArrayList<FeatureLoc>();
      FeatureLoc featureLoc0 = new FeatureLoc();
      arrayList0.add(featureLoc0);
      // Undeclared exception!
      try { 
        DatabaseDocument.getFeatureLoc(arrayList0, (-1200378260));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getDatabaseNames();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvterms("0", "0", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvtermID("[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvtermFromGoId("_g`u^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvTermName("partof");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvPartAndCvTerm("]z6]2r", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvAndCvTerm("|HQ>kBmj", "+fx]c[a");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("[", (JPasswordField) null, "[", "WRONG_OBJECT_TYPE", byteBuffer0, (String) null);
      // Undeclared exception!
      try { 
        databaseDocument0.getChadoGeneByAnyCurrentName("[");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultEditorKit defaultEditorKit0 = new DefaultEditorKit();
      javax.swing.text.Document document0 = defaultEditorKit0.createDefaultDocument();
      JPasswordField jPasswordField0 = new JPasswordField(document0, "YT\"d !7", 8908);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("YT\"d !7", jPasswordField0);
      // Undeclared exception!
      try { 
        databaseDocument0.getCdsFeatureLocsByTranscriptName("zQ");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Feature feature0 = new Feature();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((DatabaseDocument) null, "", feature0, (Range) null, inputStreamProgressListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((DatabaseDocument) null, "isObsolete=", "isObsolete=", true, inputStreamProgressListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("Problems Writing...\n", jPasswordField0, "Problems Writing...\n", "C=t;@YS_Y@", true, inputStreamProgressListener0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, "2UF)Xy", false, (InputStreamProgressListener) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((javax.swing.text.Document) null, "nocommit", 10);
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("nocommit", jPasswordField0, "'), ", "nocommit", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, "No parser for ", "BAeO-P4@ aY#Tc<%N4", false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("CI+Lkra)=.B-(aZI");
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("pseudogenic_exon", jPasswordField0, "+", "+", byteBuffer0, "+");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0, (String) null, (String) null, (ByteBuffer) null, "P}=U");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(439);
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("+(j", jPasswordField0, "+(j", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, (JPasswordField) null, "SM+#|'^bA!", (String) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument("=", jPasswordField0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = null;
      try {
        databaseDocument0 = new DatabaseDocument((String) null, jPasswordField0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - created a null Document
         //
         verifyException("uk.ac.sanger.artemis.util.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("<ke#yh;)yy7\",}QQY,");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("<ke#yh;)yy7\",}QQY,", jPasswordField0, "UO>?]F>m\"", "");
      // Undeclared exception!
      try { 
        databaseDocument0.getName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultEditorKit defaultEditorKit0 = new DefaultEditorKit();
      javax.swing.text.Document document0 = defaultEditorKit0.createDefaultDocument();
      JPasswordField jPasswordField0 = new JPasswordField(document0, "YT\"d !7", 8908);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("YT\"d !7", jPasswordField0);
      databaseDocument0.getUserName();
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StyledEditorKit styledEditorKit0 = new StyledEditorKit();
      javax.swing.text.Document document0 = styledEditorKit0.createDefaultDocument();
      JPasswordField jPasswordField0 = new JPasswordField(document0, "[#}&cIY%7_Wdv#", 1018);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, ".\t", (String) null, byteBuffer0, "/Tzu]=BLui6tI;O");
      // Undeclared exception!
      try { 
        databaseDocument0.getFeatureByUniquename("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("zm-H^:gs~nOz", jPasswordField0);
      DatabaseDocument.initMDC(databaseDocument0);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      KeyVector keyVector0 = new KeyVector();
      FeatureRelationship featureRelationship0 = new FeatureRelationship();
      keyVector0.add((Object) featureRelationship0);
      // Undeclared exception!
      try { 
        DatabaseDocument.getFeatureLoc(keyVector0, 4681);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.gmod.schema.sequence.FeatureRelationship cannot be cast to org.gmod.schema.sequence.FeatureLoc
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayList<FeatureLoc> arrayList0 = new ArrayList<FeatureLoc>();
      FeatureLoc featureLoc0 = DatabaseDocument.getFeatureLoc(arrayList0, (-1200378260));
      assertNull(featureLoc0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((String) null);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("8w&ghg ", jPasswordField0, "Veature_6d=", "8w&ghg ");
      Vector<ChadoTransaction> vector0 = new Vector<ChadoTransaction>();
      // Undeclared exception!
      try { 
        databaseDocument0.commit(vector0, true);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = DatabaseDocument.isCvThreadAlive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getSynonymTypeNames("", (GFFStreamFeature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvControledCurationNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Cannot write to: ", jPasswordField0, "Cannot write to: ", "Cannot write to: ", false);
      // Undeclared exception!
      try { 
        databaseDocument0.getOrganismNames();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("e|WV,tIIXpuc+[,T{$");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", true);
      // Undeclared exception!
      try { 
        databaseDocument0.getCvTermsByCvName("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseDocument.getCvTermByCvTermId((-1638813227), (uk.ac.sanger.artemis.io.Feature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.util.DatabaseDocument", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DatabaseDocument databaseDocument0 = new DatabaseDocument("%6vC~`ZS<}g", (JPasswordField) null);
      // Undeclared exception!
      try { 
        databaseDocument0.getInputStream();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("\nOvXrwitr?", jPasswordField0);
      databaseDocument0.getOutputStream();
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertEquals("\nOvXrwitr", databaseDocument0.getName());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      databaseDocument0.reset();
      assertEquals("", databaseDocument0.getSrcFeatureId());
      assertEquals("", databaseDocument0.getName());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("YA*FT6Iv_{k7T)cwAw=null", jPasswordField0, "]6FlKR", "YA*FT6Iv_{k7T)cwAw=null", true, inputStreamProgressListener0);
      // Undeclared exception!
      try { 
        databaseDocument0.getChadoSequence("MU|yHS+S");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(3787);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("IObL=/Z#vh", jPasswordField0);
      // Undeclared exception!
      try { 
        databaseDocument0.loadCvTerms();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: java.lang.NullPointerException
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("N\"0", jPasswordField0, "=5c", "SINGLE SCHEMA", true, inputStreamProgressListener0);
      Key key0 = new Key("Runtime Error");
      KeyVector keyVector0 = new KeyVector(key0);
      // Undeclared exception!
      try { 
        databaseDocument0.getClustersByFeatureIds(keyVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("P}Ff", 0);
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("[VC %s @ %s Q%s of type=%s alleles=%s attr=%s GT=%s filters=%s", jPasswordField0, "[VC %s @ %s Q%s of type=%s alleles=%s attr=%s GT=%s filters=%s", (String) null, byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getFeaturesByListOfIds((List) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("TRANSCRIPT :: ", jPasswordField0, "TRANSCRIPT :: ", "TRANSCRIPT :: ", false);
      databaseDocument0.getParent();
      assertEquals("TRANSCRIPT :: ", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Cannot write to: ", jPasswordField0, "Cannot write to: ", "Cannot write to: ", false);
      databaseDocument0.setName((String) null);
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("Cannot write to: ", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      DatabaseDocument databaseDocument1 = databaseDocument0.createDatabaseDocument();
      assertEquals("", databaseDocument0.getName());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument1.isSingleSchema());
      assertEquals("", databaseDocument1.getSrcFeatureId());
      assertTrue(databaseDocument1.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("e|WV,tIIXpuc+[,T{$");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "db_xref=", "W\"v/3MN0%4$XKl.1");
      boolean boolean0 = databaseDocument0.isLazyFeatureLoad();
      assertTrue(boolean0);
      assertEquals("db_xref=", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(35);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("5F](XV", jPasswordField0, "5F](XV", "", true);
      // Undeclared exception!
      try { 
        databaseDocument0.getOrganismByCommonName("##sequence-region ");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String[][][] stringArray0 = DatabaseDocument.getTYPES();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("sqT4{!@ RRHikR-h", jPasswordField0, "sqT4{!@ RRHikR-h", "sqT4{!@ RRHikR-h", true, inputStreamProgressListener0);
      Key key0 = new Key("RILEY");
      KeyVector keyVector0 = new KeyVector(key0);
      // Undeclared exception!
      try { 
        databaseDocument0.getFeatureLocsByListOfIds(keyVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      boolean boolean0 = databaseDocument0.readable();
      assertEquals("", databaseDocument0.getName());
      assertTrue(boolean0);
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("zm-H^:gs~nOz", jPasswordField0);
      databaseDocument0.setReadChildren(false);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DatabaseDocument databaseDocument0 = new DatabaseDocument("%6vC~`ZS<}g", (JPasswordField) null);
      databaseDocument0.getIdFeatureStore();
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
      assertEquals("1", databaseDocument0.getSrcFeatureId());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(" bytes");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("xSy`4C8", jPasswordField0);
      databaseDocument0.setRange((Range) null);
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("");
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.getFeaturePropByFeatureIds((List) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField((javax.swing.text.Document) null, "oH.TEB#Y*^t", 729);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("oH.TEB#Y*^t", jPasswordField0);
      KeyVector keyVector0 = new KeyVector();
      // Undeclared exception!
      try { 
        databaseDocument0.getParentFeaturesByChildFeatureIds(keyVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("\nOvXrwitr?", jPasswordField0);
      // Undeclared exception!
      try { 
        databaseDocument0.getOrganismsContainingSrcFeatures();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", (JPasswordField) null, "", "/C:/%ome+dir/some.jar/org/p%thon?core/PySyrtemState.class", false, inputStreamProgressListener0);
      boolean boolean0 = databaseDocument0.isSingleSchema();
      assertTrue(boolean0);
      assertEquals("", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("Changes found for the feature\n");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("Changes found for the feature\n", jPasswordField0, "", "0", false);
      Vector<Organism> vector0 = new Vector<Organism>();
      // Undeclared exception!
      try { 
        databaseDocument0.getFeatureDbXRefsByFeatureId(vector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("8w&ghg ");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("8w&ghg ", jPasswordField0, "8w&ghg ", "8w&ghg ");
      // Undeclared exception!
      try { 
        databaseDocument0.ping();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error initializing DbSqlConfig class.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error occurred.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Error parsing XML.  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("uk.ac.sanger.artemis.chado.DbSqlConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("YA*FT6Iv_{k7T)cwAw=null", jPasswordField0, "]6FlKR", "YA*FT6Iv_{k7T)cwAw=null", true, inputStreamProgressListener0);
      String string0 = databaseDocument0.getSrcFeatureId();
      assertEquals("]6FlKR", string0);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField("");
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      boolean boolean0 = databaseDocument0.writable();
      assertEquals("", databaseDocument0.getSrcFeatureId());
      assertEquals("", databaseDocument0.getName());
      assertTrue(boolean0);
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument0.isSingleSchema());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "4e :$kt)", true, inputStreamProgressListener0);
      // Undeclared exception!
      try { 
        databaseDocument0.getCdsFeatureLocsByPeptideName("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      InputStreamProgressListener inputStreamProgressListener0 = mock(InputStreamProgressListener.class, new ViolatedAssumptionAnswer());
      DatabaseDocument databaseDocument0 = new DatabaseDocument("N\"0", jPasswordField0, "=5c", "SINGLE SCHEMA", true, inputStreamProgressListener0);
      DatabaseDocument databaseDocument1 = (DatabaseDocument)databaseDocument0.append("SINGLE SCHEMA");
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      assertTrue(databaseDocument1.isSingleSchema());
      assertEquals("=5c", databaseDocument0.getSrcFeatureId());
      assertEquals("1", databaseDocument1.getSrcFeatureId());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SshLogin sshLogin0 = new SshLogin();
      JPasswordField jPasswordField0 = sshLogin0.getJPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "nocommit", "", byteBuffer0, "");
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_MEDIAL;
      // Undeclared exception!
      try { 
        databaseDocument0.getResidueFeatures(integer0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String[][][] stringArray0 = new String[1][6][9];
      DatabaseDocument.setTYPES(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(72);
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "");
      assertTrue(databaseDocument0.isLazyFeatureLoad());
      
      databaseDocument0.setLazyFeatureLoad(false);
      boolean boolean0 = databaseDocument0.isLazyFeatureLoad();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ByteBuffer byteBuffer0 = new ByteBuffer();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0, "", "", byteBuffer0, "");
      // Undeclared exception!
      try { 
        databaseDocument0.insertCvTerm((CvTerm) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument("2=4e :$kt)", jPasswordField0);
      DatabaseDocument.CvTermThread databaseDocument_CvTermThread0 = databaseDocument0.new CvTermThread((GmodDAO) null);
      databaseDocument_CvTermThread0.run();
      assertEquals("1", databaseDocument0.getSrcFeatureId());
      assertTrue(databaseDocument0.isSingleSchema());
      assertTrue(databaseDocument0.isLazyFeatureLoad());
  }
}
