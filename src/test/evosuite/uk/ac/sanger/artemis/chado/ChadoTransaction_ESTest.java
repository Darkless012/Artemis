/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 19 21:56:09 GMT 2018
 */

package uk.ac.sanger.artemis.chado;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.MultipleGradientPaint;
import java.sql.Timestamp;
import java.time.Clock;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.chrono.MinguoDate;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.ChadoTransaction;
import uk.ac.sanger.artemis.io.GFFStreamFeature;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ChadoTransaction_ESTest extends ChadoTransaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.LINEAR_RGB;
      ChadoTransaction chadoTransaction0 = new ChadoTransaction((-1967), multipleGradientPaint_ColorSpaceType0, (Timestamp) null, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getLogComment();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.SRGB;
      Instant instant0 = MockInstant.ofEpochSecond((long) 4093, (long) 4093);
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(4093, multipleGradientPaint_ColorSpaceType0, timestamp0, (GFFStreamFeature) null, "org.biojava.bio.seq.io.GenpeptFileFormer", "org.biojava.bio.seq.io.GenpeptFileFormer");
      chadoTransaction0.setUniquename("");
      chadoTransaction0.getUniquename();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.LINEAR_RGB;
      ChadoTransaction chadoTransaction0 = new ChadoTransaction((-1967), multipleGradientPaint_ColorSpaceType0, (Timestamp) null, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getType();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "(", "UPDATE");
      chadoTransaction0.setOldUniquename("(");
      chadoTransaction0.getOldUniquename();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.SRGB;
      Instant instant0 = MockInstant.ofEpochSecond((long) 4093, (long) 4093);
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(4093, multipleGradientPaint_ColorSpaceType0, timestamp0, (GFFStreamFeature) null, "org.biojava.bio.seq.io.GenpeptFileFormer", "org.biojava.bio.seq.io.GenpeptFileFormer");
      chadoTransaction0.setOldUniquename("");
      chadoTransaction0.getOldUniquename();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(121, "5P\"Jf`G", (Timestamp) null, (GFFStreamFeature) null, "5P\"Jf`G", "s)w_:f");
      chadoTransaction0.getLastModified();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      Timestamp timestamp0 = new Timestamp(0L);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction((-2025), object0, timestamp0, (GFFStreamFeature) null, "/", "LE:P");
      chadoTransaction0.getLastModified();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(8920, 8920);
      Location location0 = new Location(range0);
      QualifierVector qualifierVector0 = new QualifierVector();
      GFFStreamFeature gFFStreamFeature0 = new GFFStreamFeature(key0, location0, qualifierVector0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8920, (Object) null, (Timestamp) null, gFFStreamFeature0, "#Ga0RM", "SP~LfPse-P,v");
      chadoTransaction0.getGff_feature();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Instant instant0 = MockInstant.ofEpochSecond(618L);
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(458, integer0, timestamp0, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getFeatureObject();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2434, 2434);
      Timestamp timestamp0 = new Timestamp(2434);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8970, defaultTableModel0, timestamp0, (GFFStreamFeature) null, (String) null, (String) null);
      chadoTransaction0.getFeatureKey();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      MinguoDate minguoDate0 = MockMinguoDate.from(offsetDateTime0);
      Instant instant0 = MockInstant.now();
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(3, minguoDate0, timestamp0, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getFeatureKey();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(0, (Object) null, (Timestamp) null, (GFFStreamFeature) null, "", "\"E`eC}H9>\"(Q");
      chadoTransaction0.copy();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Timestamp timestamp0 = new Timestamp(0L);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction((-2025), object0, timestamp0, (GFFStreamFeature) null, "/", "LE:P");
      chadoTransaction0.copy();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      MinguoDate minguoDate0 = MockMinguoDate.from(offsetDateTime0);
      Instant instant0 = MockInstant.now();
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(3, minguoDate0, timestamp0, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getTypeAsString();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.SRGB;
      Instant instant0 = MockInstant.ofEpochSecond((long) 4093, (long) 4093);
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(4093, multipleGradientPaint_ColorSpaceType0, timestamp0, (GFFStreamFeature) null, "org.biojava.bio.seq.io.GenpeptFileFormer", "org.biojava.bio.seq.io.GenpeptFileFormer");
      chadoTransaction0.getTypeAsString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2459, 2459);
      Timestamp timestamp0 = new Timestamp(2459);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8970, defaultTableModel0, timestamp0, (GFFStreamFeature) null, (String) null, (String) null);
      ChadoTransaction chadoTransaction1 = chadoTransaction0.copy();
      chadoTransaction1.type = 1;
      chadoTransaction1.getTypeAsString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      MinguoDate minguoDate0 = MockMinguoDate.from(offsetDateTime0);
      Instant instant0 = MockInstant.now();
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(3, minguoDate0, timestamp0, (GFFStreamFeature) null, "", "");
      chadoTransaction0.getType();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      Timestamp timestamp0 = new Timestamp(803);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(803, object0, timestamp0, (GFFStreamFeature) null, ":C\u00019'", ":C\u00019'");
      chadoTransaction0.getLastModified();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2434, 2434);
      Timestamp timestamp0 = new Timestamp(2434);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8970, defaultTableModel0, timestamp0, (GFFStreamFeature) null, (String) null, (String) null);
      chadoTransaction0.getGff_feature();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "(", "(");
      chadoTransaction0.getFeatureKey();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "(", "(");
      chadoTransaction0.getFeatureObject();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2434, 2434);
      Timestamp timestamp0 = new Timestamp(2434);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8970, defaultTableModel0, timestamp0, (GFFStreamFeature) null, (String) null, (String) null);
      chadoTransaction0.getLogComment();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(8920);
      Location location0 = new Location(range0);
      QualifierVector qualifierVector0 = new QualifierVector();
      GFFStreamFeature gFFStreamFeature0 = new GFFStreamFeature(key0, location0, qualifierVector0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(8920, (Object) null, (Timestamp) null, gFFStreamFeature0, "#Ga0RM", "SP~LfPse-P,v");
      chadoTransaction0.getUniquename();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "]W", "UPDATE");
      chadoTransaction0.getUniquename();
      assertEquals("]W", chadoTransaction0.getFeatureKey());
      assertEquals(113, chadoTransaction0.getType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      Instant instant0 = MockInstant.ofEpochSecond((long) 2, 2L);
      Timestamp timestamp0 = Timestamp.from(instant0);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(2, object0, timestamp0, (GFFStreamFeature) null, "Assertion Failure: Should just have legal AtomicSymbol instances.", "org.biojava.bio.seq.io.GenpeptFileFormer");
      String string0 = chadoTransaction0.getTypeAsString();
      assertEquals("INSERT", string0);
      assertEquals("Assertion Failure: Should just have legal AtomicSymbol instances.", chadoTransaction0.getFeatureKey());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "]W", "UPDATE");
      chadoTransaction0.setUniquename("]W");
      ChadoTransaction chadoTransaction1 = chadoTransaction0.copy();
      assertEquals("]W", chadoTransaction1.getFeatureKey());
      assertEquals(113, chadoTransaction0.getType());
      assertNotSame(chadoTransaction1, chadoTransaction0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(113);
      ChadoTransaction chadoTransaction0 = new ChadoTransaction(113, (Object) null, timestamp0, (GFFStreamFeature) null, "(", "(");
      chadoTransaction0.getOldUniquename();
      assertEquals(113, chadoTransaction0.getType());
      assertEquals("(", chadoTransaction0.getFeatureKey());
  }
}
