/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 14:28:14 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.BetweenRange;
import uk.ac.sanger.artemis.io.Range;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BetweenRange_ESTest extends BetweenRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange((-1217), (-1217));
      BetweenRange betweenRange1 = new BetweenRange((-1217), 2070);
      boolean boolean0 = betweenRange1.equals((Range) betweenRange0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      BetweenRange betweenRange1 = new BetweenRange((-50), 0);
      boolean boolean0 = betweenRange0.equals((Range) betweenRange1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(1518, 1518);
      Range range0 = betweenRange0.copy();
      assertEquals(1518, range0.getStart());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange((-404), (-404));
      Range range0 = betweenRange0.copy();
      assertEquals((-404), range0.getEnd());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BetweenRange betweenRange0 = null;
      try {
        betweenRange0 = new BetweenRange(2103, 0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // start: 2103 > end: 0
         //
         verifyException("uk.ac.sanger.artemis.io.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      BetweenRange betweenRange1 = new BetweenRange(0, 1);
      boolean boolean0 = betweenRange0.equals((Range) betweenRange1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      BetweenRange betweenRange1 = new BetweenRange(1, 1);
      boolean boolean0 = betweenRange0.equals((Range) betweenRange1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      boolean boolean0 = betweenRange0.equals((Range) betweenRange0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      Range range0 = betweenRange0.truncate(betweenRange0);
      boolean boolean0 = betweenRange0.equals(range0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      Range range0 = betweenRange0.copy();
      assertEquals(1, range0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BetweenRange betweenRange0 = new BetweenRange(0, 0);
      String string0 = betweenRange0.toString();
      assertEquals("0^0", string0);
  }
}
