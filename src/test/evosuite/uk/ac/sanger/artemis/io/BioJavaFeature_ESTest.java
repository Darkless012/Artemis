/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 12 14:29:00 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.biojava.bio.symbol.PointLocation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.BioJavaEntry;
import uk.ac.sanger.artemis.io.BioJavaFeature;
import uk.ac.sanger.artemis.io.BlastEntryInformation;
import uk.ac.sanger.artemis.io.Entry;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.Qualifier;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BioJavaFeature_ESTest extends BioJavaFeature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        BioJavaFeature.makeBioJavaLocation((Location) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      // Undeclared exception!
      try { 
        bioJavaFeature0.getQualifiers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      // Undeclared exception!
      try { 
        bioJavaFeature0.getQualifierByName("c$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      Range range0 = new Range(1);
      Location location0 = new Location(range0);
      bioJavaFeature0.setLocation(location0, (Entry) null);
      assertEquals(0L, bioJavaFeature0.getNumericID());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      Key key0 = new Key((String) null);
      bioJavaFeature0.setKey(key0);
      assertEquals(0L, bioJavaFeature0.getNumericID());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      Entry entry0 = bioJavaFeature0.getEntry();
      assertNull(entry0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      // Undeclared exception!
      try { 
        bioJavaFeature0.getLocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      Qualifier qualifier0 = new Qualifier((String) null, (String) null);
      bioJavaFeature0.setQualifier(qualifier0);
      assertEquals(0L, bioJavaFeature0.getNumericID());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Range range0 = new Range(1465);
      Location location0 = new Location(range0);
      PointLocation pointLocation0 = (PointLocation)BioJavaFeature.makeBioJavaLocation(location0);
      assertEquals("1465", pointLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      bioJavaFeature0.removeQualifierByName("e3iCC?8>od");
      assertFalse(bioJavaFeature0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      // Undeclared exception!
      try { 
        bioJavaFeature0.getLastBase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      BioJavaFeature bioJavaFeature1 = (BioJavaFeature)bioJavaFeature0.copy();
      long long0 = bioJavaFeature1.getNumericID();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      boolean boolean0 = bioJavaFeature0.isReadOnly();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      QualifierVector qualifierVector0 = new QualifierVector();
      Range range0 = new Range(1);
      Location location0 = new Location(range0);
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Key key0 = blastEntryInformation0.getDefaultKey();
      bioJavaFeature0.set(key0, location0, qualifierVector0);
      assertEquals("misc_feature", key0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      long long0 = bioJavaFeature0.getNumericID();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      org.biojava.bio.seq.Feature feature0 = bioJavaFeature0.getBioJavaFeature();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      // Undeclared exception!
      try { 
        bioJavaFeature0.getFirstBase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.BioJavaFeature", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BioJavaFeature bioJavaFeature0 = new BioJavaFeature((org.biojava.bio.seq.Feature) null, (BioJavaEntry) null);
      QualifierVector qualifierVector0 = new QualifierVector();
      bioJavaFeature0.setQualifiers(qualifierVector0);
      assertFalse(bioJavaFeature0.isReadOnly());
  }
}
