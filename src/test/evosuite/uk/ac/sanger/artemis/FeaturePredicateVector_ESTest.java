/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 08 16:52:15 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.FeaturePredicate;
import uk.ac.sanger.artemis.FeaturePredicateVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class FeaturePredicateVector_ESTest extends FeaturePredicateVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      featurePredicateVector0.add((FeaturePredicate) null);
      int int0 = featurePredicateVector0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      featurePredicateVector0.add((FeaturePredicate) null);
      FeaturePredicate featurePredicate0 = featurePredicateVector0.elementAt(0);
      assertNull(featurePredicate0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      featurePredicateVector0.add((FeaturePredicate) null);
      FeaturePredicateVector featurePredicateVector1 = featurePredicateVector0.copy();
      assertNotSame(featurePredicateVector1, featurePredicateVector0);
      assertEquals(1, featurePredicateVector1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      // Undeclared exception!
      try { 
        featurePredicateVector0.elementAt(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      FeaturePredicateVector featurePredicateVector1 = featurePredicateVector0.copy();
      assertNotSame(featurePredicateVector1, featurePredicateVector0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FeaturePredicateVector featurePredicateVector0 = new FeaturePredicateVector();
      int int0 = featurePredicateVector0.size();
      assertEquals(0, int0);
  }
}
