/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 13:27:36 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.AlignMatch;
import uk.ac.sanger.artemis.AlignMatchVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlignMatchVector_ESTest extends AlignMatchVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      // Undeclared exception!
      try { 
        alignMatchVector0.elementAt((-148));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      alignMatchVector0.sort(comparator0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      int int0 = alignMatchVector0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      int int0 = alignMatchVector0.indexOf((AlignMatch) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      // Undeclared exception!
      try { 
        alignMatchVector0.elementAt(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      alignMatchVector0.removeAllElements();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      // Undeclared exception!
      try { 
        alignMatchVector0.add((AlignMatch) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - adding a null object
         //
         verifyException("uk.ac.sanger.artemis.util.FastVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      Object object0 = alignMatchVector0.clone();
      assertNotSame(object0, alignMatchVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      boolean boolean0 = alignMatchVector0.contains((AlignMatch) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      boolean boolean0 = alignMatchVector0.remove((AlignMatch) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlignMatchVector alignMatchVector0 = new AlignMatchVector();
      // Undeclared exception!
      try { 
        alignMatchVector0.addElement((AlignMatch) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - adding a null object
         //
         verifyException("uk.ac.sanger.artemis.util.FastVector", e);
      }
  }
}
