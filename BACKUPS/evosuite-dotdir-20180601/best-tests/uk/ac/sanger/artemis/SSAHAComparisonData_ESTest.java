/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:56:25 GMT 2018
 */

package uk.ac.sanger.artemis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.SSAHAComparisonData;
import uk.ac.sanger.artemis.SimpleComparisonData;
import uk.ac.sanger.artemis.util.LinePushBackReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SSAHAComparisonData_ESTest extends SSAHAComparisonData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        SSAHAComparisonData.makeMatchFromStringStatic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinePushBackReader linePushBackReader0 = mock(LinePushBackReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(linePushBackReader0).readLine();
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
      // Undeclared exception!
      try { 
        sSAHAComparisonData0.makeMatchFromString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        SSAHAComparisonData.formatCorrect((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinePushBackReader linePushBackReader0 = mock(LinePushBackReader.class, new ViolatedAssumptionAnswer());
      doReturn("S").when(linePushBackReader0).readLine();
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // while reading SSAHA data: not enough fields in this line: S
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = null;
      try {
        sSAHAComparisonData0 = new SSAHAComparisonData((LinePushBackReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.SimpleComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      try { 
        SSAHAComparisonData.makeMatchFromStringStatic("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading SSAHA data: not enough fields in this line: 
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinePushBackReader linePushBackReader0 = mock(LinePushBackReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(linePushBackReader0).readLine();
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
      try { 
        sSAHAComparisonData0.makeMatchFromString("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // while reading SSAHA data: not enough fields in this line: 
         //
         verifyException("uk.ac.sanger.artemis.SSAHAComparisonData", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String string0 = "y";
      boolean boolean0 = SSAHAComparisonData.formatCorrect(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LinePushBackReader linePushBackReader0 = mock(LinePushBackReader.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(linePushBackReader0).readLine();
      SSAHAComparisonData sSAHAComparisonData0 = new SSAHAComparisonData(linePushBackReader0);
      SimpleComparisonData simpleComparisonData0 = sSAHAComparisonData0.getNewSimpleComparisonData();
      assertNotSame(sSAHAComparisonData0, simpleComparisonData0);
  }
}
