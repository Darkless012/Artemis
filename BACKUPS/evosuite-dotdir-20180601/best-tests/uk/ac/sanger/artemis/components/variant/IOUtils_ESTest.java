/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 10:33:21 GMT 2018
 */

package uk.ac.sanger.artemis.components.variant;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.awt.datatransfer.Clipboard;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Writer;
import java.util.Hashtable;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.FeaturePredicate;
import uk.ac.sanger.artemis.FeatureVector;
import uk.ac.sanger.artemis.FilteredEntryGroup;
import uk.ac.sanger.artemis.Selection;
import uk.ac.sanger.artemis.SimpleEntryGroup;
import uk.ac.sanger.artemis.components.variant.IOUtils;
import uk.ac.sanger.artemis.components.variant.VCFview;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.sequence.Bases;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      IOUtils.wrapString("", stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:]5PCaJ D,-l{7){H");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "ftp::5F");
      try { 
        IOUtils.isBCF("http:]5PCaJ D,-l{7){H");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Incorrect header size for file: data stream
         //
         verifyException("htsjdk.samtools.util.BlockCompressedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      FilteredEntryGroup filteredEntryGroup0 = new FilteredEntryGroup(simpleEntryGroup0, (FeaturePredicate) null, "ftp:FE'L]IY}=H`+g,t");
      Entry entry0 = filteredEntryGroup0.createEntry("org.bouncycastle.asn1.DERExternalParser");
      FeatureVector featureVector0 = entry0.checkForMissingQualifiers();
      // Undeclared exception!
      try { 
        IOUtils.writeVCF((Map<String, Boolean>) null, (String) null, (-1), (VCFview) null, featureVector0, 1146);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        IOUtils.isBCF("httpd`TR$8u$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      FilteredEntryGroup filteredEntryGroup0 = new FilteredEntryGroup(simpleEntryGroup0, (FeaturePredicate) null, "ftp:FE'L]IY}=H`+g,t");
      Entry entry0 = filteredEntryGroup0.createEntry("org.bouncycastle.asn1.DERExternalParser");
      FeatureVector featureVector0 = entry0.checkForMissingQualifiers();
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      Bases bases0 = new Bases((Sequence) null);
      // Undeclared exception!
      try { 
        IOUtils.exportVariantFasta((VCFview) null, mockPrintWriter0, 6, featureVector0, bases0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.exportVariantFasta((VCFview) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.exportFastaByRange((VCFview) null, (Selection) null, true, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(4421);
      // Undeclared exception!
      try { 
        IOUtils.exportFasta((VCFview) null, (FeatureVector) null, true, charArrayWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Hashtable<String, Boolean> hashtable0 = new Hashtable<String, Boolean>();
      StringVector stringVector0 = StringVector.getStrings("uk.ac.sanger.artemis.components.variant.IOUtils");
      // Undeclared exception!
      try { 
        IOUtils.export(hashtable0, stringVector0, (VCFview) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      Entry entry0 = simpleEntryGroup0.createEntry();
      FeatureVector featureVector0 = entry0.checkForOverlappingCDSs();
      FilteredEntryGroup filteredEntryGroup0 = new FilteredEntryGroup(simpleEntryGroup0, featureVector0, "5K-D/p`!z,LIY6");
      // Undeclared exception!
      IOUtils.createFeatures((VCFview) null, filteredEntryGroup0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      // Undeclared exception!
      try { 
        IOUtils.createFeatures((VCFview) null, simpleEntryGroup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.SimpleEntryGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.countVariants((VCFview) null, (FeatureVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFileWriter mockFileWriter0 = new MockFileWriter("*$BP n~", true);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      FilteredEntryGroup filteredEntryGroup0 = new FilteredEntryGroup(simpleEntryGroup0, (FeaturePredicate) null, "ftp:FE'L]IY}=H`+g,t");
      Entry entry0 = filteredEntryGroup0.createEntry("org.bouncycastle.asn1.DERExternalParser");
      FeatureVector featureVector0 = entry0.checkForMissingQualifiers();
      File file0 = IOUtils.writeVCF((Map<String, Boolean>) null, "*$BP n~", 395, (VCFview) null, featureVector0, 1146);
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.isBCF("ftp:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      IOUtils.wrapString("Could not read configuration file [", stringBuffer0);
      assertEquals(36, stringBuffer0.length());
      assertEquals("Could not read configuration file [\n", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.wrapString("Tiger", (StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.variant.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      FilteredEntryGroup filteredEntryGroup0 = new FilteredEntryGroup(simpleEntryGroup0, (FeaturePredicate) null, "ftp:FE'L]IY}=H`+g,t");
      Entry entry0 = filteredEntryGroup0.createEntry("org.bouncycastle.asn1.DERExternalParser");
      FeatureVector featureVector0 = entry0.checkForMissingQualifiers();
      // Undeclared exception!
      try { 
        IOUtils.countVariants((VCFview) null, featureVector0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard(" ~6`XA5n/Vl1");
      Selection selection0 = new Selection(clipboard0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FeatureVector featureVector0 = selection0.getSelectedFeatures();
      // Undeclared exception!
      try { 
        IOUtils.exportFasta((VCFview) null, featureVector0, true, charArrayWriter0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Clipboard clipboard0 = new Clipboard(" ~6`XA5n/Vl1");
      Selection selection0 = new Selection(clipboard0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        IOUtils.exportFastaByRange((VCFview) null, selection0, true, charArrayWriter0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Hashtable<String, Boolean> hashtable0 = new Hashtable<String, Boolean>();
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup();
      FeatureVector featureVector0 = simpleEntryGroup0.getFeaturesInRange((Range) null);
      // Undeclared exception!
      try { 
        IOUtils.writeVCF(hashtable0, (String) null, (-1087), (VCFview) null, featureVector0, (-1087));
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
  }
}
