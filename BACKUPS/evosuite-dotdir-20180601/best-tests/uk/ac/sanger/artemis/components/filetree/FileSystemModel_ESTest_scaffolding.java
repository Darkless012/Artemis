/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Apr 10 11:53:55 GMT 2018
 */

package uk.ac.sanger.artemis.components.filetree;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class FileSystemModel_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "uk.ac.sanger.artemis.components.filetree.FileSystemModel"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/r3/l648tx8s7hn8ppds6z2bk5cc000h2n/T/"); 
    java.lang.System.setProperty("user.country", "GB"); 
    java.lang.System.setProperty("user.dir", "/Users/kp11/workspace/applications/Artemis-build-ci/Artemis"); 
    java.lang.System.setProperty("user.home", "/Users/kp11"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "kp11"); 
    java.lang.System.setProperty("user.timezone", ""); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileSystemModel_ESTest_scaffolding.class.getClassLoader() ,
      "uk.ac.sanger.artemis.components.filetree.FileNode",
      "org.apache.oro.util.GenericCacheEntry",
      "uk.ac.sanger.artemis.j2ssh.SshFileManager",
      "uk.ac.sanger.artemis.components.filetree.TreeTableModel",
      "org.apache.oro.text.awk.PlusNode",
      "org.apache.log4j.or.ObjectRenderer",
      "org.apache.oro.text.awk.AwkMatcher",
      "org.apache.oro.text.awk.SyntaxNode",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.oro.text.awk.LeafNode",
      "org.apache.oro.text.PatternCacheLRU",
      "org.apache.log4j.or.RendererMap",
      "com.sshtools.ssh.Client",
      "com.sshtools.ssh.HostKeyVerification",
      "org.apache.oro.text.awk.AwkStreamInput",
      "uk.ac.sanger.artemis.components.filetree.RemoteFileNode",
      "org.apache.log4j.Logger",
      "com.sshtools.ssh.SshTransport",
      "org.apache.log4j.Level",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "org.apache.oro.text.awk.NegativeCharacterClassNode",
      "org.apache.oro.text.awk.CharacterClassNode",
      "org.apache.oro.text.PatternCache",
      "org.apache.oro.text.regex.MatchResult",
      "org.apache.oro.text.regex.MalformedPatternException",
      "org.apache.oro.text.regex.Pattern",
      "com.sshtools.ssh.ChannelOpenException",
      "org.apache.oro.text.awk.StarNode",
      "org.apache.oro.util.GenericCache",
      "org.apache.oro.util.Cache",
      "org.apache.log4j.spi.RepositorySelector",
      "uk.ac.sanger.artemis.components.filetree.FileList",
      "com.sshtools.ssh.SshException",
      "org.apache.oro.text.regex.PatternCompiler",
      "com.sshtools.publickey.AbstractKnownHostsKeyVerification",
      "org.apache.oro.text.awk.SyntaxTree",
      "org.apache.oro.util.CacheLRU",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.spi.Configurator",
      "org.apache.oro.text.awk.DFAState",
      "com.sshtools.ssh.SshAuthentication",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.oro.io.RegexFilenameFilter",
      "com.sshtools.sftp.SftpStatusException",
      "org.apache.oro.text.MalformedCachePatternException",
      "uk.ac.sanger.artemis.j2ssh.SshLogin",
      "org.apache.oro.text.regex.PatternMatcher",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.helpers.Loader",
      "org.apache.oro.text.awk.AwkCompiler",
      "com.sshtools.publickey.ConsoleKnownHostsKeyVerification",
      "org.apache.log4j.ProvisionNode",
      "uk.ac.sanger.artemis.components.filetree.FileSystemModel$1",
      "org.apache.log4j.Hierarchy",
      "com.sshtools.sftp.FileTransferProgress",
      "com.sshtools.sftp.TransferCancelledException",
      "com.sshtools.ssh.SshClient",
      "org.apache.oro.text.awk.OrNode",
      "com.sshtools.sftp.SftpFileAttributes",
      "uk.ac.sanger.artemis.components.filetree.FileSystemModel",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.oro.text.GenericPatternCache",
      "org.apache.log4j.spi.AppenderAttachable",
      "uk.ac.sanger.artemis.j2ssh.FTProgress",
      "org.apache.log4j.spi.RendererSupport",
      "org.apache.oro.io.AwkFilenameFilter",
      "org.apache.oro.text.awk.CatNode",
      "org.apache.oro.text.awk.QuestionNode",
      "org.apache.oro.text.awk.AwkPattern",
      "org.apache.log4j.Priority",
      "com.sshtools.ssh.components.SshPublicKey",
      "org.apache.oro.text.awk.TokenNode",
      "com.sshtools.ssh.SshIO",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.helpers.OptionConverter"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.io.File", false, FileSystemModel_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.io.FileFilter", false, FileSystemModel_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("javax.swing.JFrame", false, FileSystemModel_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileSystemModel_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "uk.ac.sanger.artemis.components.filetree.FileSystemModel",
      "uk.ac.sanger.artemis.components.filetree.FileSystemModel$1",
      "uk.ac.sanger.artemis.components.filetree.FileNode",
      "uk.ac.sanger.artemis.components.filetree.RemoteFileNode",
      "uk.ac.sanger.artemis.components.filetree.FileList",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "uk.ac.sanger.artemis.j2ssh.SshFileManager",
      "uk.ac.sanger.artemis.j2ssh.SshLogin",
      "org.apache.xmlgraphics.java2d.AbstractGraphicsConfiguration",
      "org.apache.xmlgraphics.java2d.GraphicsConfigurationWithTransparency",
      "org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute",
      "org.emboss.jemboss.JembossParams",
      "org.emboss.jemboss.gui.Browser",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.xmlgraphics.java2d.GraphicsConfigurationWithoutTransparency",
      "org.apache.oro.io.RegexFilenameFilter",
      "org.apache.oro.text.regex.Perl5Matcher",
      "org.apache.oro.text.GenericPatternCache",
      "org.apache.oro.text.PatternCacheLRU",
      "org.apache.oro.text.GlobCompiler",
      "org.apache.oro.text.regex.Perl5Compiler",
      "org.apache.oro.util.GenericCache",
      "org.apache.oro.util.CacheLRU",
      "org.apache.oro.util.GenericCacheEntry",
      "org.apache.oro.io.GlobFilenameFilter",
      "org.apache.oro.text.regex.CharStringPointer",
      "org.apache.oro.text.regex.OpCode",
      "org.apache.oro.text.regex.Perl5Pattern",
      "org.apache.oro.io.Perl5FilenameFilter",
      "org.apache.oro.text.awk.AwkMatcher",
      "org.apache.oro.text.awk.AwkStreamInput",
      "org.apache.oro.text.awk.AwkCompiler",
      "org.apache.oro.io.AwkFilenameFilter",
      "org.apache.oro.text.awk.SyntaxTree",
      "org.apache.oro.text.awk.SyntaxNode",
      "org.apache.oro.text.awk.LeafNode",
      "org.apache.oro.text.awk.TokenNode",
      "org.apache.oro.text.awk.AwkPattern",
      "org.apache.oro.text.awk.DFAState",
      "com.sshtools.ssh.SubsystemChannel",
      "com.sshtools.sftp.SftpSubsystemChannel",
      "com.sshtools.ssh.SubsystemChannel$Reader",
      "com.sshtools.ssh.SubsystemChannel$Writer",
      "org.apache.oro.text.awk.CatNode",
      "com.sshtools.publickey.AbstractKnownHostsKeyVerification",
      "com.sshtools.publickey.ConsoleKnownHostsKeyVerification",
      "org.apache.oro.text.regex.MalformedPatternException",
      "org.apache.oro.text.MalformedCachePatternException",
      "uk.ac.sanger.artemis.j2ssh.SshPSUClient",
      "org.apache.oro.text.awk.CharacterClassNode",
      "com.sshtools.sftp.SftpClient",
      "com.sshtools.ssh2.Ssh2Client",
      "com.sshtools.ssh2.Ssh2Client$ForwardingRequestChannelFactory",
      "com.sshtools.ssh.SshException",
      "org.apache.xmlgraphics.java2d.GenericGraphicsDevice"
    );
  }
}
