/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Apr 10 11:47:29 GMT 2018
 */

package uk.ac.sanger.artemis.components.filetree;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class RemoteFileNode_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "uk.ac.sanger.artemis.components.filetree.RemoteFileNode"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/r3/l648tx8s7hn8ppds6z2bk5cc000h2n/T/"); 
    java.lang.System.setProperty("user.country", "GB"); 
    java.lang.System.setProperty("user.dir", "/Users/kp11/workspace/applications/Artemis-build-ci/Artemis"); 
    java.lang.System.setProperty("user.home", "/Users/kp11"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "kp11"); 
    java.lang.System.setProperty("user.timezone", ""); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RemoteFileNode_ESTest_scaffolding.class.getClassLoader() ,
      "com.sshtools.sftp.SftpStatusException",
      "uk.ac.sanger.artemis.j2ssh.SshLogin",
      "uk.ac.sanger.artemis.j2ssh.SshFileManager",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.or.ObjectRenderer",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.or.RendererMap",
      "com.sshtools.ssh.Client",
      "org.apache.log4j.ProvisionNode",
      "org.apache.log4j.Hierarchy",
      "uk.ac.sanger.artemis.components.filetree.RemoteFileNode",
      "org.apache.log4j.Logger",
      "com.sshtools.ssh.SshTransport",
      "com.sshtools.sftp.FileTransferProgress",
      "com.sshtools.sftp.TransferCancelledException",
      "org.apache.log4j.Level",
      "com.sshtools.util.UnsignedInteger64",
      "com.sshtools.ssh.SshClient",
      "com.sshtools.sftp.SftpFileAttributes",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.RootLogger",
      "com.sshtools.ssh.ChannelOpenException",
      "org.apache.log4j.spi.AppenderAttachable",
      "uk.ac.sanger.artemis.j2ssh.FTProgress",
      "org.apache.log4j.spi.RepositorySelector",
      "org.apache.log4j.spi.RendererSupport",
      "uk.ac.sanger.artemis.components.filetree.FileList",
      "com.sshtools.ssh.SshException",
      "org.apache.log4j.Priority",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.spi.Configurator",
      "com.sshtools.ssh.SshIO",
      "com.sshtools.ssh.SshAuthentication",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.helpers.OptionConverter"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RemoteFileNode_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "uk.ac.sanger.artemis.components.filetree.RemoteFileNode",
      "uk.ac.sanger.artemis.components.filetree.FileList",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "uk.ac.sanger.artemis.j2ssh.SshFileManager",
      "uk.ac.sanger.artemis.j2ssh.SshLogin",
      "com.sshtools.ssh2.Ssh2Client",
      "com.sshtools.ssh2.Ssh2Client$ForwardingRequestChannelFactory",
      "com.sshtools.sftp.SftpClient",
      "com.sshtools.ssh.SshException",
      "com.sshtools.ssh.message.SshAbstractChannel",
      "com.sshtools.ssh2.Ssh2Channel$6",
      "com.sshtools.ssh2.Ssh2Channel",
      "com.sshtools.ssh2.Ssh2Session",
      "com.sshtools.ssh2.Ssh2Channel$1",
      "com.sshtools.ssh2.Ssh2Channel$2",
      "com.sshtools.ssh2.Ssh2Channel$3",
      "com.sshtools.ssh2.Ssh2Channel$4",
      "com.sshtools.ssh2.Ssh2Channel$5",
      "com.sshtools.ssh2.Ssh2Channel$DataWindow",
      "com.sshtools.ssh2.Ssh2Channel$ChannelInputStream",
      "com.sshtools.ssh2.Ssh2Channel$ChannelOutputStream",
      "com.sshtools.ssh.SubsystemChannel",
      "com.sshtools.sftp.SftpSubsystemChannel",
      "com.sshtools.ssh.SubsystemChannel$Reader",
      "com.sshtools.ssh.SubsystemChannel$Writer",
      "com.sshtools.util.UnsignedInteger32",
      "com.sshtools.sftp.SftpSubsystemChannel$SftpThreadSynchronizer",
      "com.sshtools.util.ByteArrayWriter",
      "com.sshtools.ssh.Packet",
      "uk.ac.sanger.artemis.j2ssh.FTProgress",
      "com.sshtools.util.ByteArrayReader",
      "com.sshtools.sftp.SftpFileAttributes",
      "com.sshtools.logging.Log",
      "com.sshtools.logging.NoLogger",
      "com.sshtools.logging.LoggerFactory",
      "com.sshtools.publickey.AbstractKnownHostsKeyVerification",
      "com.sshtools.publickey.ConsoleKnownHostsKeyVerification",
      "com.sshtools.sftp.SftpFile",
      "com.sshtools.util.UnsignedInteger64",
      "org.apache.xmlgraphics.java2d.AbstractGraphicsConfiguration",
      "org.apache.xmlgraphics.java2d.GraphicsConfigurationWithTransparency",
      "com.sshtools.ssh.SshConnector",
      "com.sshtools.ssh2.Ssh2Context",
      "com.sshtools.ssh.components.ComponentManager",
      "com.sshtools.ssh.components.jce.JCEComponentManager",
      "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission",
      "org.bouncycastle.util.Strings",
      "org.bouncycastle.jce.provider.BouncyCastleProviderConfiguration",
      "org.bouncycastle.jce.provider.BouncyCastleProvider",
      "org.bouncycastle.jce.provider.BouncyCastleProvider$1",
      "org.bouncycastle.jcajce.provider.util.AlgorithmProvider",
      "org.bouncycastle.jcajce.provider.digest.DigestAlgorithmProvider",
      "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
      "org.bouncycastle.asn1.ASN1Object",
      "org.bouncycastle.asn1.ASN1Primitive",
      "org.bouncycastle.asn1.ASN1ObjectIdentifier",
      "org.bouncycastle.asn1.cryptopro.CryptoProObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
      "org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
      "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
      "org.bouncycastle.asn1.iana.IANAObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
      "org.bouncycastle.asn1.oiw.OIWObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
      "org.bouncycastle.asn1.teletrust.TeleTrusTObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
      "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
      "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
      "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
      "org.bouncycastle.asn1.nist.NISTObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
      "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
      "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
      "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
      "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
      "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
      "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
      "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.SymmetricAlgorithmProvider",
      "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
      "org.bouncycastle.asn1.bc.BCObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
      "org.bouncycastle.asn1.ntt.NTTObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
      "org.bouncycastle.asn1.kisa.KISAObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
      "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
      "org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider",
      "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi",
      "org.bouncycastle.asn1.x9.X9ObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil",
      "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC",
      "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV",
      "org.bouncycastle.asn1.eac.EACObjectIdentifiers",
      "org.bouncycastle.asn1.bsi.BSIObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi",
      "org.bouncycastle.asn1.x509.X509ObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
      "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
      "org.bouncycastle.asn1.ua.UAObjectIdentifiers",
      "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi",
      "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
      "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
      "com.sshtools.logging.LoggerLevel",
      "com.sshtools.ssh.components.ComponentFactory",
      "com.sshtools.ssh.components.SshCipher",
      "com.sshtools.ssh.components.jce.AbstractJCECipher",
      "com.sshtools.ssh.components.jce.TripleDesCtr",
      "com.sshtools.ssh.components.jce.JCEProvider",
      "com.sshtools.ssh.components.jce.AES128Ctr",
      "com.sshtools.ssh.components.jce.AES192Ctr",
      "com.sshtools.ssh.components.jce.AES256Ctr",
      "com.sshtools.ssh.components.jce.AbstractHmac",
      "com.sshtools.ssh.components.jce.HmacMD5",
      "com.sshtools.ssh.components.jce.HmacSha1",
      "com.sshtools.ssh.components.jce.HmacMD596",
      "com.sshtools.ssh.components.jce.HmacSha196",
      "com.sshtools.ssh.components.jce.HmacSha256",
      "com.sshtools.ssh.components.jce.HmacSha512",
      "com.sshtools.ssh.components.jce.AbstractDigest",
      "com.sshtools.ssh.components.jce.MD5Digest",
      "com.sshtools.ssh.components.jce.SHA1Digest",
      "com.sshtools.ssh.components.jce.SHA256Digest",
      "com.sshtools.ssh.components.jce.SHA384Digest",
      "com.sshtools.ssh.components.jce.SHA512Digest",
      "com.sshtools.ssh.components.SshKeyExchangeClient",
      "com.sshtools.ssh.components.DiffieHellmanGroups",
      "com.sshtools.ssh.components.jce.DiffieHellmanGroup14Sha1",
      "com.sshtools.ssh.components.jce.DiffieHellmanGroup1Sha1",
      "com.sshtools.ssh.components.jce.DiffieHellmanGroupExchangeSha1",
      "com.sshtools.ssh.components.jce.DiffieHellmanGroupExchangeSha256",
      "com.sshtools.ssh.components.jce.SecureRND",
      "com.sshtools.zlib.ZLibCompression",
      "com.sshtools.zlib.OpenSSHZLibCompression",
      "com.sshtools.ssh2.Ssh2ForwardingChannel"
    );
  }
}
