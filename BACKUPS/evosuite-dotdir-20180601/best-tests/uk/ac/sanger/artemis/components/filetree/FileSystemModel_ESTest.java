/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 11:53:55 GMT 2018
 */

package uk.ac.sanger.artemis.components.filetree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sshtools.publickey.ConsoleKnownHostsKeyVerification;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileFilter;
import javax.swing.JFrame;
import org.apache.oro.io.AwkFilenameFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.filetree.FileNode;
import uk.ac.sanger.artemis.components.filetree.FileSystemModel;
import uk.ac.sanger.artemis.components.filetree.RemoteFileNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileSystemModel_ESTest extends FileSystemModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = null;
      try {
        fileSystemModel0 = new FileSystemModel((String[]) null, jFrame0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File[] fileArray0 = new File[0];
      AwkFilenameFilter awkFilenameFilter0 = new AwkFilenameFilter("E&G6v");
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, awkFilenameFilter0, (JFrame) null);
      ConsoleKnownHostsKeyVerification consoleKnownHostsKeyVerification0 = new ConsoleKnownHostsKeyVerification();
      File file0 = consoleKnownHostsKeyVerification0.getKnownHostsFile();
      FileNode fileNode0 = new FileNode(file0);
      boolean boolean0 = fileSystemModel0.isLeaf(fileNode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      boolean boolean0 = fileSystemModel0.isLeaf(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "4~WIhKZU=H:Cx/}";
      stringArray0[1] = "Vh6&ih.K~Rzds}";
      stringArray0[2] = "a.ip|}*p}H%z)-v)?9";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      FileFilter fileFilter0 = fileSystemModel0.getFilter();
      assertNull(fileFilter0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemModel fileSystemModel0 = new FileSystemModel((JFrame) null);
      String[] stringArray0 = new String[4];
      FileSystemModel.cNames = stringArray0;
      String string0 = fileSystemModel0.getColumnName(1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Class class0 = fileSystemModel0.getColumnClass(0);
      assertTrue(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      Class class0 = fileSystemModel0.getColumnClass(1);
      assertEquals("class java.lang.Integer", class0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      FileNode fileNode1 = (FileNode)fileSystemModel0.getChild(fileNode0, 0);
      assertNotNull(fileNode1);
      
      Object[] objectArray0 = fileSystemModel0.getChildren(fileNode1);
      assertTrue(fileNode0.getAllowsChildren());
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.isLeaf("S-/I");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to javax.swing.tree.TreeNode
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileSystemModel.cNames = null;
      // Undeclared exception!
      try { 
        fileSystemModel0.getColumnName(203);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getColumnName((-1257));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1257
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File[] fileArray0 = new File[4];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(file0).compareTo(any(java.io.File.class));
      fileArray0[0] = file0;
      fileArray0[1] = file0;
      fileArray0[2] = file0;
      fileArray0[3] = file0;
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, (FileFilter) null, jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildren((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemModel fileSystemModel0 = new FileSystemModel((JFrame) null);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildren("org.apache.oro.text.MalformedCachePatternException");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to uk.ac.sanger.artemis.components.filetree.RemoteFileNode
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_=~H)arG";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      Object object1 = fileSystemModel0.getChild(object0, 0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildren(object1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File[] fileArray0 = new File[1];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(file0).compareTo(any(java.io.File.class));
      fileArray0[0] = file0;
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, fileFilter0, jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildCount((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildCount("k{%mD&0mw7ymP;_2");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to uk.ac.sanger.artemis.components.filetree.RemoteFileNode
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_=~H)arG";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      Object object1 = fileSystemModel0.getChild(object0, 0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChildCount(object1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChild((Object) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getChild("#`", 2318);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to uk.ac.sanger.artemis.components.filetree.RemoteFileNode
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File[] fileArray0 = new File[0];
      AwkFilenameFilter awkFilenameFilter0 = new AwkFilenameFilter("E&G6v");
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, awkFilenameFilter0, (JFrame) null);
      Object object0 = fileSystemModel0.getRoot();
      // Undeclared exception!
      try { 
        fileSystemModel0.getChild(object0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = null;
      try {
        fileSystemModel0 = new FileSystemModel((File[]) null, fileFilter0, jFrame0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemModel fileSystemModel0 = new FileSystemModel((JFrame) null);
      Object object0 = fileSystemModel0.getValueAt((Object) null, 972);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      File[] fileArray0 = new File[1];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(file0).compareTo(any(java.io.File.class));
      doReturn(false).when(file0).isDirectory();
      fileArray0[0] = file0;
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, fileFilter0, jFrame0);
      // Undeclared exception!
      try { 
        fileSystemModel0.getValueAt(file0, 1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.io.File$MockitoMock$1821499302 cannot be cast to uk.ac.sanger.artemis.components.filetree.RemoteFileNode
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[0];
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, (JFrame) null);
      // Undeclared exception!
      try { 
        fileSystemModel0.getValueAt((Object) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File[] fileArray0 = new File[4];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(938, 938, 469, 938).when(file0).compareTo(any(java.io.File.class));
      doReturn(false).when(file0).exists();
      doReturn(true, true, false, true, true).when(file0).isDirectory();
      fileArray0[0] = file0;
      fileArray0[1] = file0;
      fileArray0[2] = file0;
      fileArray0[3] = file0;
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, (FileFilter) null, jFrame0);
      FileNode fileNode0 = new FileNode(file0);
      Object object0 = fileSystemModel0.getValueAt(fileNode0, 2);
      assertNull(object0);
      assertTrue(fileNode0.isDirectory());
      assertTrue(fileNode0.getAllowsChildren());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      File[] fileArray0 = new File[4];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(938, 938, 469, 938).when(file0).compareTo(any(java.io.File.class));
      doReturn(true, true, false, true).when(file0).isDirectory();
      fileArray0[0] = file0;
      fileArray0[1] = file0;
      fileArray0[2] = file0;
      fileArray0[3] = file0;
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, (FileFilter) null, jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      String string0 = (String)fileSystemModel0.getValueAt(fileNode0, 2);
      assertFalse(fileNode0.isLeaf());
      assertNotNull(string0);
      assertEquals("Feb 14 20:21 2014", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      Integer integer0 = (Integer)fileSystemModel0.getValueAt(fileNode0, 1);
      assertFalse(fileNode0.isLeaf());
      assertNull(integer0);
      assertTrue(fileNode0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      File[] fileArray0 = new File[0];
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, (FileFilter) null, jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      String string0 = (String)fileSystemModel0.getValueAt(fileNode0, 0);
      assertNotNull(string0);
      assertTrue(fileNode0.getAllowsChildren());
      assertFalse(fileNode0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      fileSystemModel0.getValueAt(fileNode0, (-2475));
      assertTrue(fileNode0.getAllowsChildren());
      assertFalse(fileNode0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/.";
      stringArray0[1] = "Remote file";
      stringArray0[2] = "";
      stringArray0[3] = "^gd!:e|z.6Y6:(9E(N";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      Object object1 = fileSystemModel0.getValueAt(object0, 2);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/.";
      stringArray0[1] = "Remote file";
      stringArray0[2] = "";
      stringArray0[3] = "^gd!:e|z.6Y6:(9E(N";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      RemoteFileNode remoteFileNode0 = new RemoteFileNode(false);
      int int0 = fileSystemModel0.getChildCount(remoteFileNode0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_=~H)arG";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      int int0 = fileSystemModel0.getChildCount(object0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileNode fileNode0 = (FileNode)fileSystemModel0.getRoot();
      int int0 = fileSystemModel0.getChildCount(fileNode0);
      assertEquals(2, int0);
      assertFalse(fileNode0.isLeaf());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      MockFile mockFile0 = new MockFile("([GJ{\"qm'WUK3.[j<", "([GJ{\"qm'WUK3.[j<");
      FileNode fileNode0 = new FileNode(mockFile0);
      Object[] objectArray0 = fileSystemModel0.getChildren(fileNode0);
      assertNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_=~H)arG";
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(stringArray0, jFrame0);
      Object object0 = fileSystemModel0.getRoot();
      Object[] objectArray0 = fileSystemModel0.getChildren(object0);
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      String string0 = fileSystemModel0.getColumnName(0);
      assertEquals("Name", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      int int0 = fileSystemModel0.getColumnCount();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemModel fileSystemModel0 = new FileSystemModel((JFrame) null);
      // Undeclared exception!
      try { 
        fileSystemModel0.getColumnClass(1993);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1993
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(jFrame0);
      FileFilter fileFilter0 = fileSystemModel0.getFilter();
      assertNotNull(fileFilter0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      File[] fileArray0 = new File[6];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(file0).compareTo(any(java.io.File.class));
      fileArray0[0] = file0;
      fileArray0[1] = file0;
      fileArray0[2] = file0;
      fileArray0[3] = file0;
      fileArray0[4] = file0;
      fileArray0[5] = file0;
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, fileFilter0, (JFrame) null);
      // Undeclared exception!
      try { 
        fileSystemModel0.isLeaf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.filetree.FileSystemModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      File[] fileArray0 = new File[5];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(1, 1, 0, 0, 0).when(file0).compareTo(any(java.io.File.class));
      doReturn(false, false).when(file0).isDirectory();
      fileArray0[0] = file0;
      fileArray0[1] = file0;
      fileArray0[2] = file0;
      fileArray0[3] = file0;
      fileArray0[4] = file0;
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      FileSystemModel fileSystemModel0 = new FileSystemModel(fileArray0, fileFilter0, jFrame0);
      fileSystemModel0.setFilter((FileFilter) null);
      assertEquals(3, fileSystemModel0.getColumnCount());
  }
}
