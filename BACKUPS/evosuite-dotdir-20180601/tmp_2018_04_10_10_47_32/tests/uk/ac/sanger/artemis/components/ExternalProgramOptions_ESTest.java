/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:57:15 GMT 2018
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.ExternalProgram;
import uk.ac.sanger.artemis.components.ExternalProgramOptions;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExternalProgramOptions_ESTest extends ExternalProgramOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExternalProgramOptions externalProgramOptions0 = null;
      try {
        externalProgramOptions0 = new ExternalProgramOptions((ExternalProgram) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.ExternalProgramOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExternalProgram externalProgram0 = mock(ExternalProgram.class, new ViolatedAssumptionAnswer());
      doReturn((-645), 0).when(externalProgram0).getType();
      ExternalProgramOptions externalProgramOptions0 = null;
      try {
        externalProgramOptions0 = new ExternalProgramOptions(externalProgram0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // internal error - please hit the programmer
         //
         verifyException("uk.ac.sanger.artemis.components.ExternalProgramOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExternalProgram externalProgram0 = mock(ExternalProgram.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(externalProgram0).getName();
      doReturn((String) null).when(externalProgram0).getProgramOptions();
      doReturn(1, 1).when(externalProgram0).getType();
      ExternalProgramOptions externalProgramOptions0 = null;
      try {
        externalProgramOptions0 = new ExternalProgramOptions(externalProgram0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExternalProgram externalProgram0 = mock(ExternalProgram.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(externalProgram0).getName();
      doReturn((String) null).when(externalProgram0).getProgramOptions();
      doReturn(0).when(externalProgram0).getType();
      ExternalProgramOptions externalProgramOptions0 = null;
      try {
        externalProgramOptions0 = new ExternalProgramOptions(externalProgram0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
