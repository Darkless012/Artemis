/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:14:34 GMT 2018
 */

package uk.ac.sanger.artemis.components.alignment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.util.List;
import javax.swing.JPanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.alignment.LineAttributes;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineAttributes_ESTest extends LineAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      Color color1 = mock(Color.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(color1).toString();
      lineAttributes0.setLineColour(color1);
      LineAttributes.init(1105);
      lineAttributes0.getLineColour();
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      String[] stringArray0 = new String[0];
      LineAttributes.PLOT_TYPES = stringArray0;
      lineAttributes0.getPlotType();
      lineAttributes0.getPlotType();
      // Undeclared exception!
      try { 
        LineAttributes.init(1518);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Color color0 = null;
      LineAttributes lineAttributes0 = new LineAttributes((Color) null);
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      lineAttributes0.setLineColour((Color) null);
      lineAttributes0.setStroke(basicStroke0);
      lineAttributes0.setStroke(basicStroke0);
      LineAttributes.init(4815);
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      lineAttributes0.setLineColour((Color) null);
      LineAttributes.getStrokes();
      lineAttributes0.setStroke(basicStroke0);
      LineAttributes.init(0);
      LineAttributes.init(4815);
      lineAttributes0.getStroke();
      lineAttributes0.setStroke(basicStroke0);
      LineAttributes.init(4258);
      Color color1 = lineAttributes0.getLineColour();
      lineAttributes0.setLineColour(color0);
      lineAttributes0.getStroke();
      lineAttributes0.getStroke();
      lineAttributes0.setLineColour(color1);
      LineAttributes.getStrokes();
      lineAttributes0.setLineColour(color1);
      lineAttributes0.getStroke();
      LineAttributes.getStrokes();
      lineAttributes0.setLineColour(color0);
      lineAttributes0.getLineColour();
      Color color2 = lineAttributes0.getLineColour();
      lineAttributes0.getPlotType();
      lineAttributes0.setLineColour(color2);
      lineAttributes0.getStroke();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<String> list0 = null;
      LineAttributes[] lineAttributesArray0 = null;
      JPanel jPanel0 = mock(JPanel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        LineAttributes.configurePlots((List<String>) null, (LineAttributes[]) null, jPanel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = null;
      LineAttributes lineAttributes0 = new LineAttributes((Color) null);
      lineAttributes0.setStroke((BasicStroke) null);
      lineAttributes0.setStroke((BasicStroke) null);
      lineAttributes0.setStroke((BasicStroke) null);
      lineAttributes0.getPlotType();
      LineAttributes.getStrokes();
      lineAttributes0.setStroke((BasicStroke) null);
      lineAttributes0.setStroke((BasicStroke) null);
      lineAttributes0.setStroke((BasicStroke) null);
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      lineAttributes0.setStroke((BasicStroke) null);
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      lineAttributes0.getStroke();
      lineAttributes0.getStroke();
      lineAttributes0.getPlotType();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Open";
      LineAttributes.PLOT_TYPES = stringArray0;
      lineAttributes0.setLineColour((Color) null);
      lineAttributes0.getLineColour();
      lineAttributes0.getLineColour();
      lineAttributes0.setLineColour((Color) null);
      lineAttributes0.getStroke();
      lineAttributes0.getStroke();
      lineAttributes0.setLineColour((Color) null);
      lineAttributes0.setLineColour((Color) null);
      // Undeclared exception!
      try { 
        LineAttributes.init((-1206));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      lineAttributes0.setStroke(basicStroke0);
      lineAttributes0.getStroke();
      LineAttributes.getStrokes();
      // Undeclared exception!
      try { 
        LineAttributes.init((-2294));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LineAttributes.init(1);
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      lineAttributes0.setStroke(basicStroke0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Select";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "R7D";
      LineAttributes.PLOT_TYPES = stringArray0;
      LineAttributes.init(2081);
      BasicStroke basicStroke1 = lineAttributes0.getStroke();
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      LineAttributes.init(0);
      Color color1 = mock(Color.class, new ViolatedAssumptionAnswer());
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      LineAttributes.PLOT_TYPES = lineAttributes0.PLOT_TYPES;
      lineAttributes0.setStroke(basicStroke0);
      lineAttributes0.setLineColour(color1);
      Color color2 = mock(Color.class, new ViolatedAssumptionAnswer());
      lineAttributes0.setLineColour(color2);
      lineAttributes0.getPlotType();
      // Undeclared exception!
      try { 
        LineAttributes.init((-453));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LineAttributes.init(0);
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      lineAttributes0.setStroke(basicStroke0);
      BasicStroke basicStroke1 = lineAttributes0.getStroke();
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      
      String string0 = lineAttributes0.getPlotType();
      assertEquals("Open", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LineAttributes.getStrokes();
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      List<String> list0 = null;
      LineAttributes[] lineAttributesArray0 = new LineAttributes[1];
      JPanel jPanel0 = mock(JPanel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        LineAttributes.configurePlots((List<String>) null, lineAttributesArray0, jPanel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      int int0 = (-397);
      // Undeclared exception!
      try { 
        LineAttributes.init((-397));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.alignment.LineAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(color0).toString();
      LineAttributes lineAttributes0 = new LineAttributes(color0);
      BasicStroke basicStroke0 = lineAttributes0.getStroke();
      lineAttributes0.setStroke(basicStroke0);
      lineAttributes0.setStroke(basicStroke0);
      lineAttributes0.getLineColour();
      lineAttributes0.getPlotType();
      LineAttributes[] lineAttributesArray0 = LineAttributes.init(0);
      assertEquals(0, lineAttributesArray0.length);
  }
}
