/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:03:28 GMT 2018
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.components.QualifierChoice;
import uk.ac.sanger.artemis.io.BlastEntryInformation;
import uk.ac.sanger.artemis.io.EntryInformation;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.KeyVector;
import uk.ac.sanger.artemis.io.QualifierInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QualifierChoice_ESTest extends QualifierChoice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Key key0 = blastEntryInformation0.getDefaultKey();
      QualifierChoice qualifierChoice0 = null;
      try {
        qualifierChoice0 = new QualifierChoice((EntryInformation) null, key0, "b,/{SlLpF|x@`.4", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.QualifierChoice", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Key key0 = blastEntryInformation0.getDefaultKey();
      KeyVector keyVector0 = new KeyVector(key0);
      QualifierInfo qualifierInfo0 = new QualifierInfo("CA~A", 0, keyVector0, keyVector0, false);
      blastEntryInformation0.addQualifierInfo(qualifierInfo0);
      QualifierChoice qualifierChoice0 = null;
      try {
        qualifierChoice0 = new QualifierChoice(blastEntryInformation0, key0, "CyXm{k{,lIT", false);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Key key0 = blastEntryInformation0.getDefaultKey();
      QualifierChoice qualifierChoice0 = null;
      try {
        qualifierChoice0 = new QualifierChoice(blastEntryInformation0, key0, "CyXm{k{,lIT", false);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BlastEntryInformation blastEntryInformation0 = new BlastEntryInformation();
      Key key0 = blastEntryInformation0.getDefaultKey();
      QualifierChoice qualifierChoice0 = null;
      try {
        qualifierChoice0 = new QualifierChoice((EntryInformation) null, key0, (String) null, true);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }
}
