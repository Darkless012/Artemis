/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 13:35:05 GMT 2018
 */

package org.gmod.schema.organism;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gmod.schema.organism.Organism;
import org.gmod.schema.organism.OrganismProp;
import org.gmod.schema.phylogeny.PhylonodeOrganism;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Organism_ESTest extends Organism_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setSpecies("+|_Np*y1onu");
      String string0 = organism0.getSpecies();
      assertEquals("+|_Np*y1onu", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setSpecies("");
      String string0 = organism0.getSpecies();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setOrganismId(16);
      int int0 = organism0.getOrganismId();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setOrganismId((-658));
      int int0 = organism0.getOrganismId();
      assertEquals((-658), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setGenus("null null");
      String string0 = organism0.getGenus();
      assertEquals("null null", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setGenus("");
      String string0 = organism0.getGenus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setCommonName("");
      String string0 = organism0.getCommonName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setComment("\"r#W4U|)M'$");
      String string0 = organism0.getComment();
      assertEquals("\"r#W4U|)M'$", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setComment("");
      String string0 = organism0.getComment();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setAbbreviation("");
      String string0 = organism0.getAbbreviation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getSpecies();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getGenus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getAbbreviation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Organism organism0 = new Organism();
      Set<OrganismProp> set0 = organism0.getOrganismProps();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setAbbreviation("org.gmod.schema.phylogeny.PhylonodeOrganism");
      String string0 = organism0.getAbbreviation();
      assertEquals("org.gmod.schema.phylogeny.PhylonodeOrganism", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Organism organism0 = new Organism();
      int int0 = organism0.getOrganismId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Organism organism0 = new Organism();
      Set<PhylonodeOrganism> set0 = organism0.getPhylonodeOrganisms();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getCommonName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setCommonName("org.gmod.schema.phylogeny.PhylonodeOrganism");
      String string0 = organism0.getCommonName();
      assertEquals("org.gmod.schema.phylogeny.PhylonodeOrganism", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Organism organism0 = new Organism();
      String string0 = organism0.getFullName();
      assertEquals("null null", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Organism organism0 = new Organism();
      organism0.setPhylonodeOrganisms((Set<PhylonodeOrganism>) null);
      Set<PhylonodeOrganism> set0 = organism0.getPhylonodeOrganisms();
      assertNull(set0);
  }
}
