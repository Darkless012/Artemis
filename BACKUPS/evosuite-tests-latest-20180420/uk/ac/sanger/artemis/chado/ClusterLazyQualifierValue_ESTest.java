/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 11:23:51 GMT 2018
 */

package uk.ac.sanger.artemis.chado;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.util.LinkedList;
import javax.swing.JPasswordField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.chado.ClusterLazyQualifierValue;
import uk.ac.sanger.artemis.io.BlastDocumentEntry;
import uk.ac.sanger.artemis.io.GFFStreamFeature;
import uk.ac.sanger.artemis.util.DatabaseDocument;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ClusterLazyQualifierValue_ESTest extends ClusterLazyQualifierValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue((String) null, (String) null, (GFFStreamFeature) null);
      clusterLazyQualifierValue0.getValue();
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("M]-!H{_", "", (GFFStreamFeature) null);
      String string0 = clusterLazyQualifierValue0.getValue();
      assertEquals("M]-!H{_", string0);
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue((String) null, (String) null, (GFFStreamFeature) null);
      clusterLazyQualifierValue0.getString();
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("7it.)/ e3D;TGWg1", "7it.)/ e3D;TGWg1", (GFFStreamFeature) null);
      clusterLazyQualifierValue0.getString();
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      StringVector stringVector0 = new StringVector(stringArray0);
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument(" as a qualifier", jPasswordField0, " as a qualifier", "");
      // Undeclared exception!
      try { 
        ClusterLazyQualifierValue.setClusterFromValueList(stringVector0, databaseDocument0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to uk.ac.sanger.artemis.chado.ClusterLazyQualifierValue
         //
         verifyException("uk.ac.sanger.artemis.chado.ClusterLazyQualifierValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<BlastDocumentEntry> linkedList0 = new LinkedList<BlastDocumentEntry>();
      JPasswordField jPasswordField0 = new JPasswordField("getLazyFeatureExact");
      DatabaseDocument databaseDocument0 = new DatabaseDocument("", jPasswordField0);
      // Undeclared exception!
      try { 
        ClusterLazyQualifierValue.setClusterFromValueList(linkedList0, databaseDocument0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[4];
      StringVector stringVector0 = new StringVector(stringArray0);
      JPasswordField jPasswordField0 = new JPasswordField();
      DatabaseDocument databaseDocument0 = new DatabaseDocument(" as a qualifier", jPasswordField0, " as a qualifier", "");
      // Undeclared exception!
      try { 
        ClusterLazyQualifierValue.setClusterFromValueList(stringVector0, databaseDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.chado.ClusterLazyQualifierValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("M]-!H{_", "", (GFFStreamFeature) null);
      clusterLazyQualifierValue0.setForceLoad(true);
      // Undeclared exception!
      try { 
        clusterLazyQualifierValue0.getString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.chado.ClusterLazyQualifierValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("", "", (GFFStreamFeature) null);
      clusterLazyQualifierValue0.getString();
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("", "", (GFFStreamFeature) null);
      clusterLazyQualifierValue0.setLoadGeneName(false);
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("", "", (GFFStreamFeature) null);
      clusterLazyQualifierValue0.getValue();
      assertFalse(clusterLazyQualifierValue0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClusterLazyQualifierValue clusterLazyQualifierValue0 = new ClusterLazyQualifierValue("", "", (GFFStreamFeature) null);
      boolean boolean0 = clusterLazyQualifierValue0.isLazyLoaded();
      assertFalse(boolean0);
  }
}
