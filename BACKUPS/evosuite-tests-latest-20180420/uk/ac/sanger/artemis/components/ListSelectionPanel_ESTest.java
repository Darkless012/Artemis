/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:31:34 GMT 2018
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.EntryGroup;
import uk.ac.sanger.artemis.SimpleEntryGroup;
import uk.ac.sanger.artemis.components.ListSelectionPanel;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Sequence;
import uk.ac.sanger.artemis.sequence.Bases;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ListSelectionPanel_ESTest extends ListSelectionPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Entry entry0 = Entry.newEntry((Bases) null);
      EntryGroup entryGroup0 = mock(EntryGroup.class, new ViolatedAssumptionAnswer());
      doReturn(entry0).when(entryGroup0).elementAt(anyInt());
      doReturn(entry0).when(entryGroup0).getDefaultEntry();
      Object[] objectArray0 = new Object[2];
      String[] stringArray0 = new String[7];
      Key key0 = mock(Key.class, new ViolatedAssumptionAnswer());
      ListSelectionPanel listSelectionPanel0 = null;
      try {
        listSelectionPanel0 = new ListSelectionPanel(entryGroup0, objectArray0, stringArray0, true, key0, "fasta_record");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Entry entry0 = Entry.newEntry((Bases) null);
      EntryGroup entryGroup0 = mock(EntryGroup.class, new ViolatedAssumptionAnswer());
      doReturn((Entry) null).when(entryGroup0).elementAt(anyInt());
      doReturn(entry0).when(entryGroup0).getDefaultEntry();
      Object[] objectArray0 = new Object[2];
      String[] stringArray0 = new String[7];
      Key key0 = mock(Key.class, new ViolatedAssumptionAnswer());
      ListSelectionPanel listSelectionPanel0 = null;
      try {
        listSelectionPanel0 = new ListSelectionPanel(entryGroup0, objectArray0, stringArray0, true, key0, "fasta_record");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.ListSelectionPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bases bases0 = new Bases((Sequence) null);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup(bases0);
      simpleEntryGroup0.createEntry();
      Object[] objectArray0 = new Object[2];
      String[] stringArray0 = new String[1];
      ListSelectionPanel listSelectionPanel0 = null;
      try {
        listSelectionPanel0 = new ListSelectionPanel(simpleEntryGroup0, objectArray0, stringArray0, false);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bases bases0 = new Bases((Sequence) null);
      SimpleEntryGroup simpleEntryGroup0 = new SimpleEntryGroup(bases0);
      Object[] objectArray0 = new Object[2];
      String[] stringArray0 = new String[1];
      ListSelectionPanel listSelectionPanel0 = null;
      try {
        listSelectionPanel0 = new ListSelectionPanel(simpleEntryGroup0, objectArray0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.ListSelectionPanel", e);
      }
  }
}
