/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:42:04 GMT 2018
 */

package uk.ac.sanger.artemis.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.MouseEvent;
import javax.swing.JDesktopPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Entry;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.FeatureVector;
import uk.ac.sanger.artemis.editor.EvidenceViewer;
import uk.ac.sanger.artemis.io.GenbankStreamSequence;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.sequence.Bases;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class EvidenceViewer_ESTest extends EvidenceViewer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      doReturn((Location) null).when(feature0).getLocation();
      FeatureVector featureVector0 = mock(FeatureVector.class, new ViolatedAssumptionAnswer());
      JDesktopPane jDesktopPane0 = mock(JDesktopPane.class, new ViolatedAssumptionAnswer());
      EvidenceViewer evidenceViewer0 = null;
      try {
        evidenceViewer0 = new EvidenceViewer(feature0, featureVector0, jDesktopPane0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.editor.EvidenceViewer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenbankStreamSequence genbankStreamSequence0 = new GenbankStreamSequence("1~F*/N");
      Bases bases0 = new Bases(genbankStreamSequence0);
      Entry entry0 = Entry.newEntry(bases0);
      Feature feature0 = entry0.createFeature();
      FeatureVector featureVector0 = entry0.checkForEMBLDuplicates();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      EvidenceViewer evidenceViewer0 = new EvidenceViewer(feature0, featureVector0, jDesktopPane0);
      EvidenceViewer.MouseClickListener evidenceViewer_MouseClickListener0 = evidenceViewer0.new MouseClickListener();
      MouseEvent mouseEvent0 = new MouseEvent(jDesktopPane0, 5, 2, 0, 1, 0, 0, false, 0);
      evidenceViewer_MouseClickListener0.mouseClicked(mouseEvent0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenbankStreamSequence genbankStreamSequence0 = new GenbankStreamSequence("1~F*/N");
      Bases bases0 = new Bases(genbankStreamSequence0);
      Entry entry0 = Entry.newEntry(bases0);
      Feature feature0 = entry0.createFeature();
      FeatureVector featureVector0 = entry0.checkForEMBLDuplicates();
      JDesktopPane jDesktopPane0 = new JDesktopPane();
      EvidenceViewer evidenceViewer0 = new EvidenceViewer(feature0, featureVector0, jDesktopPane0);
      EvidenceViewer.MouseClickListener evidenceViewer_MouseClickListener0 = evidenceViewer0.new MouseClickListener();
      MouseEvent mouseEvent0 = new MouseEvent(jDesktopPane0, 5, 2, 0, 1, 0, 0, false, 0);
      evidenceViewer_MouseClickListener0.mouseReleased(mouseEvent0);
  }
}
