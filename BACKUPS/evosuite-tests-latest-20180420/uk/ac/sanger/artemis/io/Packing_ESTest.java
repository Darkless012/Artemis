/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:29:44 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.Packing;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Packing_ESTest extends Packing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[3];
      Packing.bases = charArray0;
      char char0 = Packing.unpack(0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      Packing.bases = charArray0;
      char char0 = Packing.unpack(0);
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char char0 = Packing.unpack((byte)15);
      assertEquals('n', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte byte0 = Packing.pack('u');
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Packing.bases = null;
      // Undeclared exception!
      try { 
        Packing.unpack((-1032));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.Packing", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Packing.bases = null;
      // Undeclared exception!
      try { 
        Packing.pack('[');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.Packing", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte byte0 = Packing.pack('y');
      assertEquals((byte)9, byte0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte byte0 = Packing.pack('n');
      assertEquals((byte)15, byte0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte byte0 = Packing.pack('t');
      assertEquals((byte)8, byte0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte byte0 = Packing.pack('c');
      assertEquals((byte)4, byte0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte byte0 = Packing.pack('g');
      assertEquals((byte)2, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte byte0 = Packing.pack('a');
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte byte0 = Packing.pack('[');
      assertEquals((byte)15, byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Packing.unpack((-1032));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1032
         //
         verifyException("uk.ac.sanger.artemis.io.Packing", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Packing packing0 = new Packing((char[]) null);
      byte byte0 = packing0.wordSize();
      assertEquals((byte)4, byte0);
  }
}
