/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 12:11:54 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.DocumentEntry;
import uk.ac.sanger.artemis.io.DocumentEntryAutosaveThread;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DocumentEntryAutosaveThread_ESTest extends DocumentEntryAutosaveThread_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentEntryAutosaveThread documentEntryAutosaveThread0 = new DocumentEntryAutosaveThread((DocumentEntry) null);
      assertNotNull(documentEntryAutosaveThread0);
      
      DocumentEntryAutosaveThread documentEntryAutosaveThread1 = new DocumentEntryAutosaveThread((DocumentEntry) null);
      assertFalse(documentEntryAutosaveThread1.equals((Object)documentEntryAutosaveThread0));
      assertNotNull(documentEntryAutosaveThread1);
      
      ThreadGroup threadGroup0 = (ThreadGroup)documentEntryAutosaveThread1.getUncaughtExceptionHandler();
      assertFalse(documentEntryAutosaveThread1.equals((Object)documentEntryAutosaveThread0));
      assertEquals(0, documentEntryAutosaveThread1.countStackFrames());
      assertFalse(documentEntryAutosaveThread1.isDaemon());
      assertFalse(documentEntryAutosaveThread1.isInterrupted());
      assertEquals("Test_Execution_Group", threadGroup0.getName());
      assertNotNull(threadGroup0);
      assertNotSame(documentEntryAutosaveThread1, documentEntryAutosaveThread0);
      
      MockThread.setDefaultUncaughtExceptionHandler(threadGroup0);
      assertFalse(documentEntryAutosaveThread1.equals((Object)documentEntryAutosaveThread0));
      assertEquals(0, documentEntryAutosaveThread1.countStackFrames());
      assertFalse(documentEntryAutosaveThread1.isDaemon());
      assertFalse(documentEntryAutosaveThread1.isInterrupted());
      assertEquals("Test_Execution_Group", threadGroup0.getName());
      assertNotSame(documentEntryAutosaveThread1, documentEntryAutosaveThread0);
      
      ClassLoader classLoader0 = documentEntryAutosaveThread1.getContextClassLoader();
      assertFalse(documentEntryAutosaveThread1.equals((Object)documentEntryAutosaveThread0));
      assertEquals(0, documentEntryAutosaveThread1.countStackFrames());
      assertFalse(documentEntryAutosaveThread1.isDaemon());
      assertFalse(documentEntryAutosaveThread1.isInterrupted());
      assertNotNull(classLoader0);
      assertNotSame(documentEntryAutosaveThread1, documentEntryAutosaveThread0);
      
      documentEntryAutosaveThread0.setContextClassLoader(classLoader0);
      assertFalse(documentEntryAutosaveThread0.equals((Object)documentEntryAutosaveThread1));
      assertFalse(documentEntryAutosaveThread1.equals((Object)documentEntryAutosaveThread0));
      assertFalse(documentEntryAutosaveThread0.isInterrupted());
      assertFalse(documentEntryAutosaveThread0.isDaemon());
      assertEquals(0, documentEntryAutosaveThread0.countStackFrames());
      assertEquals(0, documentEntryAutosaveThread1.countStackFrames());
      assertFalse(documentEntryAutosaveThread1.isDaemon());
      assertFalse(documentEntryAutosaveThread1.isInterrupted());
      assertNotSame(documentEntryAutosaveThread0, documentEntryAutosaveThread1);
      assertNotSame(documentEntryAutosaveThread1, documentEntryAutosaveThread0);
      
      // Undeclared exception!
      try { 
        documentEntryAutosaveThread0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.DocumentEntryAutosaveThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentEntry documentEntry0 = mock(DocumentEntry.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(documentEntry0).getName();
      DocumentEntryAutosaveThread documentEntryAutosaveThread0 = new DocumentEntryAutosaveThread(documentEntry0);
      assertNotNull(documentEntryAutosaveThread0);
      
      boolean boolean0 = MockThread.interrupted();
      assertFalse(boolean0);
      
      StackTraceElement[] stackTraceElementArray0 = documentEntryAutosaveThread0.getStackTrace();
      assertEquals(3, stackTraceElementArray0.length);
      assertFalse(documentEntryAutosaveThread0.isInterrupted());
      assertFalse(documentEntryAutosaveThread0.isDaemon());
      assertEquals(0, documentEntryAutosaveThread0.countStackFrames());
      assertNotNull(stackTraceElementArray0);
      
      // Undeclared exception!
      documentEntryAutosaveThread0.run();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentEntry documentEntry0 = mock(DocumentEntry.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(documentEntry0).getName();
      DocumentEntryAutosaveThread documentEntryAutosaveThread0 = new DocumentEntryAutosaveThread(documentEntry0);
      // Undeclared exception!
      documentEntryAutosaveThread0.run();
  }
}
