/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 11:59:16 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.Feature;
import uk.ac.sanger.artemis.io.GFFStreamFeature;
import uk.ac.sanger.artemis.io.GFFUtils;
import uk.ac.sanger.artemis.io.Key;
import uk.ac.sanger.artemis.io.Location;
import uk.ac.sanger.artemis.io.QualifierVector;
import uk.ac.sanger.artemis.io.Range;
import uk.ac.sanger.artemis.io.RangeVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GFFUtils_ESTest extends GFFUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
      doReturn((RangeVector) null, (RangeVector) null).when(location0).getRanges();
      // Undeclared exception!
      try { 
        GFFUtils.updateSegmentRangeStore((GFFStreamFeature) null, location0, location0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.GFFUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Key key0 = Key.CDS;
      assertEquals("CDS", key0.toString());
      assertEquals(3, key0.length());
      assertEquals("CDS", key0.getKeyString());
      assertNotNull(key0);
      
      Range range0 = new Range(2361);
      assertEquals(1, range0.getCount());
      assertEquals(2361, range0.getStart());
      assertEquals(2361, range0.getEnd());
      assertNotNull(range0);
      
      Location location0 = new Location(range0);
      assertEquals(1, range0.getCount());
      assertEquals(2361, range0.getStart());
      assertEquals(2361, range0.getEnd());
      assertNotNull(location0);
      
      GFFStreamFeature gFFStreamFeature0 = new GFFStreamFeature(key0, location0, (QualifierVector) null);
      assertEquals("CDS", key0.toString());
      assertEquals(3, key0.length());
      assertEquals("CDS", key0.getKeyString());
      assertEquals(1, range0.getCount());
      assertEquals(2361, range0.getStart());
      assertEquals(2361, range0.getEnd());
      assertNull(gFFStreamFeature0.getGffSeqName());
      assertTrue(gFFStreamFeature0.isVisible());
      assertNull(gFFStreamFeature0.getGffSource());
      assertFalse(gFFStreamFeature0.isReadOnly());
      assertFalse(gFFStreamFeature0.isLazyLoaded());
      assertNotNull(gFFStreamFeature0);
      
      GFFUtils.updateSegmentRangeStore(gFFStreamFeature0, location0, location0);
      assertEquals("CDS", key0.toString());
      assertEquals(3, key0.length());
      assertEquals("CDS", key0.getKeyString());
      assertEquals(1, range0.getCount());
      assertEquals(2361, range0.getStart());
      assertEquals(2361, range0.getEnd());
      assertNull(gFFStreamFeature0.getGffSeqName());
      assertTrue(gFFStreamFeature0.isVisible());
      assertNull(gFFStreamFeature0.getGffSource());
      assertFalse(gFFStreamFeature0.isReadOnly());
      assertFalse(gFFStreamFeature0.isLazyLoaded());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = GFFUtils.isSelenocysteine((Feature) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Key key0 = Key.CDS;
      Range range0 = new Range(2361);
      Location location0 = new Location(range0);
      GFFStreamFeature gFFStreamFeature0 = new GFFStreamFeature(key0, location0, (QualifierVector) null);
      GFFUtils.isSelenocysteine(gFFStreamFeature0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GFFUtils gFFUtils0 = new GFFUtils();
  }
}
