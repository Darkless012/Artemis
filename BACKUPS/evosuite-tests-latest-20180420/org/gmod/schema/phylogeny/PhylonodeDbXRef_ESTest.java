/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 13:21:47 GMT 2018
 */

package org.gmod.schema.phylogeny;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.general.DbXRef;
import org.gmod.schema.phylogeny.Phylonode;
import org.gmod.schema.phylogeny.PhylonodeDbXRef;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class PhylonodeDbXRef_ESTest extends PhylonodeDbXRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setPhylonodeDbXRefId(2772);
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals(2772, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setPhylonodeDbXRefId((-127));
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals((-127), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      DbXRef dbXRef0 = phylonodeDbXRef0.getDbXRef();
      assertNull(dbXRef0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DbXRef dbXRef0 = mock(DbXRef.class, new ViolatedAssumptionAnswer());
      Phylonode phylonode0 = mock(Phylonode.class, new ViolatedAssumptionAnswer());
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef(16, dbXRef0, phylonode0);
      assertEquals(16, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setDbXRef((DbXRef) null);
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      phylonodeDbXRef0.setPhylonode((Phylonode) null);
      assertEquals(0, phylonodeDbXRef0.getPhylonodeDbXRefId());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      int int0 = phylonodeDbXRef0.getPhylonodeDbXRefId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PhylonodeDbXRef phylonodeDbXRef0 = new PhylonodeDbXRef();
      Phylonode phylonode0 = phylonodeDbXRef0.getPhylonode();
      assertNull(phylonode0);
  }
}
