/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 13:29:18 GMT 2018
 */

package org.gmod.schema.sequence;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gmod.schema.sequence.Feature;
import org.gmod.schema.sequence.FeatureLoc;
import org.gmod.schema.sequence.FeatureLocPub;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class FeatureLoc_ESTest extends FeatureLoc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFmaxPartial(true);
      boolean boolean0 = featureLoc0.isFmaxPartial();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-352));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc(feature0, feature0, integer0, false, integer0, false, short0, integer0, 0, 0);
      featureLoc0.getStrand();
      assertFalse(featureLoc0.isFminPartial());
      assertFalse(featureLoc0.isFmaxPartial());
      assertEquals(0, featureLoc0.getLocGroup());
      assertEquals(0, featureLoc0.getRank());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(793);
      Short short0 = new Short((short)1);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, (Integer) null, true, integer0, false, short0, integer0, (short)1, 0);
      featureLoc0.getStrand();
      assertTrue(featureLoc0.isFminPartial());
      assertEquals(0, featureLoc0.getRank());
      assertEquals(1, featureLoc0.getLocGroup());
      assertFalse(featureLoc0.isFmaxPartial());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-2613));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, integer0, false, integer0, false, short0, integer0, (-1292), 968);
      Short short1 = new Short((short) (-1));
      featureLoc0.setStrand(short1);
      featureLoc0.getStrand();
      assertFalse(featureLoc0.isFminPartial());
      assertEquals(968, featureLoc0.getRank());
      assertEquals((-1292), featureLoc0.getLocGroup());
      assertFalse(featureLoc0.isFmaxPartial());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setSrcFeatureId(5);
      int int0 = featureLoc0.getSrcFeatureId();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setSrcFeatureId((-793));
      int int0 = featureLoc0.getSrcFeatureId();
      assertEquals((-793), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(793);
      Short short0 = new Short((short)1);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, (Integer) null, true, integer0, false, short0, integer0, (short)1, 0);
      featureLoc0.setResidueInfo("PE}Jv-mlf}hD<fX");
      featureLoc0.getResidueInfo();
      assertEquals(1, featureLoc0.getLocGroup());
      assertFalse(featureLoc0.isFmaxPartial());
      assertEquals(0, featureLoc0.getRank());
      assertTrue(featureLoc0.isFminPartial());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setResidueInfo("");
      String string0 = featureLoc0.getResidueInfo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setRank(936);
      int int0 = featureLoc0.getRank();
      assertEquals(936, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(4049);
      Short short0 = new Short((short)1);
      FeatureLoc featureLoc0 = new FeatureLoc(feature0, feature0, integer0, true, integer0, true, short0, integer0, (-1084), (-1084));
      int int0 = featureLoc0.getRank();
      assertEquals((-1084), featureLoc0.getLocGroup());
      assertTrue(featureLoc0.isFminPartial());
      assertTrue(featureLoc0.isFmaxPartial());
      assertEquals((-1084), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(995);
      featureLoc0.setPhase(integer0);
      Integer integer1 = featureLoc0.getPhase();
      assertEquals(995, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(0);
      featureLoc0.setPhase(integer0);
      Integer integer1 = featureLoc0.getPhase();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer((-196));
      featureLoc0.setPhase(integer0);
      Integer integer1 = featureLoc0.getPhase();
      assertEquals((-196), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2613));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, integer0, false, integer0, false, short0, integer0, (-1292), 968);
      int int0 = featureLoc0.getLocGroup();
      assertEquals((-1292), int0);
      assertFalse(featureLoc0.isFmaxPartial());
      assertFalse(featureLoc0.isFminPartial());
      assertEquals(968, featureLoc0.getRank());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(16);
      featureLoc0.setFmin(integer0);
      Integer integer1 = featureLoc0.getFmin();
      assertEquals(16, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(0);
      featureLoc0.setFmin(integer0);
      Integer integer1 = featureLoc0.getFmin();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer((-2519));
      featureLoc0.setFmin(integer0);
      Integer integer1 = featureLoc0.getFmin();
      assertEquals((-2519), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-2613));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, integer0, false, integer0, false, short0, integer0, (-1292), 968);
      featureLoc0.getFmin();
      assertFalse(featureLoc0.isFmaxPartial());
      assertEquals(968, featureLoc0.getRank());
      assertEquals((-1292), featureLoc0.getLocGroup());
      assertFalse(featureLoc0.isFminPartial());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(0);
      featureLoc0.setFmax(integer0);
      Integer integer1 = featureLoc0.getFmax();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = new Integer(16);
      featureLoc0.setFmax(integer0);
      Integer integer1 = featureLoc0.getFmax();
      assertEquals(16, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer((-2613));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc((Feature) null, (Feature) null, integer0, false, integer0, false, short0, integer0, (-1292), 968);
      featureLoc0.getFmax();
      assertFalse(featureLoc0.isFminPartial());
      assertEquals((-1292), featureLoc0.getLocGroup());
      assertEquals(968, featureLoc0.getRank());
      assertFalse(featureLoc0.isFmaxPartial());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-352));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc(feature0, feature0, integer0, false, integer0, false, short0, integer0, 0, 0);
      featureLoc0.setFeaturelocPubs((Set<FeatureLocPub>) null);
      featureLoc0.getFeatureLocPubs();
      assertFalse(featureLoc0.isFmaxPartial());
      assertEquals(0, featureLoc0.getRank());
      assertEquals(0, featureLoc0.getLocGroup());
      assertFalse(featureLoc0.isFminPartial());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFeatureLocId(432);
      int int0 = featureLoc0.getFeatureLocId();
      assertEquals(432, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFeatureLocId((-1716));
      int int0 = featureLoc0.getFeatureLocId();
      assertEquals((-1716), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setLocGroup(1567);
      int int0 = featureLoc0.getLocGroup();
      assertEquals(1567, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      int int0 = featureLoc0.getFeatureLocId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      int int0 = featureLoc0.getSrcFeatureId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      int int0 = featureLoc0.getRank();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Short short0 = featureLoc0.getStrand();
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = featureLoc0.getFmin();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFminPartial(true);
      boolean boolean0 = featureLoc0.isFminPartial();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFeatureBySrcFeatureId((Feature) null);
      assertFalse(featureLoc0.isFmaxPartial());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = featureLoc0.getPhase();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      boolean boolean0 = featureLoc0.isFmaxPartial();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Feature feature0 = featureLoc0.getFeatureByFeatureId();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Integer integer0 = featureLoc0.getFmax();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      boolean boolean0 = featureLoc0.isFminPartial();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      int int0 = featureLoc0.getLocGroup();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Feature feature0 = featureLoc0.getFeatureBySrcFeatureId();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      featureLoc0.setFeatureByFeatureId((Feature) null);
      assertNull(featureLoc0.getStrand());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FeatureLoc featureLoc0 = new FeatureLoc();
      Set<FeatureLocPub> set0 = featureLoc0.getFeatureLocPubs();
      featureLoc0.setFeaturelocPubs(set0);
      assertEquals(0, featureLoc0.getRank());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Feature feature0 = mock(Feature.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1));
      Short short0 = new Short((short)0);
      FeatureLoc featureLoc0 = new FeatureLoc(feature0, feature0, integer0, true, integer0, true, short0, integer0, (-1), (-1));
      featureLoc0.getResidueInfo();
      assertTrue(featureLoc0.isFmaxPartial());
      assertEquals((-1), featureLoc0.getLocGroup());
      assertEquals((-1), featureLoc0.getRank());
      assertTrue(featureLoc0.isFminPartial());
  }
}
