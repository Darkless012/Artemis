/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 11:15:51 GMT 2018
 */

package uk.ac.sanger.artemis.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.util.Vector;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.Feature;
import uk.ac.sanger.artemis.components.FeaturePlot;
import uk.ac.sanger.artemis.components.Plot;
import uk.ac.sanger.artemis.plot.CoilFeatureAlgorithm;
import uk.ac.sanger.artemis.plot.EntropyAlgorithm;
import uk.ac.sanger.artemis.plot.HydrophobicityAlgorithm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Plot_ESTest extends Plot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector<EntropyAlgorithm> vector0 = new Vector<EntropyAlgorithm>();
      JTable jTable0 = new JTable(vector0, vector0);
      Color color0 = jTable0.getSelectionBackground();
      Color[] colorArray0 = Plot.makeColours(color0, 0);
      assertEquals(0, colorArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Color color0 = Color.orange;
      // Undeclared exception!
      try { 
        Plot.makeColours(color0, (-2488));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JTable jTable0 = new JTable();
      Color color0 = jTable0.getSelectionBackground();
      Color[] colorArray0 = Plot.makeColours(color0, 603);
      assertEquals(603, colorArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HydrophobicityAlgorithm hydrophobicityAlgorithm0 = new HydrophobicityAlgorithm((Feature) null);
      FeaturePlot featurePlot0 = null;
      try {
        featurePlot0 = new FeaturePlot(hydrophobicityAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.FeaturePlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CoilFeatureAlgorithm coilFeatureAlgorithm0 = new CoilFeatureAlgorithm((Feature) null);
      FeaturePlot featurePlot0 = null;
      try {
        featurePlot0 = new FeaturePlot(coilFeatureAlgorithm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.components.FeaturePlot", e);
      }
  }
}
