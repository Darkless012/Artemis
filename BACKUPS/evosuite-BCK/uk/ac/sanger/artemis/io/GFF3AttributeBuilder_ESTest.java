/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 10 11:55:35 GMT 2018
 */

package uk.ac.sanger.artemis.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uk.ac.sanger.artemis.io.GFF3AttributeAggregator;
import uk.ac.sanger.artemis.io.GFF3AttributeBuilder;
import uk.ac.sanger.artemis.util.StringVector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GFF3AttributeBuilder_ESTest extends GFF3AttributeBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add((String) null, "%25");
      // Undeclared exception!
      try { 
        gFF3AttributeBuilder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.GFF3AttributeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      // Undeclared exception!
      try { 
        gFF3AttributeBuilder0.add("uk.ac.sanger.artemis.io.GFF3AttributeBuilder$2", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sanger.artemis.io.GFF3AttributeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setClone((String) null, "Alias");
      gFF3AttributeBuilder0.setMapping("", (String) null);
      gFF3AttributeBuilder0.add("", (StringVector) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setMapping("", (String) null);
      gFF3AttributeBuilder0.add("", (StringVector) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setClone((String) null, "p)/_[&Tf^U");
      gFF3AttributeBuilder0.add((String) null, (StringVector) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add("q\"BpqLv'Y!&Kl`@_[)+", "q\"BpqLv'Y!&Kl`@_[)+");
      gFF3AttributeBuilder0.ignore("q\"BpqLv'Y!&Kl`@_[)+");
      String string0 = gFF3AttributeBuilder0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add("", "ID");
      gFF3AttributeBuilder0.add("ID", "ID");
      // Undeclared exception!
      try { 
        gFF3AttributeBuilder0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add("length must be valid", "P4>8R;xPIW6#ZST/&");
      gFF3AttributeBuilder0.add("GO.", "length must be valid");
      String string0 = gFF3AttributeBuilder0.toString();
      assertEquals("gO.=length must be valid;length must be valid=P4>8R%3BxPIW6#ZST/%26", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add("q\"BpqLv'Y!&Kl`@_[)+", "q\"BpqLv'Y!&Kl`@_[)+");
      String string0 = gFF3AttributeBuilder0.get("q\"BpqLv'Y!&Kl`@_[)+");
      assertEquals("q\"BpqLv'Y!%26Kl`@_[)+", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      try { 
        gFF3AttributeBuilder0.get("sj1NGXWGs5EGj?yZn");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // empty attribute value for sj1NGXWGs5EGj?yZn
         //
         verifyException("uk.ac.sanger.artemis.io.GFF3AttributeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setGlue("uk.ac.sanger.artemis.io.GFF3AttributeBuilder", " ");
      gFF3AttributeBuilder0.setClone("", "uk.ac.sanger.artemis.io.GFF3AttributeBuilder");
      gFF3AttributeBuilder0.setMapping("", "");
      gFF3AttributeBuilder0.add("", "Cannot pad a negative amount: ");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.add("aggQa(fY(", "");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setClone("", "uk.ac.sanger.artemis.io.GFF3AttributeBuilder");
      gFF3AttributeBuilder0.setMapping("", "");
      gFF3AttributeBuilder0.add("", "Cannot pad a negative amount: ");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.setMapping("", (String) null);
      try { 
        gFF3AttributeBuilder0.get("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // empty attribute value for null
         //
         verifyException("uk.ac.sanger.artemis.io.GFF3AttributeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.unignore("D|HSax]}@#");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.unsetClone("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.unsetGlue("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GFF3AttributeBuilder gFF3AttributeBuilder0 = new GFF3AttributeBuilder();
      gFF3AttributeBuilder0.unsetMapping((String) null, "Gap");
  }
}
